
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend.
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_icache.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_icache.v' to AST representation.
Generating RTLIL representation for module `\ibex_icache'.
Warning: Replacing memory \fill_data_q with list of registers. See /openLANE_flow/designs/ibex/src/ibex_icache.v:509
Warning: Replacing memory \fill_way_q with list of registers. See /openLANE_flow/designs/ibex/src/ibex_icache.v:496
Warning: Replacing memory \fill_addr_q with list of registers. See /openLANE_flow/designs/ibex/src/ibex_icache.v:493
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_controller.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_controller.v' to AST representation.
Generating RTLIL representation for module `\ibex_controller'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_multdiv_slow.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_multdiv_slow.v' to AST representation.
Generating RTLIL representation for module `\ibex_multdiv_slow'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_core.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_core.v' to AST representation.
Generating RTLIL representation for module `\ibex_core'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_register_file_latch.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_register_file_latch.v' to AST representation.
Generating RTLIL representation for module `\ibex_register_file_latch'.
Warning: Replacing memory \mem with list of registers. See /openLANE_flow/designs/ibex/src/ibex_register_file_latch.v:111, /openLANE_flow/designs/ibex/src/ibex_register_file_latch.v:87
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v' to AST representation.
Generating RTLIL representation for module `\ibex_fetch_fifo'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_decoder.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_decoder.v' to AST representation.
Generating RTLIL representation for module `\ibex_decoder'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_core_tracing.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_core_tracing.v' to AST representation.
Generating RTLIL representation for module `\ibex_core_tracing'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v' to AST representation.
Generating RTLIL representation for module `\ibex_prefetch_buffer'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_register_file_ff.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v' to AST representation.
Generating RTLIL representation for module `\ibex_register_file_ff'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_branch_predict.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_branch_predict.v' to AST representation.
Generating RTLIL representation for module `\ibex_branch_predict'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_csr.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_csr.v' to AST representation.
Generating RTLIL representation for module `\ibex_csr'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_wb_stage.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_wb_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_wb_stage'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v' to AST representation.
Generating RTLIL representation for module `\ibex_multdiv_fast'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_load_store_unit.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v' to AST representation.
Generating RTLIL representation for module `\ibex_load_store_unit'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_alu.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_alu.v' to AST representation.
Generating RTLIL representation for module `\ibex_alu'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_pmp.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_pmp.v' to AST representation.
Generating RTLIL representation for module `\ibex_pmp'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/prim_clock_gating.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/prim_clock_gating.v' to AST representation.
Generating RTLIL representation for module `\prim_clock_gating'.
/openLANE_flow/designs/ibex/src/prim_clock_gating.v:7: Warning: Identifier `\en_latch' is implicitly declared.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_cs_registers.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_cs_registers.v' to AST representation.
Generating RTLIL representation for module `\ibex_cs_registers'.
Warning: Replacing memory \mhpmevent with list of registers. See /openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1122
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v' to AST representation.
Generating RTLIL representation for module `\ibex_compressed_decoder'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_if_stage.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_if_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_if_stage'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_dummy_instr.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_dummy_instr.v' to AST representation.
Generating RTLIL representation for module `\ibex_dummy_instr'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_id_stage.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_id_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_id_stage'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_ex_block.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_ex_block.v' to AST representation.
Generating RTLIL representation for module `\ibex_ex_block'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_counter.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_counter.v' to AST representation.
Generating RTLIL representation for module `\ibex_counter'.
Successfully finished Verilog frontend.

27. Executing HIERARCHY pass (managing design hierarchy).

27.1. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     \ibex_register_file_ff
Used module:     \ibex_cs_registers
Used module:         \ibex_counter
Used module:         \ibex_csr
Used module:     \ibex_wb_stage
Used module:     \ibex_load_store_unit
Used module:     \ibex_ex_block
Used module:         \ibex_multdiv_fast
Used module:         \ibex_alu
Used module:     \ibex_id_stage
Used module:         \ibex_controller
Used module:         \ibex_decoder
Used module:     \ibex_if_stage
Used module:         \ibex_prefetch_buffer
Used module:             \ibex_fetch_fifo
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Parameter \RV32E = 1'0
Parameter \DataWidth = 32
Parameter \DummyInstructions = 1'0

27.2. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_register_file_ff'.
Parameter \RV32E = 1'0
Parameter \DataWidth = 32
Parameter \DummyInstructions = 1'0
Generating RTLIL representation for module `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0'.
Parameter \DbgTriggerEn = 1'0
Parameter \DbgHwBreakNum = 1
Parameter \DataIndTiming = 1'0
Parameter \DummyInstructions = 1'0
Parameter \ShadowCSR = 1'0
Parameter \ICache = 1'0
Parameter \MHPMCounterNum = 0
Parameter \MHPMCounterWidth = 40
Parameter \PMPEnable = 1'0
Parameter \PMPGranularity = 0
Parameter \PMPNumRegions = 4
Parameter \RV32E = 1'0
Parameter \RV32M = 2

27.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_cs_registers'.
Parameter \DbgTriggerEn = 1'0
Parameter \DbgHwBreakNum = 1
Parameter \DataIndTiming = 1'0
Parameter \DummyInstructions = 1'0
Parameter \ShadowCSR = 1'0
Parameter \ICache = 1'0
Parameter \MHPMCounterNum = 0
Parameter \MHPMCounterWidth = 40
Parameter \PMPEnable = 1'0
Parameter \PMPGranularity = 0
Parameter \PMPNumRegions = 4
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Generating RTLIL representation for module `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers'.
Warning: Replacing memory \mhpmevent with list of registers. See /openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1122
Parameter \WritebackStage = 1'0

27.4. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_wb_stage'.
Parameter \WritebackStage = 1'0
Generating RTLIL representation for module `$paramod\ibex_wb_stage\WritebackStage=1'0'.
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0

27.5. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_ex_block'.
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Generating RTLIL representation for module `$paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \DataIndTiming = 1'0
Parameter \BranchTargetALU = 1'0
Parameter \SpecBranch = 1'0
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0

27.6. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_id_stage'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \DataIndTiming = 1'0
Parameter \BranchTargetALU = 1'0
Parameter \SpecBranch = 1'0
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage'.
Parameter \DmHaltAddr = 437323776
Parameter \DmExceptionAddr = 437323784
Parameter \DummyInstructions = 1'0
Parameter \ICache = 1'0
Parameter \ICacheECC = 1'0
Parameter \PCIncrCheck = 1'0
Parameter \BranchPredictor = 1'0

27.7. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_if_stage'.
Parameter \DmHaltAddr = 437323776
Parameter \DmExceptionAddr = 437323784
Parameter \DummyInstructions = 1'0
Parameter \ICache = 1'0
Parameter \ICacheECC = 1'0
Parameter \PCIncrCheck = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage'.
Parameter \BranchPredictor = 1'0

27.8. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_prefetch_buffer'.
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0'.
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0

27.9. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_controller'.
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0

27.10. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_decoder'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Generating RTLIL representation for module `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \RV32M = 2

27.11. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_multdiv_fast'.
Parameter \RV32M = 2
Generating RTLIL representation for module `$paramod\ibex_multdiv_fast\RV32M=2'.
Parameter \RV32B = 0

27.12. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_alu'.
Parameter \RV32B = 0
Generating RTLIL representation for module `$paramod\ibex_alu\RV32B=0'.
Parameter \CounterWidth = 40

27.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_counter'.
Parameter \CounterWidth = 40
Generating RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0

27.14. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Generating RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \CounterWidth = 64

27.15. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_counter'.
Parameter \CounterWidth = 64
Generating RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \CounterWidth = 64
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0

27.16. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Generating RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 3
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 3'100

27.17. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 3
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 3'100
Generating RTLIL representation for module `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1073741827

27.18. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1073741827
Generating RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1

27.19. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1
Generating RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 18
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0

27.20. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 18
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Generating RTLIL representation for module `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 6'010000

27.21. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 6'010000
Generating RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000'.
Parameter \NUM_REQS = 2

27.22. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_fetch_fifo'.
Parameter \NUM_REQS = 2
Generating RTLIL representation for module `$paramod\ibex_fetch_fifo\NUM_REQS=2'.

27.23. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         \ibex_csr
Used module:         \ibex_counter
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         \ibex_multdiv_fast
Used module:         \ibex_alu
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         \ibex_controller
Used module:         \ibex_decoder
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         \ibex_prefetch_buffer
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \CounterWidth = 64
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \CounterWidth = 64
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 3
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 3'100
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1073741827
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 18
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 6'010000
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000'.
Parameter \RV32M = 2
Found cached RTLIL representation for module `$paramod\ibex_multdiv_fast\RV32M=2'.
Parameter \RV32B = 0
Found cached RTLIL representation for module `$paramod\ibex_alu\RV32B=0'.
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Found cached RTLIL representation for module `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Found cached RTLIL representation for module `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \BranchPredictor = 1'0
Found cached RTLIL representation for module `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0'.

27.24. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             \ibex_fetch_fifo
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Parameter \NUM_REQS = 2
Found cached RTLIL representation for module `$paramod\ibex_fetch_fifo\NUM_REQS=2'.

27.25. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating

27.26. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Removing unused module `$paramod\ibex_counter\CounterWidth=40'.
Removing unused module `\ibex_counter'.
Removing unused module `\ibex_ex_block'.
Removing unused module `\ibex_id_stage'.
Removing unused module `\ibex_dummy_instr'.
Removing unused module `\ibex_if_stage'.
Removing unused module `\ibex_cs_registers'.
Removing unused module `\ibex_pmp'.
Removing unused module `\ibex_alu'.
Removing unused module `\ibex_multdiv_fast'.
Removing unused module `\ibex_wb_stage'.
Removing unused module `\ibex_csr'.
Removing unused module `\ibex_branch_predict'.
Removing unused module `\ibex_register_file_ff'.
Removing unused module `\ibex_prefetch_buffer'.
Removing unused module `\ibex_core_tracing'.
Removing unused module `\ibex_decoder'.
Removing unused module `\ibex_fetch_fifo'.
Removing unused module `\ibex_register_file_latch'.
Removing unused module `\ibex_multdiv_slow'.
Removing unused module `\ibex_controller'.
Removing unused module `\ibex_icache'.
Removed 22 unused modules.

28. Executing SYNTH pass.

28.1. Executing HIERARCHY pass (managing design hierarchy).

28.1.1. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating

28.1.2. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Removed 0 unused modules.

28.2. Executing PROC pass (convert processes to netlists).

28.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$4585'.
Found and cleaned up 35 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
Found and cleaned up 2 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
Found and cleaned up 2 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
Found and cleaned up 2 empty switches in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4055'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4054'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4053'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4052'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4051'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4050'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4049'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4048'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4047'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4046'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4045'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4044'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4043'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4042'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4041'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4040'.
Cleaned up 42 empty switches.

28.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4634 in module $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4632 in module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4630 in module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4628 in module $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.
Removed 6 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$3287 in module ibex_compressed_decoder.
Marked 17 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$3287 in module ibex_compressed_decoder.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4626 in module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4624 in module $paramod\ibex_counter\CounterWidth=64.
Marked 3 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4621 in module $paramod\ibex_counter\CounterWidth=64.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4619 in module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$2098 in module ibex_load_store_unit.
Marked 8 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$2069 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$2069 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$2064 in module ibex_load_store_unit.
Marked 5 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$2064 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$2059 in module ibex_load_store_unit.
Marked 5 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$2059 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$2058 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$2058 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$2056 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$2054 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$2052 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$2051 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$2051 in module ibex_load_store_unit.
Removed 5 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$2048 in module ibex_load_store_unit.
Marked 7 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$2048 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4686 in module $paramod\ibex_fetch_fifo\NUM_REQS=2.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4666 in module $paramod\ibex_fetch_fifo\NUM_REQS=2.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$4603 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$4602 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$4591 in module $paramod\ibex_alu\RV32B=0.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$4583 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$4577 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$4569 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$4564 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$4562 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$4560 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$4557 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$4523 in module $paramod\ibex_multdiv_fast\RV32M=2.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 3 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$4475 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465 in module $paramod\ibex_multdiv_fast\RV32M=2.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 14 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 29 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4421 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 6 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 32 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 14 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4357 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4282 in module $paramod\ibex_prefetch_buffer\BranchPredictor=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4230 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4216 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4211 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4211 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4190 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4188 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4186 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4184 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 6 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4150 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4089 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4089 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4083 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4083 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$1299 in module ibex_core.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$1297 in module ibex_core.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4002 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$3994 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$3981 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$3981 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$3978 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 9 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Removed 3 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3721 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3719 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3717 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3715 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3713 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3711 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3709 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3707 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3705 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3703 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3701 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3699 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3697 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3695 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3693 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3691 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3689 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3687 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3685 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3683 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3681 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3679 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3677 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3675 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3673 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3671 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3669 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3667 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3665 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3663 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3661 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4636 in module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.
Removed a total of 27 dead cases.

28.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 25 redundant assignments.
Promoted 470 assignments to connections.

28.2.4. Executing PROC_INIT pass (extract init attributes).

28.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4634'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4632'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4630'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4628'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4626'.
Found async reset \rst_ni in `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4624'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4619'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$2098'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$2056'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$2054'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$2052'.
Found async reset \rst_ni in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4686'.
Found async reset \rst_ni in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$4523'.
Found async reset \rst_ni in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465'.
Found async reset \rst_ni in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
Found async reset \rst_ni in `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4282'.
Found async reset \rst_ni in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4230'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4190'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4188'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4186'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4150'.
Found async reset \rst_ni in `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$1299'.
Found async reset \rst_ni in `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$1297'.
Found async reset \rst_ni in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4002'.
Found async reset \rst_ni in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$3978'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3721'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3719'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3717'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3715'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3713'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3711'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3709'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3707'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3705'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3703'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3701'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3699'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3697'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3695'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3693'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3691'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3689'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3687'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3685'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3683'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3681'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3679'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3677'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3675'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3673'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3671'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3669'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3667'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3665'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3663'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3661'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4636'.

28.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4634'.
     1/1: $0\rdata_q[17:0]
Creating decoders for process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4632'.
     1/1: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4630'.
     1/1: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4628'.
     1/1: $0\rdata_q[2:0]
Creating decoders for process `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$3287'.
     1/25: $11\instr_o[31:0]
     2/25: $10\instr_o[31:0]
     3/25: $14\illegal_instr_o[0:0]
     4/25: $9\instr_o[31:0]
     5/25: $13\illegal_instr_o[0:0]
     6/25: $12\illegal_instr_o[0:0]
     7/25: $8\instr_o[31:0]
     8/25: $11\illegal_instr_o[0:0]
     9/25: $10\illegal_instr_o[0:0]
    10/25: $9\illegal_instr_o[0:0]
    11/25: $7\instr_o[31:0]
    12/25: $6\instr_o[31:0]
    13/25: $8\illegal_instr_o[0:0]
    14/25: $7\illegal_instr_o[0:0]
    15/25: $6\illegal_instr_o[0:0]
    16/25: $5\instr_o[31:0]
    17/25: $5\illegal_instr_o[0:0]
    18/25: $4\instr_o[31:0]
    19/25: $3\instr_o[31:0]
    20/25: $4\illegal_instr_o[0:0]
    21/25: $3\illegal_instr_o[0:0]
    22/25: $2\illegal_instr_o[0:0]
    23/25: $2\instr_o[31:0]
    24/25: $1\illegal_instr_o[0:0]
    25/25: $1\instr_o[31:0]
Creating decoders for process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4626'.
     1/1: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4624'.
     1/1: $0\counter_q[63:0]
Creating decoders for process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4621'.
     1/4: $2\counter_d[63:0]
     2/4: $1\counter_d[63:0]
     3/4: $1\counter_load[63:0] [63:32]
     4/4: $1\counter_load[63:0] [31:0]
Creating decoders for process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4619'.
     1/1: $0\rdata_q[5:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$2098'.
     1/4: $0\lsu_err_q[0:0]
     2/4: $0\pmp_err_q[0:0]
     3/4: $0\handle_misaligned_q[0:0]
     4/4: $0\ls_fsm_cs[2:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
     1/45: $8\ls_fsm_ns[2:0]
     2/45: $3\rdata_update[0:0]
     3/45: $7\addr_update[0:0]
     4/45: $4\lsu_err_d[0:0]
     5/45: $4\pmp_err_d[0:0]
     6/45: $7\handle_misaligned_d[0:0]
     7/45: $7\ls_fsm_ns[2:0]
     8/45: $6\addr_update[0:0]
     9/45: $5\ctrl_update[0:0]
    10/45: $6\handle_misaligned_d[0:0]
    11/45: $6\ls_fsm_ns[2:0]
    12/45: $5\handle_misaligned_d[0:0]
    13/45: $5\addr_update[0:0]
    14/45: $5\ls_fsm_ns[2:0]
    15/45: $2\rdata_update[0:0]
    16/45: $3\lsu_err_d[0:0]
    17/45: $3\pmp_err_d[0:0]
    18/45: $4\ls_fsm_ns[2:0]
    19/45: $4\handle_misaligned_d[0:0]
    20/45: $4\ctrl_update[0:0]
    21/45: $4\addr_update[0:0]
    22/45: $3\ls_fsm_ns[2:0]
    23/45: $3\handle_misaligned_d[0:0]
    24/45: $3\addr_update[0:0]
    25/45: $3\ctrl_update[0:0]
    26/45: $2\ls_fsm_ns[2:0]
    27/45: $2\handle_misaligned_d[0:0]
    28/45: $2\ctrl_update[0:0]
    29/45: $2\addr_update[0:0]
    30/45: $2\perf_store_o[0:0]
    31/45: $2\perf_load_o[0:0]
    32/45: $2\lsu_err_d[0:0]
    33/45: $2\pmp_err_d[0:0]
    34/45: $2\data_req_o[0:0]
    35/45: $1\ls_fsm_ns[2:0]
    36/45: $1\lsu_err_d[0:0]
    37/45: $1\pmp_err_d[0:0]
    38/45: $1\handle_misaligned_d[0:0]
    39/45: $1\ctrl_update[0:0]
    40/45: $1\addr_update[0:0]
    41/45: $1\perf_store_o[0:0]
    42/45: $1\perf_load_o[0:0]
    43/45: $1\data_req_o[0:0]
    44/45: $1\rdata_update[0:0]
    45/45: $1\addr_incr_req_o[0:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$2069'.
     1/1: $1\data_rdata_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$2064'.
     1/5: $5\rdata_b_ext[31:0]
     2/5: $4\rdata_b_ext[31:0]
     3/5: $3\rdata_b_ext[31:0]
     4/5: $2\rdata_b_ext[31:0]
     5/5: $1\rdata_b_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$2059'.
     1/5: $5\rdata_h_ext[31:0]
     2/5: $4\rdata_h_ext[31:0]
     3/5: $3\rdata_h_ext[31:0]
     4/5: $2\rdata_h_ext[31:0]
     5/5: $1\rdata_h_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$2058'.
     1/1: $1\rdata_w_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$2056'.
     1/1: $0\addr_last_q[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$2054'.
     1/4: $0\data_we_q[0:0]
     2/4: $0\data_sign_ext_q[0:0]
     3/4: $0\data_type_q[1:0]
     4/4: $0\rdata_offset_q[1:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$2052'.
     1/1: $0\rdata_q[23:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$2051'.
     1/1: $1\data_wdata[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$2048'.
     1/7: $7\data_be[3:0]
     2/7: $6\data_be[3:0]
     3/7: $5\data_be[3:0]
     4/7: $4\data_be[3:0]
     5/7: $3\data_be[3:0]
     6/7: $2\data_be[3:0]
     7/7: $1\data_be[3:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4717'.
     1/2: $0\err_q[2:2]
     2/2: $0\rdata_q[95:64]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4716'.
     1/2: $0\err_q[1:1]
     2/2: $0\rdata_q[63:32]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4715'.
     1/2: $0\err_q[0:0]
     2/2: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4686'.
     1/1: $0\valid_q[2:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:90$4673'.
     1/1: $0\instr_addr_q[30:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4666'.
     1/5: $2\out_valid_o[0:0]
     2/5: $1\out_valid_o[0:0]
     3/5: $1\out_err_plus2_o[0:0]
     4/5: $1\out_err_o[0:0]
     5/5: $1\out_rdata_o[31:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4613'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4612'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4611'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4610'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4609'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4608'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4607'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4606'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4605'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4604'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$4603'.
     1/1: $1\result_o[31:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$4602'.
     1/1: $1\bwlogic_result[31:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$4591'.
     1/1: $1\bwlogic_op_b_negate[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$4585'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$4583'.
     1/2: $2\shift_left[0:0]
     2/2: $1\shift_left[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$4577'.
     1/1: $1\shift_amt[4:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:421$4574'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$4569'.
     1/1: $1\cmp_result[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$4564'.
     1/1: $1\is_greater_equal[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$4562'.
     1/1: $1\cmp_signed[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$4560'.
     1/1: $1\adder_in_b[32:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$4557'.
     1/1: $1\adder_op_b_negate[0:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$4523'.
     1/1: $0\gen_mult_fast.mult_state_q[1:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
     1/16: $1\accum[33:0] [33:18]
     2/16: $1\accum[33:0] [17:0]
     3/16: $2\gen_mult_fast.mult_state_d[1:0]
     4/16: $2\mult_valid[0:0]
     5/16: $3\mac_res_d[33:0]
     6/16: $2\accum[33:0]
     7/16: $2\mac_res_d[33:0]
     8/16: $1\gen_mult_fast.mult_state_d[1:0]
     9/16: $1\mac_res_d[33:0]
    10/16: $2\mult_hold[0:0]
    11/16: $1\sign_b[0:0]
    12/16: $1\sign_a[0:0]
    13/16: $1\gen_mult_fast.mult_op_b[15:0]
    14/16: $1\gen_mult_fast.mult_op_a[15:0]
    15/16: $1\mult_hold[0:0]
    16/16: $1\mult_valid[0:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
     1/16: $4\op_remainder_d[33:0]
     2/16: $3\op_remainder_d[33:0]
     3/16: $2\div_by_zero_d[0:0]
     4/16: $2\md_state_d[2:0]
     5/16: $2\op_remainder_d[33:0]
     6/16: $1\div_counter_d[4:0]
     7/16: $1\alu_operand_b_o[32:0]
     8/16: $1\alu_operand_a_o[32:0]
     9/16: $1\op_remainder_d[33:0]
    10/16: $1\div_by_zero_d[0:0]
    11/16: $1\md_state_d[2:0]
    12/16: $1\div_hold[0:0]
    13/16: $1\div_valid[0:0]
    14/16: $1\op_quotient_d[31:0]
    15/16: $1\op_denominator_d[31:0]
    16/16: $1\op_numerator_d[31:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$4475'.
     1/1: $1\is_greater_equal[0:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465'.
     1/5: $0\div_counter_q[4:0]
     2/5: $0\op_quotient_q[31:0]
     3/5: $0\div_by_zero_q[0:0]
     4/5: $0\op_numerator_q[31:0]
     5/5: $0\md_state_q[2:0]
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:443$4460'.
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
     1/46: $8\alu_op_a_mux_sel_o[1:0]
     2/46: $8\alu_op_b_mux_sel_o[0:0]
     3/46: $7\alu_op_a_mux_sel_o[1:0]
     4/46: $8\imm_b_mux_sel_o[2:0]
     5/46: $2\imm_a_mux_sel_o[0:0]
     6/46: $14\alu_operator_o[5:0]
     7/46: $7\imm_b_mux_sel_o[2:0]
     8/46: $7\alu_op_b_mux_sel_o[0:0]
     9/46: $6\alu_op_a_mux_sel_o[1:0]
    10/46: $6\alu_op_b_mux_sel_o[0:0]
    11/46: $5\alu_op_a_mux_sel_o[1:0]
    12/46: $13\alu_operator_o[5:0]
    13/46: $6\imm_b_mux_sel_o[2:0]
    14/46: $12\alu_operator_o[5:0]
    15/46: $3\div_sel_o[0:0]
    16/46: $3\mult_sel_o[0:0]
    17/46: $2\div_sel_o[0:0]
    18/46: $2\mult_sel_o[0:0]
    19/46: $11\alu_operator_o[5:0]
    20/46: $10\alu_operator_o[5:0]
    21/46: $9\alu_operator_o[5:0]
    22/46: $8\alu_operator_o[5:0]
    23/46: $7\alu_operator_o[5:0]
    24/46: $6\alu_operator_o[5:0]
    25/46: $5\alu_op_b_mux_sel_o[0:0]
    26/46: $5\imm_b_mux_sel_o[2:0]
    27/46: $4\alu_op_b_mux_sel_o[0:0]
    28/46: $4\alu_op_a_mux_sel_o[1:0]
    29/46: $5\alu_operator_o[5:0]
    30/46: $4\imm_b_mux_sel_o[2:0]
    31/46: $4\alu_operator_o[5:0]
    32/46: $3\alu_operator_o[5:0]
    33/46: $3\imm_b_mux_sel_o[2:0]
    34/46: $3\alu_op_b_mux_sel_o[0:0]
    35/46: $3\alu_op_a_mux_sel_o[1:0]
    36/46: $2\alu_operator_o[5:0]
    37/46: $2\imm_b_mux_sel_o[2:0]
    38/46: $2\alu_op_b_mux_sel_o[0:0]
    39/46: $2\alu_op_a_mux_sel_o[1:0]
    40/46: $1\alu_op_b_mux_sel_o[0:0]
    41/46: $1\alu_op_a_mux_sel_o[1:0]
    42/46: $1\alu_operator_o[5:0]
    43/46: $1\imm_b_mux_sel_o[2:0]
    44/46: $1\div_sel_o[0:0]
    45/46: $1\mult_sel_o[0:0]
    46/46: $1\imm_a_mux_sel_o[0:0]
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
     1/89: $3\csr_access_o[0:0]
     2/89: $2\branch_in_dec_o[0:0]
     3/89: $6\jump_set_o[0:0]
     4/89: $3\jump_in_dec_o[0:0]
     5/89: $2\data_we_o[0:0]
     6/89: $2\data_req_o[0:0]
     7/89: $6\rf_we[0:0]
     8/89: $25\illegal_insn[0:0]
     9/89: $3\csr_op[1:0]
    10/89: $3\csr_illegal[0:0]
    11/89: $3\rf_ren_a_o[0:0]
    12/89: $24\illegal_insn[0:0]
    13/89: $3\ecall_insn_o[0:0]
    14/89: $23\illegal_insn[0:0]
    15/89: $3\wfi_insn_o[0:0]
    16/89: $3\dret_insn_o[0:0]
    17/89: $3\mret_insn_o[0:0]
    18/89: $3\ebrk_insn_o[0:0]
    19/89: $22\illegal_insn[0:0]
    20/89: $2\wfi_insn_o[0:0]
    21/89: $2\ecall_insn_o[0:0]
    22/89: $2\dret_insn_o[0:0]
    23/89: $2\mret_insn_o[0:0]
    24/89: $2\ebrk_insn_o[0:0]
    25/89: $5\rf_we[0:0]
    26/89: $2\csr_illegal[0:0]
    27/89: $2\rf_wdata_sel_o[0:0]
    28/89: $2\rf_ren_a_o[0:0]
    29/89: $2\csr_access_o[0:0]
    30/89: $2\csr_op[1:0]
    31/89: $3\icache_inval_o[0:0]
    32/89: $5\jump_set_o[0:0]
    33/89: $4\rf_we[0:0]
    34/89: $21\illegal_insn[0:0]
    35/89: $2\jump_in_dec_o[0:0]
    36/89: $4\jump_set_o[0:0]
    37/89: $2\icache_inval_o[0:0]
    38/89: $20\illegal_insn[0:0]
    39/89: $3\multdiv_signed_mode_o[1:0]
    40/89: $3\multdiv_operator_o[1:0]
    41/89: $19\illegal_insn[0:0]
    42/89: $2\multdiv_signed_mode_o[1:0]
    43/89: $2\multdiv_operator_o[1:0]
    44/89: $18\illegal_insn[0:0]
    45/89: $17\illegal_insn[0:0]
    46/89: $16\illegal_insn[0:0]
    47/89: $15\illegal_insn[0:0]
    48/89: $14\illegal_insn[0:0]
    49/89: $13\illegal_insn[0:0]
    50/89: $12\illegal_insn[0:0]
    51/89: $11\illegal_insn[0:0]
    52/89: $10\illegal_insn[0:0]
    53/89: $9\illegal_insn[0:0]
    54/89: $8\illegal_insn[0:0]
    55/89: $7\illegal_insn[0:0]
    56/89: $3\data_type_o[1:0]
    57/89: $6\illegal_insn[0:0]
    58/89: $2\data_type_o[1:0]
    59/89: $5\illegal_insn[0:0]
    60/89: $4\illegal_insn[0:0]
    61/89: $3\illegal_insn[0:0]
    62/89: $2\illegal_insn[0:0]
    63/89: $3\jump_set_o[0:0]
    64/89: $3\rf_we[0:0]
    65/89: $2\jump_set_o[0:0]
    66/89: $2\rf_we[0:0]
    67/89: $1\rf_we[0:0]
    68/89: $1\jump_set_o[0:0]
    69/89: $1\jump_in_dec_o[0:0]
    70/89: $1\csr_illegal[0:0]
    71/89: $1\illegal_insn[0:0]
    72/89: $1\branch_in_dec_o[0:0]
    73/89: $1\data_sign_extension_o[0:0]
    74/89: $1\data_type_o[1:0]
    75/89: $1\multdiv_signed_mode_o[1:0]
    76/89: $1\multdiv_operator_o[1:0]
    77/89: $1\rf_wdata_sel_o[0:0]
    78/89: $1\wfi_insn_o[0:0]
    79/89: $1\ecall_insn_o[0:0]
    80/89: $1\dret_insn_o[0:0]
    81/89: $1\mret_insn_o[0:0]
    82/89: $1\ebrk_insn_o[0:0]
    83/89: $1\rf_ren_b_o[0:0]
    84/89: $1\rf_ren_a_o[0:0]
    85/89: $1\csr_access_o[0:0]
    86/89: $1\icache_inval_o[0:0]
    87/89: $1\csr_op[1:0]
    88/89: $1\data_we_o[0:0]
    89/89: $1\data_req_o[0:0]
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4421'.
     1/1: $1\csr_op_o[1:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415'.
     1/21: $6\load_err_prio[0:0]
     2/21: $5\store_err_prio[0:0]
     3/21: $5\load_err_prio[0:0]
     4/21: $4\ebrk_insn_prio[0:0]
     5/21: $4\load_err_prio[0:0]
     6/21: $4\store_err_prio[0:0]
     7/21: $3\ecall_insn_prio[0:0]
     8/21: $3\load_err_prio[0:0]
     9/21: $3\store_err_prio[0:0]
    10/21: $3\ebrk_insn_prio[0:0]
    11/21: $2\illegal_insn_prio[0:0]
    12/21: $2\load_err_prio[0:0]
    13/21: $2\store_err_prio[0:0]
    14/21: $2\ebrk_insn_prio[0:0]
    15/21: $2\ecall_insn_prio[0:0]
    16/21: $1\instr_fetch_err_prio[0:0]
    17/21: $1\load_err_prio[0:0]
    18/21: $1\store_err_prio[0:0]
    19/21: $1\ebrk_insn_prio[0:0]
    20/21: $1\ecall_insn_prio[0:0]
    21/21: $1\illegal_insn_prio[0:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
     1/7: $0\illegal_insn_q[0:0]
     2/7: $0\exc_req_q[0:0]
     3/7: $0\store_err_q[0:0]
     4/7: $0\load_err_q[0:0]
     5/7: $0\debug_mode_q[0:0]
     6/7: $0\nmi_mode_q[0:0]
     7/7: $0\ctrl_fsm_cs[3:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
     1/129: $18\ctrl_fsm_ns[3:0]
     2/129: $17\ctrl_fsm_ns[3:0]
     3/129: $16\ctrl_fsm_ns[3:0]
     4/129: $4\csr_restore_dret_id_o[0:0]
     5/129: $5\debug_mode_d[0:0]
     6/129: $9\pc_set_spec_o[0:0]
     7/129: $10\pc_set_o[0:0]
     8/129: $4\pc_mux_o[2:0]
     9/129: $15\ctrl_fsm_ns[3:0]
    10/129: $6\nmi_mode_d[0:0]
    11/129: $5\nmi_mode_d[0:0]
    12/129: $3\csr_restore_mret_id_o[0:0]
    13/129: $8\pc_set_spec_o[0:0]
    14/129: $9\pc_set_o[0:0]
    15/129: $3\pc_mux_o[2:0]
    16/129: $4\debug_mode_d[0:0]
    17/129: $14\ctrl_fsm_ns[3:0]
    18/129: $3\csr_restore_dret_id_o[0:0]
    19/129: $5\flush_id[0:0]
    20/129: $13\ctrl_fsm_ns[3:0]
    21/129: $7\csr_save_cause_o[0:0]
    22/129: $6\csr_save_id_o[0:0]
    23/129: $7\pc_set_spec_o[0:0]
    24/129: $8\pc_set_o[0:0]
    25/129: $9\exc_cause_o[5:0]
    26/129: $3\csr_mtval_o[31:0]
    27/129: $8\exc_cause_o[5:0]
    28/129: $4\flush_id[0:0]
    29/129: $12\ctrl_fsm_ns[3:0]
    30/129: $6\csr_save_cause_o[0:0]
    31/129: $5\csr_save_id_o[0:0]
    32/129: $6\pc_set_spec_o[0:0]
    33/129: $7\pc_set_o[0:0]
    34/129: $4\csr_save_id_o[0:0]
    35/129: $3\flush_id[0:0]
    36/129: $11\ctrl_fsm_ns[3:0]
    37/129: $2\csr_mtval_o[31:0]
    38/129: $5\csr_save_cause_o[0:0]
    39/129: $3\csr_save_id_o[0:0]
    40/129: $7\exc_cause_o[5:0]
    41/129: $5\pc_set_spec_o[0:0]
    42/129: $6\pc_set_o[0:0]
    43/129: $2\exc_pc_mux_o[1:0]
    44/129: $2\pc_mux_o[2:0]
    45/129: $3\debug_mode_d[0:0]
    46/129: $4\nmi_mode_d[0:0]
    47/129: $2\csr_restore_dret_id_o[0:0]
    48/129: $2\csr_restore_mret_id_o[0:0]
    49/129: $5\debug_cause_o[2:0]
    50/129: $3\debug_csr_save_o[0:0]
    51/129: $2\csr_save_id_o[0:0]
    52/129: $4\csr_save_cause_o[0:0]
    53/129: $4\debug_cause_o[2:0]
    54/129: $3\debug_cause_o[2:0]
    55/129: $2\debug_mode_d[0:0]
    56/129: $2\debug_cause_o[2:0]
    57/129: $3\csr_save_cause_o[0:0]
    58/129: $2\debug_csr_save_o[0:0]
    59/129: $3\csr_save_if_o[0:0]
    60/129: $4\pc_set_spec_o[0:0]
    61/129: $5\pc_set_o[0:0]
    62/129: $2\flush_id[0:0]
    63/129: $6\exc_cause_o[5:0]
    64/129: $5\exc_cause_o[5:0]
    65/129: $4\exc_cause_o[5:0]
    66/129: $4$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\sv2v_cast_6[5:0]$4385
    67/129: $4$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\inp[5:0]$4386
    68/129: $3\nmi_mode_d[0:0]
    69/129: $3\exc_cause_o[5:0]
    70/129: $3$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\inp[5:0]$4383
    71/129: $3$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\sv2v_cast_6[5:0]$4382
    72/129: $2$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\inp[5:0]$4379
    73/129: $2$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\sv2v_cast_6[5:0]$4378
    74/129: $2\nmi_mode_d[0:0]
    75/129: $2\exc_cause_o[5:0]
    76/129: $2\csr_save_cause_o[0:0]
    77/129: $2\csr_save_if_o[0:0]
    78/129: $3\pc_set_spec_o[0:0]
    79/129: $4\pc_set_o[0:0]
    80/129: $7\halt_if[0:0]
    81/129: $10\ctrl_fsm_ns[3:0]
    82/129: $6\halt_if[0:0]
    83/129: $9\ctrl_fsm_ns[3:0]
    84/129: $5\halt_if[0:0]
    85/129: $8\ctrl_fsm_ns[3:0]
    86/129: $4\halt_if[0:0]
    87/129: $2\pc_set_spec_o[0:0]
    88/129: $3\perf_jump_o[0:0]
    89/129: $3\perf_tbranch_o[0:0]
    90/129: $3\pc_set_o[0:0]
    91/129: $2\perf_tbranch_o[0:0]
    92/129: $2\perf_jump_o[0:0]
    93/129: $2\pc_set_o[0:0]
    94/129: $7\ctrl_fsm_ns[3:0]
    95/129: $6\ctrl_fsm_ns[3:0]
    96/129: $2\retain_id[0:0]
    97/129: $3\halt_if[0:0]
    98/129: $5\ctrl_fsm_ns[3:0]
    99/129: $2\halt_if[0:0]
   100/129: $4\ctrl_fsm_ns[3:0]
   101/129: $3\ctrl_fsm_ns[3:0]
   102/129: $2\ctrl_fsm_ns[3:0]
   103/129: $2\ctrl_busy_o[0:0]
   104/129: $1\ctrl_fsm_ns[3:0]
   105/129: $1\pc_set_spec_o[0:0]
   106/129: $1\pc_set_o[0:0]
   107/129: $1\pc_mux_o[2:0]
   108/129: $1\instr_req_o[0:0]
   109/129: $1$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\inp[5:0]$4362
   110/129: $1$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\sv2v_cast_6[5:0]$4361
   111/129: $1\flush_id[0:0]
   112/129: $1\retain_id[0:0]
   113/129: $1\halt_if[0:0]
   114/129: $1\debug_mode_d[0:0]
   115/129: $1\nmi_mode_d[0:0]
   116/129: $1\perf_tbranch_o[0:0]
   117/129: $1\perf_jump_o[0:0]
   118/129: $1\csr_mtval_o[31:0]
   119/129: $1\csr_save_cause_o[0:0]
   120/129: $1\csr_restore_dret_id_o[0:0]
   121/129: $1\csr_restore_mret_id_o[0:0]
   122/129: $1\csr_save_id_o[0:0]
   123/129: $1\csr_save_if_o[0:0]
   124/129: $1\debug_csr_save_o[0:0]
   125/129: $1\debug_cause_o[2:0]
   126/129: $1\exc_cause_o[5:0]
   127/129: $1\exc_pc_mux_o[1:0]
   128/129: $1\controller_run_o[0:0]
   129/129: $1\ctrl_busy_o[0:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4357'.
     1/14: $14\mfip_id[3:0]
     2/14: $13\mfip_id[3:0]
     3/14: $12\mfip_id[3:0]
     4/14: $11\mfip_id[3:0]
     5/14: $10\mfip_id[3:0]
     6/14: $9\mfip_id[3:0]
     7/14: $8\mfip_id[3:0]
     8/14: $7\mfip_id[3:0]
     9/14: $6\mfip_id[3:0]
    10/14: $5\mfip_id[3:0]
    11/14: $4\mfip_id[3:0]
    12/14: $3\mfip_id[3:0]
    13/14: $2\mfip_id[3:0]
    14/14: $1\mfip_id[3:0]
Creating decoders for process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4282'.
     1/5: $0\rdata_pmp_err_q[1:0]
     2/5: $0\branch_discard_q[1:0]
     3/5: $0\rdata_outstanding_q[1:0]
     4/5: $0\discard_req_q[0:0]
     5/5: $0\valid_req_q[0:0]
Creating decoders for process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:146$4272'.
     1/1: $0\fetch_addr_q[31:0]
Creating decoders for process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:123$4263'.
     1/1: $0\stored_addr_q[31:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:0$4235'.
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
     1/8: $0\pc_id_o[31:0]
     2/8: $0\illegal_c_insn_id_o[0:0]
     3/8: $0\instr_fetch_err_plus2_o[0:0]
     4/8: $0\instr_fetch_err_o[0:0]
     5/8: $0\instr_is_compressed_id_o[0:0]
     6/8: $0\instr_rdata_c_id_o[15:0]
     7/8: $0\instr_rdata_alu_id_o[31:0]
     8/8: $0\instr_rdata_id_o[31:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4230'.
     1/2: $0\instr_new_id_q[0:0]
     2/2: $0\instr_valid_id_q[0:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4216'.
     1/1: $1\fetch_addr_n[31:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4211'.
     1/1: $1\exc_pc[31:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4210'.
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4209'.
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4190'.
     1/1: $0\g_branch_set_flop.branch_set_q[0:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4188'.
     1/1: $0\imd_val_q[33:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4186'.
     1/1: $0\imd_val_q[67:34]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4184'.
     1/1: $1\imm_b[31:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
     1/39: $6\id_fsm_d[0:0]
     2/39: $4\stall_jump[0:0]
     3/39: $4\stall_branch[0:0]
     4/39: $5\stall_multdiv[0:0]
     5/39: $5\rf_we_raw[0:0]
     6/39: $4\stall_multdiv[0:0]
     7/39: $4\rf_we_raw[0:0]
     8/39: $5\id_fsm_d[0:0]
     9/39: $4\id_fsm_d[0:0]
    10/39: $3\id_fsm_d[0:0]
    11/39: $3\stall_alu[0:0]
    12/39: $3\rf_we_raw[0:0]
    13/39: $3\stall_jump[0:0]
    14/39: $3\stall_branch[0:0]
    15/39: $3\stall_multdiv[0:0]
    16/39: $3\jump_set[0:0]
    17/39: $3\branch_set_d[0:0]
    18/39: $3\branch_spec[0:0]
    19/39: $3\perf_branch_o[0:0]
    20/39: $2\id_fsm_d[0:0]
    21/39: $2\stall_alu[0:0]
    22/39: $2\rf_we_raw[0:0]
    23/39: $2\stall_jump[0:0]
    24/39: $2\stall_branch[0:0]
    25/39: $2\stall_multdiv[0:0]
    26/39: $2\jump_set[0:0]
    27/39: $2\branch_set_d[0:0]
    28/39: $2\branch_spec[0:0]
    29/39: $2\perf_branch_o[0:0]
    30/39: $1\id_fsm_d[0:0]
    31/39: $1\stall_alu[0:0]
    32/39: $1\rf_we_raw[0:0]
    33/39: $1\stall_jump[0:0]
    34/39: $1\stall_branch[0:0]
    35/39: $1\stall_multdiv[0:0]
    36/39: $1\jump_set[0:0]
    37/39: $1\branch_set_d[0:0]
    38/39: $1\branch_spec[0:0]
    39/39: $1\perf_branch_o[0:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4150'.
     1/1: $0\id_fsm_q[0:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
     1/24: $4\csr_pipe_flush[0:0]
     2/24: $3\csr_pipe_flush[0:0]
     3/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4077$\sv2v_cast_12[11:0]$4132
     4/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4077$\inp[11:0]$4133
     5/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4076$\sv2v_cast_12[11:0]$4130
     6/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4076$\inp[11:0]$4131
     7/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4075$\sv2v_cast_12[11:0]$4128
     8/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4075$\inp[11:0]$4129
     9/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4074$\sv2v_cast_12[11:0]$4126
    10/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4074$\inp[11:0]$4127
    11/24: $2\csr_pipe_flush[0:0]
    12/24: $1\csr_pipe_flush[0:0]
    13/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4073$\sv2v_cast_12[11:0]$4110
    14/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4073$\inp[11:0]$4111
    15/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4072$\sv2v_cast_12[11:0]$4108
    16/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4072$\inp[11:0]$4109
    17/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4077$\inp[11:0]$4119
    18/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4077$\sv2v_cast_12[11:0]$4118
    19/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4076$\inp[11:0]$4117
    20/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4076$\sv2v_cast_12[11:0]$4116
    21/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4075$\inp[11:0]$4115
    22/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4075$\sv2v_cast_12[11:0]$4114
    23/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4074$\inp[11:0]$4113
    24/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4074$\sv2v_cast_12[11:0]$4112
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4089'.
     1/1: $1\rf_wdata_id_o[31:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4083'.
     1/1: $1\alu_operand_a[31:0]
Creating decoders for process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_wb_stage.v:0$4063'.
Creating decoders for process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$1315'.
Creating decoders for process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$1299'.
     1/1: $0\fetch_enable_q[0:0]
Creating decoders for process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$1297'.
     1/1: $0\core_busy_q[0:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4019'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4016'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4013'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4010'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4007'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4002'.
     1/1: $0\mcountinhibit_q[2:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1095$3996'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$3994'.
     1/1: $1\mcountinhibit_d[2:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$3981'.
     1/1: $1\csr_wdata_int[31:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$3978'.
     1/1: $0\priv_lvl_q[1:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
     1/131: $4\mstatus_d[5:2] [3]
     2/131: $6\mcause_en[0:0]
     3/131: $4\mepc_d[31:0]
     4/131: $6\mepc_en[0:0]
     5/131: $7\mstatus_d[4:2] [1:0]
     6/131: $7\mstatus_d[4:2] [2]
     7/131: $4\mstatus_d[5:2] [2:0]
     8/131: $4\mcause_d[5:0]
     9/131: $3\mcause_d[5:0]
    10/131: $5\mcause_en[0:0]
    11/131: $3\mepc_d[31:0]
    12/131: $5\mepc_en[0:0]
    13/131: $3\mstack_en[0:0]
    14/131: $6\mstatus_d[5:2] [1:0]
    15/131: $6\mstatus_d[5:2] [2]
    16/131: $5\mstatus_en[0:0]
    17/131: $3\mtval_d[31:0]
    18/131: $5\mtval_en[0:0]
    19/131: $4\depc_en[0:0]
    20/131: $2\depc_d[31:0]
    21/131: $4\dcsr_en[0:0]
    22/131: $7\dcsr_d[8:6]
    23/131: $6\dcsr_d[1:0]
    24/131: $2\mstack_en[0:0]
    25/131: $4\mtval_en[0:0]
    26/131: $2\mtval_d[31:0]
    27/131: $4\mcause_en[0:0]
    28/131: $2\mcause_d[5:0]
    29/131: $4\mepc_en[0:0]
    30/131: $2\mepc_d[31:0]
    31/131: $4\mstatus_en[0:0]
    32/131: $5\mstatus_d[5:2]
    33/131: $2\exception_pc[31:0]
    34/131: $1\mstack_en[0:0]
    35/131: $3\depc_en[0:0]
    36/131: $1\depc_d[31:0]
    37/131: $3\dcsr_en[0:0]
    38/131: $5\dcsr_d[8:6]
    39/131: $4\dcsr_d[1:0]
    40/131: $3\mtval_en[0:0]
    41/131: $1\mtval_d[31:0]
    42/131: $3\mcause_en[0:0]
    43/131: $1\mcause_d[5:0]
    44/131: $3\mepc_en[0:0]
    45/131: $1\mepc_d[31:0]
    46/131: $3\mstatus_en[0:0]
    47/131: $6\mstatus_d[5:2] [3]
    48/131: $1\priv_lvl_d[1:0]
    49/131: $1\exception_pc[31:0]
    50/131: $2\dcsr_d[31:0] [31:28]
    51/131: $2\mstatus_d[5:0] [5:4]
    52/131: $2\mstatus_d[5:0] [3:2]
    53/131: $2\dcsr_d[31:0] [15]
    54/131: $2\dcsr_d[31:0] [14]
    55/131: $2\mstatus_d[5:0] [1:0]
    56/131: $2\dcsr_d[31:0] [27:16]
    57/131: $2\dcsr_d[31:0] [4]
    58/131: $2\dcsr_d[31:0] [3]
    59/131: $2\dcsr_d[31:0] [2]
    60/131: $2\dcsr_d[31:0] [1:0]
    61/131: $2\dcsr_d[31:0] [5]
    62/131: $2\dcsr_d[31:0] [13:11]
    63/131: $2\dcsr_d[31:0] [10]
    64/131: $3\dcsr_d[1:0]
    65/131: $2\dcsr_d[31:0] [8:6]
    66/131: $3\mstatus_d[3:2]
    67/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3738$\sv2v_cast_1[0:0]$3955
    68/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3738$\inp[0:0]$3956
    69/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3737$\sv2v_cast_1[0:0]$3953
    70/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3737$\inp[0:0]$3954
    71/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3736$\sv2v_cast_2[1:0]$3951
    72/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3736$\inp[1:0]$3952
    73/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3735$\sv2v_cast_2[1:0]$3949
    74/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3735$\inp[1:0]$3950
    75/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3734$\sv2v_cast_1[0:0]$3947
    76/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3734$\inp[0:0]$3948
    77/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3733$\sv2v_cast_1[0:0]$3945
    78/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3733$\inp[0:0]$3946
    79/131: $2\mstatus_en[0:0]
    80/131: $2$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3742[31:0]$3960
    81/131: $2$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3741[31:0]$3959
    82/131: $2$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3740[31:0]$3958
    83/131: $2$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3739[31:0]$3957
    84/131: $2\cpuctrl_we[0:0]
    85/131: $2\mhpmcounterh_we[31:0]
    86/131: $2\mhpmcounter_we[31:0]
    87/131: $2\mcountinhibit_we[0:0]
    88/131: $2\dscratch1_en[0:0]
    89/131: $2\dscratch0_en[0:0]
    90/131: $2\depc_en[0:0]
    91/131: $2\dcsr_en[0:0]
    92/131: $2\dcsr_d[31:0] [9]
    93/131: $2\mtvec_en[0:0]
    94/131: $2\mtval_en[0:0]
    95/131: $2\mcause_en[0:0]
    96/131: $2\mepc_en[0:0]
    97/131: $2\mscratch_en[0:0]
    98/131: $2\mie_en[0:0]
    99/131: $1$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3742[31:0]$3944
   100/131: $1$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3741[31:0]$3943
   101/131: $1$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3740[31:0]$3942
   102/131: $1$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3739[31:0]$3941
   103/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3738$\inp[0:0]$3940
   104/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3738$\sv2v_cast_1[0:0]$3939
   105/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3737$\inp[0:0]$3938
   106/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3737$\sv2v_cast_1[0:0]$3937
   107/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3736$\inp[1:0]$3936
   108/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3736$\sv2v_cast_2[1:0]$3935
   109/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3735$\inp[1:0]$3934
   110/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3735$\sv2v_cast_2[1:0]$3933
   111/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3734$\inp[0:0]$3932
   112/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3734$\sv2v_cast_1[0:0]$3931
   113/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3733$\inp[0:0]$3930
   114/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3733$\sv2v_cast_1[0:0]$3929
   115/131: $1\cpuctrl_we[0:0]
   116/131: $1\mhpmcounterh_we[31:0]
   117/131: $1\mhpmcounter_we[31:0]
   118/131: $1\mcountinhibit_we[0:0]
   119/131: $1\dscratch1_en[0:0]
   120/131: $1\dscratch0_en[0:0]
   121/131: $1\depc_en[0:0]
   122/131: $1\dcsr_en[0:0]
   123/131: $1\dcsr_d[31:0]
   124/131: $1\mtvec_en[0:0]
   125/131: $1\mtval_en[0:0]
   126/131: $1\mcause_en[0:0]
   127/131: $1\mepc_en[0:0]
   128/131: $1\mscratch_en[0:0]
   129/131: $1\mie_en[0:0]
   130/131: $1\mstatus_en[0:0]
   131/131: $1\mstatus_d[5:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
     1/26: $1\csr_rdata_int[31:0] [31]
     2/26: $1\csr_rdata_int[31:0] [10:8]
     3/26: $1\csr_rdata_int[31:0] [7]
     4/26: $1\csr_rdata_int[31:0] [6:4]
     5/26: $1\csr_rdata_int[31:0] [12]
     6/26: $1\csr_rdata_int[31:0] [3]
     7/26: $1\csr_rdata_int[31:0] [17]
     8/26: $2$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$3848_DATA[63:0]$3910
     9/26: $1\csr_rdata_int[31:0] [11]
    10/26: $2$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$3847_DATA[63:0]$3909
    11/26: $1\csr_rdata_int[31:0] [2:0]
    12/26: $1\csr_rdata_int[31:0] [21]
    13/26: $1\csr_rdata_int[31:0] [30:22]
    14/26: $1\csr_rdata_int[31:0] [16]
    15/26: $1\csr_rdata_int[31:0] [20:18]
    16/26: $2$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$3846_DATA[31:0]$3908
    17/26: $1\csr_rdata_int[31:0] [15:13]
    18/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$3848_DATA[63:0]$3887
    19/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$3848_ADDR[4:0]$3886
    20/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$3847_DATA[63:0]$3885
    21/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$3847_ADDR[4:0]$3884
    22/26: $1$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$3846_DATA[31:0]$3883
    23/26: $1$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$3846_ADDR[4:0]$3882
    24/26: $1$mem2bits$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$3732[63:0]$3881
    25/26: $1$mem2bits$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$3731[63:0]$3880
    26/26: $1\illegal_csr[0:0]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3721'.
     1/1: $0\rf_reg_q[991:960]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3719'.
     1/1: $0\rf_reg_q[959:928]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3717'.
     1/1: $0\rf_reg_q[927:896]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3715'.
     1/1: $0\rf_reg_q[895:864]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3713'.
     1/1: $0\rf_reg_q[863:832]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3711'.
     1/1: $0\rf_reg_q[831:800]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3709'.
     1/1: $0\rf_reg_q[799:768]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3707'.
     1/1: $0\rf_reg_q[767:736]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3705'.
     1/1: $0\rf_reg_q[735:704]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3703'.
     1/1: $0\rf_reg_q[703:672]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3701'.
     1/1: $0\rf_reg_q[671:640]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3699'.
     1/1: $0\rf_reg_q[639:608]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3697'.
     1/1: $0\rf_reg_q[607:576]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3695'.
     1/1: $0\rf_reg_q[575:544]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3693'.
     1/1: $0\rf_reg_q[543:512]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3691'.
     1/1: $0\rf_reg_q[511:480]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3689'.
     1/1: $0\rf_reg_q[479:448]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3687'.
     1/1: $0\rf_reg_q[447:416]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3685'.
     1/1: $0\rf_reg_q[415:384]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3683'.
     1/1: $0\rf_reg_q[383:352]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3681'.
     1/1: $0\rf_reg_q[351:320]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3679'.
     1/1: $0\rf_reg_q[319:288]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3677'.
     1/1: $0\rf_reg_q[287:256]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3675'.
     1/1: $0\rf_reg_q[255:224]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3673'.
     1/1: $0\rf_reg_q[223:192]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3671'.
     1/1: $0\rf_reg_q[191:160]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3669'.
     1/1: $0\rf_reg_q[159:128]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3667'.
     1/1: $0\rf_reg_q[127:96]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3665'.
     1/1: $0\rf_reg_q[95:64]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3663'.
     1/1: $0\rf_reg_q[63:32]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3661'.
     1/1: $0\rf_reg_q[31:0]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
Creating decoders for process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4636'.
     1/1: $0\rdata_q[5:0]

28.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ibex_compressed_decoder.\instr_o' from process `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$3287'.
No latch inferred for signal `\ibex_compressed_decoder.\illegal_instr_o' from process `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$3287'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\counter_upd' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4621'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\counter_load' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4621'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\we' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4621'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\counter_d' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4621'.
No latch inferred for signal `\ibex_load_store_unit.\data_req_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\addr_incr_req_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\perf_load_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\perf_store_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\addr_update' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\ctrl_update' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_update' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\handle_misaligned_d' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\pmp_err_d' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\lsu_err_d' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\ls_fsm_ns' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
No latch inferred for signal `\ibex_load_store_unit.\data_rdata_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$2069'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_b_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$2064'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_h_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$2059'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_w_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$2058'.
No latch inferred for signal `\ibex_load_store_unit.\data_wdata' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$2051'.
No latch inferred for signal `\ibex_load_store_unit.\data_be' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$2048'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_valid_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4666'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_rdata_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4666'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_err_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4666'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_err_plus2_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4666'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\imd_val_we_o' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4613'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\imd_val_d_o' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4612'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\multicycle_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4611'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\clmul_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4610'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\invbutterfly_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4609'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\butterfly_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4608'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shuffle_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4607'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\rev_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4606'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\singlebit_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4605'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\pack_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4604'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\result_o' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$4603'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\bwlogic_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$4602'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\bwlogic_op_b_negate' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$4591'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\sv2v_autoblock_6.i' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$4585'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_operand' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$4585'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_result_ext' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$4585'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\unused_shift_result_ext' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$4585'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$4585'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_result_rev' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$4585'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_left' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$4583'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_amt [4:0]' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$4577'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_amt [5]' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:421$4574'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\cmp_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$4569'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\is_greater_equal' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$4564'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\cmp_signed' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$4562'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\adder_in_b' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$4560'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\adder_op_b_negate' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$4557'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\sign_a' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\sign_b' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\accum' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\mult_valid' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\mac_res_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\mult_hold' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_op_a' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_op_b' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_state_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\alu_operand_a_o' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\alu_operand_b_o' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\md_state_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_numerator_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_by_zero_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_remainder_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_denominator_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_quotient_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_valid' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_counter_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_hold' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\is_greater_equal' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$4475'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\use_rs3_q' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:443$4460'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\imm_a_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\imm_b_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\bt_a_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\bt_b_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_operator_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_op_a_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_op_b_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_multicycle_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\mult_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\div_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\use_rs3_d' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\opcode_alu' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/ibex/src/ibex_decoder.v:728$4417$\sv2v_cast_7' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/ibex/src/ibex_decoder.v:728$4417$\inp' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_req_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_we_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_op' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\icache_inval_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_access_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_ren_a_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_ren_b_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\ebrk_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\mret_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\dret_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\ecall_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\wfi_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\jump_set_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_wdata_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\multdiv_operator_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\multdiv_signed_mode_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_type_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_sign_extension_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\jump_in_dec_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\branch_in_dec_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\illegal_insn' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_illegal' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_we' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\opcode' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/ibex/src/ibex_decoder.v:494$4416$\sv2v_cast_7' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/ibex/src/ibex_decoder.v:494$4416$\inp' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_op_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4421'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\instr_fetch_err_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\illegal_insn_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ecall_insn_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ebrk_insn_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\store_err_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\load_err_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\instr_req_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ctrl_busy_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\controller_run_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\pc_set_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\pc_set_spec_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\pc_mux_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\nt_branch_mispredict_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\exc_pc_mux_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\exc_cause_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_cause_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_csr_save_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_if_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_id_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_wb_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_restore_mret_id_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_restore_dret_id_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_cause_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_mtval_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\perf_jump_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\perf_tbranch_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ctrl_fsm_ns' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\nmi_mode_d' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_mode_d' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\halt_if' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\retain_id' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\flush_id' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\sv2v_cast_6' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4311$\inp' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\mfip_id' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4357'.
No latch inferred for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\dummy_instr_id_o' from process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:0$4235'.
No latch inferred for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\fetch_addr_n' from process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4216'.
No latch inferred for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\exc_pc' from process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4211'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\bt_b_operand_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4210'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\bt_a_operand_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4209'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\imm_b' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4184'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\perf_branch_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\branch_spec' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\branch_set_d' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\branch_not_set' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\jump_set' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_multdiv' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_branch' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_jump' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\rf_we_raw' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_alu' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\id_fsm_d' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\csr_pipe_flush' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4072$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4072$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4073$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4073$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4074$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4074$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4075$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4075$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4076$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4076$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4077$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4077$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\rf_wdata_id_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4089'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\alu_operand_a' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4083'.
No latch inferred for signal `$paramod\ibex_wb_stage\WritebackStage=1'0.\rf_wdata_wb_mux[0]' from process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_wb_stage.v:0$4063'.
No latch inferred for signal `$paramod\ibex_wb_stage\WritebackStage=1'0.\rf_wdata_wb_mux[1]' from process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_wb_stage.v:0$4063'.
No latch inferred for signal `\ibex_core.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_core.v:951$1293$\sv2v_cast_12' from process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$1315'.
No latch inferred for signal `\ibex_core.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_core.v:951$1294$\sv2v_cast_12' from process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$1315'.
No latch inferred for signal `\ibex_core.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_core.v:951$1294$\inp' from process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$1315'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[0]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[1]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[2]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[3]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[4]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[5]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[6]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[7]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[8]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[9]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[10]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[11]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[12]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[13]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[14]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[15]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[1]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[3]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[4]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[5]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[6]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[7]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[8]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[9]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[10]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[11]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[12]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[13]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[14]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[15]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[16]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[17]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[18]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[19]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[20]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[21]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[22]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[23]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[24]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[25]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[26]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[27]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[28]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[29]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[30]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[31]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1275$3840$\sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4019'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1275$3845$\sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4019'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1275$3845$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4019'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3746$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4016'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3844$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4016'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3745$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4013'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3843$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4013'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3744$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4010'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3842$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4010'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3743$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4007'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3841$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4007'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\gen_mhpmevent.sv2v_autoblock_8.i' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\gen_mhpmevent.sv2v_autoblock_9.i' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[0]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[1]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[2]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[3]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[4]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[5]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[6]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[7]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[8]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[9]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[10]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[11]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[12]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[13]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[14]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[15]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[16]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[17]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[18]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[19]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[20]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[21]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[22]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[23]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[24]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[25]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[26]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[27]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[28]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[29]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[30]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[31]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter_incr' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1095$3996'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\gen_mhpmcounter_incr.sv2v_autoblock_7.i' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1095$3996'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcountinhibit_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$3994'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\csr_wdata_int' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$3981'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\exception_pc' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\priv_lvl_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstatus_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstatus_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mie_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mscratch_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mepc_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mepc_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcause_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcause_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtval_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtval_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtvec_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtvec_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dcsr_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dcsr_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\depc_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\depc_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dscratch0_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dscratch1_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_epc_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_cause_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcountinhibit_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounterh_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\cpuctrl_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3733$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3733$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3734$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3734$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3735$\sv2v_cast_2' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3735$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3736$\sv2v_cast_2' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3736$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3737$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3737$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3738$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3738$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3739' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3740' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3741' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3742' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\csr_rdata_int' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\illegal_csr' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2bits$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$3731' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2bits$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$3732' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$3846_ADDR' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$3846_DATA' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$3847_ADDR' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$3847_DATA' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$3848_ADDR' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$3848_DATA' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\we_a_dec' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\we_a_decoder.sv2v_autoblock_2.i' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3530$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3531$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3532$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3533$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3534$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3535$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3536$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3537$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3538$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3539$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3540$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3541$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3542$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3543$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3544$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3545$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3546$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3547$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3548$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3549$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3550$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3551$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3552$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3553$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3554$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3555$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3556$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3557$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3558$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3559$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3560$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.

28.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.\rdata_q' using process `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4634'.
  created $adff cell `$procdff$11733' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.\rdata_q' using process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4632'.
  created $adff cell `$procdff$11734' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.\rdata_q' using process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4630'.
  created $adff cell `$procdff$11735' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.\rdata_q' using process `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4628'.
  created $adff cell `$procdff$11736' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.\rdata_q' using process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4626'.
  created $adff cell `$procdff$11737' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_counter\CounterWidth=64.\counter_q' using process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4624'.
  created $adff cell `$procdff$11738' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.\rdata_q' using process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4619'.
  created $adff cell `$procdff$11739' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\handle_misaligned_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$2098'.
  created $adff cell `$procdff$11740' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\pmp_err_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$2098'.
  created $adff cell `$procdff$11741' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\lsu_err_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$2098'.
  created $adff cell `$procdff$11742' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\ls_fsm_cs' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$2098'.
  created $adff cell `$procdff$11743' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\addr_last_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$2056'.
  created $adff cell `$procdff$11744' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\rdata_offset_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$2054'.
  created $adff cell `$procdff$11745' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\data_type_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$2054'.
  created $adff cell `$procdff$11746' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\data_sign_ext_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$2054'.
  created $adff cell `$procdff$11747' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\data_we_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$2054'.
  created $adff cell `$procdff$11748' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\rdata_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$2052'.
  created $adff cell `$procdff$11749' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\rdata_q [95:64]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4717'.
  created $dff cell `$procdff$11750' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\err_q [2]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4717'.
  created $dff cell `$procdff$11751' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\rdata_q [63:32]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4716'.
  created $dff cell `$procdff$11752' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\err_q [1]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4716'.
  created $dff cell `$procdff$11753' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\rdata_q [31:0]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4715'.
  created $dff cell `$procdff$11754' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\err_q [0]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4715'.
  created $dff cell `$procdff$11755' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\valid_q' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4686'.
  created $adff cell `$procdff$11756' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\instr_addr_q' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:90$4673'.
  created $dff cell `$procdff$11757' with positive edge clock.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_state_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$4523'.
  created $adff cell `$procdff$11758' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\md_state_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465'.
  created $adff cell `$procdff$11759' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_numerator_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465'.
  created $adff cell `$procdff$11760' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_by_zero_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465'.
  created $adff cell `$procdff$11761' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_quotient_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465'.
  created $adff cell `$procdff$11762' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_counter_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465'.
  created $adff cell `$procdff$11763' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ctrl_fsm_cs' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
  created $adff cell `$procdff$11764' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\nmi_mode_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
  created $adff cell `$procdff$11765' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_mode_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
  created $adff cell `$procdff$11766' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\load_err_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
  created $adff cell `$procdff$11767' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\store_err_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
  created $adff cell `$procdff$11768' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\exc_req_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
  created $adff cell `$procdff$11769' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\illegal_insn_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
  created $adff cell `$procdff$11770' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\valid_req_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4282'.
  created $adff cell `$procdff$11771' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\discard_req_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4282'.
  created $adff cell `$procdff$11772' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\rdata_outstanding_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4282'.
  created $adff cell `$procdff$11773' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\branch_discard_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4282'.
  created $adff cell `$procdff$11774' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\rdata_pmp_err_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4282'.
  created $adff cell `$procdff$11775' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\fetch_addr_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:146$4272'.
  created $dff cell `$procdff$11776' with positive edge clock.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\stored_addr_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:123$4263'.
  created $dff cell `$procdff$11777' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_rdata_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
  created $dff cell `$procdff$11778' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_rdata_alu_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
  created $dff cell `$procdff$11779' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_rdata_c_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
  created $dff cell `$procdff$11780' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_is_compressed_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
  created $dff cell `$procdff$11781' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_fetch_err_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
  created $dff cell `$procdff$11782' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_fetch_err_plus2_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
  created $dff cell `$procdff$11783' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\illegal_c_insn_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
  created $dff cell `$procdff$11784' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\pc_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
  created $dff cell `$procdff$11785' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_valid_id_q' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4230'.
  created $adff cell `$procdff$11786' with positive edge clock and negative level reset.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_new_id_q' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4230'.
  created $adff cell `$procdff$11787' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\g_branch_set_flop.branch_set_q' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4190'.
  created $adff cell `$procdff$11788' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\imd_val_q [33:0]' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4188'.
  created $adff cell `$procdff$11789' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\imd_val_q [67:34]' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4186'.
  created $adff cell `$procdff$11790' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\id_fsm_q' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4150'.
  created $adff cell `$procdff$11791' with positive edge clock and negative level reset.
Creating register for signal `\ibex_core.\fetch_enable_q' using process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$1299'.
  created $adff cell `$procdff$11792' with positive edge clock and negative level reset.
Creating register for signal `\ibex_core.\core_busy_q' using process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$1297'.
  created $adff cell `$procdff$11793' with positive edge clock and negative level reset.
Creating register for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcountinhibit_q' using process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4002'.
  created $adff cell `$procdff$11794' with positive edge clock and negative level reset.
Creating register for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\priv_lvl_q' using process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$3978'.
  created $adff cell `$procdff$11795' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [991:960]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3721'.
  created $adff cell `$procdff$11796' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [959:928]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3719'.
  created $adff cell `$procdff$11797' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [927:896]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3717'.
  created $adff cell `$procdff$11798' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [895:864]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3715'.
  created $adff cell `$procdff$11799' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [863:832]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3713'.
  created $adff cell `$procdff$11800' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [831:800]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3711'.
  created $adff cell `$procdff$11801' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [799:768]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3709'.
  created $adff cell `$procdff$11802' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [767:736]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3707'.
  created $adff cell `$procdff$11803' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [735:704]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3705'.
  created $adff cell `$procdff$11804' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [703:672]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3703'.
  created $adff cell `$procdff$11805' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [671:640]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3701'.
  created $adff cell `$procdff$11806' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [639:608]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3699'.
  created $adff cell `$procdff$11807' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [607:576]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3697'.
  created $adff cell `$procdff$11808' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [575:544]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3695'.
  created $adff cell `$procdff$11809' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [543:512]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3693'.
  created $adff cell `$procdff$11810' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [511:480]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3691'.
  created $adff cell `$procdff$11811' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [479:448]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3689'.
  created $adff cell `$procdff$11812' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [447:416]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3687'.
  created $adff cell `$procdff$11813' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [415:384]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3685'.
  created $adff cell `$procdff$11814' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [383:352]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3683'.
  created $adff cell `$procdff$11815' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [351:320]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3681'.
  created $adff cell `$procdff$11816' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [319:288]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3679'.
  created $adff cell `$procdff$11817' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [287:256]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3677'.
  created $adff cell `$procdff$11818' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [255:224]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3675'.
  created $adff cell `$procdff$11819' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [223:192]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3673'.
  created $adff cell `$procdff$11820' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [191:160]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3671'.
  created $adff cell `$procdff$11821' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [159:128]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3669'.
  created $adff cell `$procdff$11822' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [127:96]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3667'.
  created $adff cell `$procdff$11823' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [95:64]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3665'.
  created $adff cell `$procdff$11824' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [63:32]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3663'.
  created $adff cell `$procdff$11825' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [31:0]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3661'.
  created $adff cell `$procdff$11826' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.\rdata_q' using process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4636'.
  created $adff cell `$procdff$11827' with positive edge clock and negative level reset.

28.2.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4634'.
Removing empty process `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4634'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4632'.
Removing empty process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4632'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4630'.
Removing empty process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4630'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4628'.
Removing empty process `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4628'.
Found and cleaned up 17 empty switches in `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$3287'.
Removing empty process `ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$3287'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4626'.
Removing empty process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4626'.
Removing empty process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4624'.
Found and cleaned up 3 empty switches in `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4621'.
Removing empty process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4621'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4619'.
Removing empty process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4619'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$2098'.
Found and cleaned up 8 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$2077'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$2069'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$2069'.
Found and cleaned up 5 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$2064'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$2064'.
Found and cleaned up 5 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$2059'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$2059'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$2058'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$2058'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$2056'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$2056'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$2054'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$2054'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$2052'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$2052'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$2051'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$2051'.
Found and cleaned up 7 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$2048'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$2048'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4717'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4717'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4716'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4716'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4715'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4715'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4686'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:90$4673'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:90$4673'.
Found and cleaned up 2 empty switches in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4666'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4666'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4613'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4612'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4611'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4610'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4609'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4608'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4607'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4606'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4605'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$4604'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$4603'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$4603'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$4602'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$4602'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$4591'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$4591'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$4585'.
Found and cleaned up 2 empty switches in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$4583'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$4583'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$4577'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$4577'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:421$4574'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$4569'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$4569'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$4564'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$4564'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$4562'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$4562'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$4560'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$4560'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$4557'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$4557'.
Found and cleaned up 1 empty switch in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$4523'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$4523'.
Found and cleaned up 3 empty switches in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$4513'.
Found and cleaned up 4 empty switches in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$4484'.
Found and cleaned up 1 empty switch in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$4475'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$4475'.
Found and cleaned up 1 empty switch in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$4465'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:443$4460'.
Found and cleaned up 14 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4445'.
Found and cleaned up 29 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4427'.
Found and cleaned up 1 empty switch in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4421'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4421'.
Found and cleaned up 6 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4415'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4413'.
Found and cleaned up 32 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4358'.
Found and cleaned up 14 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4357'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4357'.
Removing empty process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4282'.
Found and cleaned up 1 empty switch in `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:146$4272'.
Removing empty process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:146$4272'.
Found and cleaned up 1 empty switch in `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:123$4263'.
Removing empty process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:123$4263'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:0$4235'.
Found and cleaned up 1 empty switch in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4232'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4230'.
Found and cleaned up 1 empty switch in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4216'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4216'.
Found and cleaned up 1 empty switch in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4211'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4211'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4210'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4209'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4190'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4188'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4188'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4186'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4186'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4184'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4184'.
Found and cleaned up 6 empty switches in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4152'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4150'.
Found and cleaned up 4 empty switches in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4090'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4089'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4089'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4083'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4083'.
Removing empty process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_wb_stage.v:0$4063'.
Removing empty process `ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$1315'.
Found and cleaned up 1 empty switch in `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$1299'.
Removing empty process `ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$1299'.
Removing empty process `ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$1297'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4023'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4019'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4016'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4013'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4010'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4007'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4002'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$3997'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1095$3996'.
Found and cleaned up 1 empty switch in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$3994'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$3994'.
Found and cleaned up 1 empty switch in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$3981'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$3981'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$3978'.
Found and cleaned up 9 empty switches in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$3911'.
Found and cleaned up 4 empty switches in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$3871'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3721'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3721'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3719'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3719'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3717'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3717'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3715'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3715'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3713'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3713'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3711'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3711'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3709'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3709'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3707'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3707'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3705'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3705'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3703'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3703'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3701'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3701'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3699'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3699'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3697'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3697'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3695'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3695'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3693'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3693'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3691'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3691'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3689'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3689'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3687'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3687'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3685'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3685'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3683'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3683'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3681'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3681'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3679'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3679'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3677'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3677'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3675'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3675'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3673'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3673'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3671'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3671'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3669'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3669'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3667'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3667'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3665'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3665'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3663'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3663'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3661'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3661'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3561'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4636'.
Removing empty process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4636'.
Cleaned up 248 empty switches.

28.3. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.
Deleting now unused module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.
Deleting now unused module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.
Deleting now unused module $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.
Deleting now unused module ibex_compressed_decoder.
Deleting now unused module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.
Deleting now unused module prim_clock_gating.
Deleting now unused module $paramod\ibex_counter\CounterWidth=64.
Deleting now unused module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.
Deleting now unused module ibex_load_store_unit.
Deleting now unused module $paramod\ibex_fetch_fifo\NUM_REQS=2.
Deleting now unused module $paramod\ibex_alu\RV32B=0.
Deleting now unused module $paramod\ibex_multdiv_fast\RV32M=2.
Deleting now unused module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Deleting now unused module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Deleting now unused module $paramod\ibex_prefetch_buffer\BranchPredictor=1'0.
Deleting now unused module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Deleting now unused module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Deleting now unused module $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Deleting now unused module $paramod\ibex_wb_stage\WritebackStage=1'0.
Deleting now unused module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Deleting now unused module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Deleting now unused module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.
<suppressed ~32 debug messages>

28.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~519 debug messages>

28.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 744 unused cells and 3099 unused wires.
<suppressed ~777 debug messages>

28.6. Executing CHECK pass (checking for obvious problems).
checking module ibex_core..
found and reported 0 problems.

28.7. Executing OPT pass (performing simple optimizations).

28.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~8538 debug messages>
Removed a total of 2846 cells.

28.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\id_stage_i.$procmux$9054: \id_stage_i.id_fsm_q -> 1'1
      Replacing known input bits on port B of cell $flatten\id_stage_i.$procmux$9133: \id_stage_i.id_fsm_q -> 1'0
      Replacing known input bits on port A of cell $flatten\id_stage_i.\controller_i.$procmux$7479: \id_stage_i.controller_i.nmi_mode_q -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5765.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5777.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5673.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10505.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10514.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10524.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10535.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9056.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9058.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9064.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9066.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9072.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9074.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9080.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9082.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9088.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9090.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9101.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9103.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9105.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9107.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9118.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9120.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9122.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9124.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9135.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9137.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9139.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9141.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9150.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9152.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9154.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9169.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9171.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9186.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9188.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9203.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9205.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9219.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9221.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9234.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9236.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9248.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9250.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9264.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9266.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9279.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9281.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10547.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9317.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5680.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9323.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9329.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9335.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10560.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9341.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9347.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9353.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10573.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9359.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9407.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9410.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$9416.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$9470.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10587.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10602.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7201.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7204.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7207.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7210.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7213.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7219.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7222.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7225.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7228.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7234.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7237.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7240.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7243.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7249.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7252.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7255.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7261.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7264.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7267.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7273.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7276.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7279.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7285.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7288.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7294.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7297.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7303.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7306.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7312.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7315.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7321.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7327.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7333.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7339.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7345.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7369.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7376.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7379.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7382.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7385.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7387.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10618.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7394.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7397.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7400.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7402.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7409.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7412.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7414.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7421.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7424.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7426.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7433.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7436.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7438.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7445.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7448.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7450.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7457.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7460.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7462.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10635.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7469.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7472.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7474.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7481.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7484.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7486.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7493.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7495.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7502.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7504.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7511.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7513.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7520.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7522.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10653.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7529.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7531.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7538.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7540.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7547.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7549.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10672.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7556.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7558.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7568.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7570.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7572.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7574.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7576.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7578.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7588.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7590.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7592.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7594.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7596.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7598.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7608.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7610.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7612.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7614.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7616.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7618.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7648.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7650.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7652.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7654.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7656.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7658.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7668.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7670.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7672.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7674.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7676.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7678.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7688.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7690.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7692.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7694.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7696.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7698.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7715.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7717.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7734.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7736.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7751.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7753.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7768.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7770.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7785.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7787.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7819.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7821.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7836.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7838.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7850.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7856.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7862.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7868.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7880.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7886.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7892.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7898.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7904.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7910.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7916.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7922.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7928.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7934.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7941.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7955.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7967.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7969.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7978.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7980.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7988.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7996.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8004.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10497.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8012.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8020.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8028.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8036.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8044.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8055.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8058.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8061.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8063.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8065.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8076.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8079.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8081.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8083.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5696.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8094.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8096.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8098.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8138.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8140.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8150.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8152.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8203.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8212.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8221.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8230.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8239.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8248.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8260.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8262.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8264.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8276.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8278.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8280.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8291.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8293.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8304.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8306.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8316.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8326.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8336.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8346.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8383.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8385.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8415.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8426.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8428.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8438.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8448.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8459.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8470.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8481.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8492.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8503.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8515.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8527.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$11125.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10012.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8696.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8699.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8702.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8705.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8708.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8711.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8714.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8717.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8720.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8723.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8726.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8729.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8732.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8738.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8741.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8744.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8747.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8750.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8753.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8756.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8759.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8762.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8765.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8768.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8771.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8777.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8780.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8783.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8786.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8789.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8792.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8795.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8798.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8801.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8804.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8807.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8813.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8816.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8819.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8822.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8825.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8828.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8831.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8834.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8837.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8840.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8846.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8849.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8852.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8855.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8858.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8861.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8864.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8867.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8870.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8876.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8879.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8882.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8885.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8888.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8891.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8894.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8897.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8903.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8906.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8909.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8912.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8915.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8918.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8921.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8927.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8930.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8933.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8936.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8939.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8942.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8948.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8951.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8954.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8957.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8960.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8966.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8969.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8972.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8975.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8981.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8984.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8987.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8993.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$8996.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$9002.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10032.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5875.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5877.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5882.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5888.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5893.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5899.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5904.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5906.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5911.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5913.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5918.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5920.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5925.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5927.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5934.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5942.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5950.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5957.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5982.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5984.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5996.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5998.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6014.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6016.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6024.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6032.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6040.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6050.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6052.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6054.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6063.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6065.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6071.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6073.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6080.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6082.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$11487.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6097.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10045.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6110.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6123.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6137.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6151.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6165.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10058.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6179.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5667.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6198.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6212.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6227.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6241.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6256.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6271.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6287.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6302.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6317.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10071.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10084.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$11216.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9540.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9542.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9544.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9550.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9552.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6407.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6409.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9554.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9560.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6418.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6420.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9562.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6436.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6438.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9564.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6449.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6451.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9570.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9572.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6462.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6464.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9574.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6471.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6473.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9580.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9582.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6481.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6483.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9584.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6492.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6494.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6504.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6506.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6512.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9597.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6518.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9599.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6524.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9601.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6530.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6536.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9610.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6542.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9612.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6548.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6560.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9621.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6572.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9623.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6578.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6596.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6598.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6605.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9632.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9634.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6613.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9643.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9645.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6620.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9654.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6627.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9656.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6651.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6653.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9665.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9667.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6666.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6668.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9676.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9678.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9687.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9689.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9698.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9700.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6683.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6685.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6693.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9709.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6701.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9711.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6709.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6718.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6721.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6723.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6725.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6735.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6738.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6740.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9719.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6742.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6750.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9727.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6753.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6755.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6757.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9735.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6768.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6771.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6773.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6775.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9743.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6784.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6787.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6789.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9751.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6791.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9759.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9767.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6804.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6806.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6808.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9775.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6817.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6819.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9783.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6830.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6832.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6834.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9791.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6845.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6847.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9799.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6849.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9807.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9815.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6861.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6863.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9823.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9835.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6873.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6886.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6888.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6902.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6916.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6931.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6946.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6959.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6973.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$6988.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$7003.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$7018.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$7034.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$7050.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$9919.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9921.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10097.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9946.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9966.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9986.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9999.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10110.
    dead port 1/2 on $mux $flatten\cs_registers_i.\mcycle_counter_i.$procmux$5017.
    dead port 1/2 on $mux $flatten\cs_registers_i.\minstret_counter_i.$procmux$5017.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4733.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4736.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4738.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4740.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4749.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4751.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4753.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4763.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4765.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4767.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4769.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4778.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4780.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4782.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4791.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4793.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4795.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4803.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4805.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4813.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4815.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4824.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4826.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4836.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4838.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4847.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4856.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4867.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4869.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4871.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4882.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4884.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4886.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4896.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4898.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4900.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4909.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4911.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4920.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4922.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4931.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4933.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4942.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4944.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4955.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4966.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4977.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4979.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4989.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$4999.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5733.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10123.
    dead port 2/2 on $mux $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procmux$5568.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10136.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10150.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5034.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5040.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5046.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10152.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5052.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10171.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5058.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5065.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5072.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5079.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10192.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5086.
    dead port 1/2 on $mux $flatten\load_store_unit_i.$procmux$5095.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5097.
    dead port 1/2 on $mux $flatten\load_store_unit_i.$procmux$5106.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5108.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10194.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5116.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5124.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5132.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5140.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5148.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5156.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5165.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5174.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10454.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5183.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5192.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5203.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5205.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5216.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5218.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5229.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5231.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5242.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5244.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5254.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5264.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10490.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5274.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5284.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5741.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5314.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5324.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5334.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5410.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5416.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5423.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5431.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5753.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5441.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5447.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5454.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5462.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5496.
    dead port 1/2 on $mux $flatten\load_store_unit_i.$procmux$5505.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5507.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5513.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5523.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5525.
    dead port 1/2 on $mux $flatten\load_store_unit_i.$procmux$5535.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5537.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$5544.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5655.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5661.
Removed 708 multiplexer ports.
<suppressed ~281 debug messages>

28.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10779: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5687: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5644_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5643_CMP $auto$opt_reduce.cc:134:opt_mux$11829 }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11043: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11220: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL $flatten\cs_registers_i.$procmux$10489_CMP }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5790: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5786_CMP $auto$opt_reduce.cc:134:opt_mux$11831 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5734_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11092: { $flatten\cs_registers_i.$procmux$11124_CMP $flatten\cs_registers_i.$procmux$11122_CMP $auto$opt_reduce.cc:134:opt_mux$11833 }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5800: $auto$opt_reduce.cc:134:opt_mux$11835
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8530: { $flatten\id_stage_i.\controller_i.$procmux$8540_CMP $flatten\id_stage_i.\controller_i.$procmux$8539_CMP $flatten\id_stage_i.\controller_i.$procmux$8538_CMP $flatten\id_stage_i.\controller_i.$procmux$8516_CMP $flatten\id_stage_i.\controller_i.$procmux$8460_CMP $flatten\id_stage_i.\controller_i.$procmux$8265_CMP $auto$opt_reduce.cc:134:opt_mux$11837 $flatten\id_stage_i.\controller_i.$procmux$7370_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8542: { $flatten\id_stage_i.\controller_i.$procmux$8265_CMP $flatten\id_stage_i.\controller_i.$procmux$8066_CMP $flatten\id_stage_i.\controller_i.$procmux$7970_CMP $auto$opt_reduce.cc:134:opt_mux$11839 $flatten\id_stage_i.\controller_i.$procmux$7370_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8551: { $flatten\id_stage_i.\controller_i.$procmux$8265_CMP $flatten\id_stage_i.\controller_i.$procmux$8066_CMP $flatten\id_stage_i.\controller_i.$procmux$7970_CMP $auto$opt_reduce.cc:134:opt_mux$11841 $flatten\id_stage_i.\controller_i.$procmux$7370_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11628: { $auto$opt_reduce.cc:134:opt_mux$11845 $auto$opt_reduce.cc:134:opt_mux$11843 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8560: { $flatten\id_stage_i.\controller_i.$procmux$8265_CMP $auto$opt_reduce.cc:134:opt_mux$11847 $flatten\id_stage_i.\controller_i.$procmux$7370_CMP }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5698: { $auto$opt_reduce.cc:134:opt_mux$11851 $auto$opt_reduce.cc:134:opt_mux$11849 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8567: $auto$opt_reduce.cc:134:opt_mux$11853
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8588: { $flatten\id_stage_i.\controller_i.$procmux$7970_CMP $auto$opt_reduce.cc:134:opt_mux$11855 $flatten\id_stage_i.\controller_i.$procmux$7370_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8602: { $flatten\id_stage_i.\controller_i.$procmux$8460_CMP $flatten\id_stage_i.\controller_i.$procmux$8265_CMP $auto$opt_reduce.cc:134:opt_mux$11857 }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11266: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5703: { $auto$opt_reduce.cc:134:opt_mux$11861 $auto$opt_reduce.cc:134:opt_mux$11859 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8663: $flatten\id_stage_i.\controller_i.$procmux$7970_CMP
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11133: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8671: { $auto$opt_reduce.cc:134:opt_mux$11863 $flatten\id_stage_i.\controller_i.$procmux$7370_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10954: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $auto$opt_reduce.cc:134:opt_mux$11865 $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11495: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5784: $auto$opt_reduce.cc:134:opt_mux$11867
    New ctrl vector for $pmux cell $flatten\id_stage_i.$procmux$9320: $auto$opt_reduce.cc:134:opt_mux$11869
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11403: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10995: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL $flatten\cs_registers_i.$procmux$10489_CMP }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5708: { $auto$opt_reduce.cc:134:opt_mux$11873 $auto$opt_reduce.cc:134:opt_mux$11871 }
    New ctrl vector for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$5932: { }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5947: $auto$opt_reduce.cc:134:opt_mux$11875
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5963: { $flatten\id_stage_i.\decoder_i.$procmux$5979_CMP $flatten\id_stage_i.\decoder_i.$procmux$5978_CMP $flatten\id_stage_i.\decoder_i.$procmux$5977_CMP $flatten\id_stage_i.\decoder_i.$procmux$5976_CMP $flatten\id_stage_i.\decoder_i.$procmux$5975_CMP $flatten\id_stage_i.\decoder_i.$procmux$5974_CMP $flatten\id_stage_i.\decoder_i.$procmux$5973_CMP $flatten\id_stage_i.\decoder_i.$procmux$5972_CMP $auto$opt_reduce.cc:134:opt_mux$11877 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5990: $auto$opt_reduce.cc:134:opt_mux$11879
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6008: $auto$opt_reduce.cc:134:opt_mux$11881
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5713: { $auto$opt_reduce.cc:134:opt_mux$11885 $auto$opt_reduce.cc:134:opt_mux$11883 }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10909: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL $flatten\cs_registers_i.$procmux$10489_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6320: { $flatten\id_stage_i.\decoder_i.$procmux$6138_CMP $flatten\id_stage_i.\decoder_i.$procmux$6111_CMP $flatten\id_stage_i.\decoder_i.$procmux$5985_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6329: { $flatten\id_stage_i.\decoder_i.$procmux$6213_CMP $flatten\id_stage_i.\decoder_i.$procmux$6138_CMP $auto$opt_reduce.cc:134:opt_mux$11889 $auto$opt_reduce.cc:134:opt_mux$11887 $flatten\id_stage_i.\decoder_i.$procmux$5907_CMP $flatten\id_stage_i.\decoder_i.$procmux$5878_CMP }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5718: $auto$opt_reduce.cc:134:opt_mux$11891
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6342: { $flatten\id_stage_i.\decoder_i.$procmux$6138_CMP $auto$opt_reduce.cc:134:opt_mux$11893 $flatten\id_stage_i.\decoder_i.$procmux$6055_CMP $flatten\id_stage_i.\decoder_i.$procmux$5985_CMP $flatten\id_stage_i.\decoder_i.$procmux$5907_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10823: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9524: { $flatten\cs_registers_i.$eq$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:791$3986_Y $flatten\cs_registers_i.$eq$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:791$3985_Y $auto$opt_reduce.cc:134:opt_mux$11895 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6354: { $flatten\id_stage_i.\decoder_i.$procmux$6272_CMP $flatten\id_stage_i.\decoder_i.$procmux$6213_CMP $flatten\id_stage_i.\decoder_i.$procmux$6138_CMP $flatten\id_stage_i.\decoder_i.$procmux$6111_CMP $auto$opt_reduce.cc:134:opt_mux$11897 $flatten\id_stage_i.\decoder_i.$procmux$5907_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6413: $auto$opt_reduce.cc:134:opt_mux$11899
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6456: $auto$opt_reduce.cc:134:opt_mux$11901
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6610: $auto$opt_reduce.cc:134:opt_mux$11903
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6640: $auto$opt_reduce.cc:134:opt_mux$11905
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6660: { $flatten\id_stage_i.\decoder_i.$procmux$6646_CMP $auto$opt_reduce.cc:134:opt_mux$11907 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6674: { $auto$opt_reduce.cc:134:opt_mux$11913 $auto$opt_reduce.cc:134:opt_mux$11911 $auto$opt_reduce.cc:134:opt_mux$11909 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6798: $flatten\id_stage_i.\decoder_i.$procmux$6802_CTRL
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6857: $flatten\id_stage_i.\decoder_i.$procmux$6802_CMP [0]
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10867: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6912: { $auto$opt_reduce.cc:134:opt_mux$11915 $flatten\id_stage_i.\decoder_i.$procmux$6404_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6942: $auto$opt_reduce.cc:134:opt_mux$11917
    New ctrl vector for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7479: { }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$7053: { $flatten\id_stage_i.\decoder_i.$procmux$7035_CMP $flatten\id_stage_i.\decoder_i.$procmux$6989_CMP $auto$opt_reduce.cc:134:opt_mux$11919 $flatten\id_stage_i.\decoder_i.$procmux$6410_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$7070: { $auto$opt_reduce.cc:134:opt_mux$11921 $flatten\id_stage_i.\decoder_i.$procmux$6599_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$7078: { $flatten\id_stage_i.\decoder_i.$procmux$6989_CMP $flatten\id_stage_i.\decoder_i.$procmux$6974_CMP $flatten\id_stage_i.\decoder_i.$procmux$6932_CMP $flatten\id_stage_i.\decoder_i.$procmux$6889_CMP $auto$opt_reduce.cc:134:opt_mux$11923 $flatten\id_stage_i.\decoder_i.$procmux$6726_CMP $flatten\id_stage_i.\decoder_i.$procmux$6654_CMP $flatten\id_stage_i.\decoder_i.$procmux$6599_CMP $flatten\id_stage_i.\decoder_i.$procmux$6410_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$7191: $auto$opt_reduce.cc:134:opt_mux$11925
    New ctrl vector for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4876: { $auto$opt_reduce.cc:134:opt_mux$11927 $flatten\if_stage_i.\compressed_decoder_i.$procmux$4862_CTRL }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5723: { $auto$opt_reduce.cc:134:opt_mux$11929 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5643_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5642_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11358: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\alu_i.$procmux$5583: { $flatten\ex_block_i.\alu_i.$procmux$5597_CTRL $flatten\ex_block_i.\alu_i.$procmux$5596_CTRL $flatten\ex_block_i.\alu_i.$procmux$5595_CTRL $flatten\ex_block_i.\alu_i.$procmux$5593_CTRL }
    New ctrl vector for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4959: { $flatten\if_stage_i.\compressed_decoder_i.$procmux$4842_CMP [1] $flatten\if_stage_i.\compressed_decoder_i.$procmux$4739_CMP $auto$opt_reduce.cc:134:opt_mux$11931 }
    New ctrl vector for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4984: { $flatten\if_stage_i.\compressed_decoder_i.$procmux$4837_CMP $auto$opt_reduce.cc:134:opt_mux$11933 $flatten\if_stage_i.\compressed_decoder_i.$procmux$4985_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11312: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10829_CTRL $flatten\cs_registers_i.$procmux$11317_CTRL $flatten\cs_registers_i.$procmux$11047_CTRL }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$5389: { $flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:325$2103_Y $auto$opt_reduce.cc:134:opt_mux$11935 }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$5399: { $flatten\load_store_unit_i.$procmux$5066_CMP $auto$opt_reduce.cc:134:opt_mux$11937 }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11454: { $flatten\cs_registers_i.$procmux$11124_CMP $flatten\cs_registers_i.$procmux$11122_CMP $auto$opt_reduce.cc:134:opt_mux$11939 }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11183: { $flatten\cs_registers_i.$procmux$11124_CMP $flatten\cs_registers_i.$procmux$11122_CMP $auto$opt_reduce.cc:134:opt_mux$11941 }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5641: { $auto$opt_reduce.cc:134:opt_mux$11943 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5643_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5642_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11842: { $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10489_CMP $flatten\cs_registers_i.$procmux$10496_CMP $flatten\cs_registers_i.$procmux$10504_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10785_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10807_CMP $flatten\cs_registers_i.$procmux$10808_CMP $flatten\cs_registers_i.$procmux$10809_CMP $flatten\cs_registers_i.$procmux$10810_CMP $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$11629_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11904: { $flatten\id_stage_i.\decoder_i.$procmux$6649_CMP $flatten\id_stage_i.\decoder_i.$procmux$6648_CMP $flatten\id_stage_i.\decoder_i.$procmux$6647_CMP $flatten\id_stage_i.\decoder_i.$procmux$6646_CMP $flatten\id_stage_i.\decoder_i.$procmux$6645_CMP $flatten\id_stage_i.\decoder_i.$procmux$6644_CMP $flatten\id_stage_i.\decoder_i.$procmux$6643_CMP $flatten\id_stage_i.\decoder_i.$procmux$6642_CMP $flatten\id_stage_i.\decoder_i.$procmux$6641_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11930: { $flatten\if_stage_i.\compressed_decoder_i.$procmux$4843_CMP $flatten\if_stage_i.\compressed_decoder_i.$procmux$4842_CMP [3:2] $flatten\if_stage_i.\compressed_decoder_i.$procmux$4842_CMP [0] $flatten\if_stage_i.\compressed_decoder_i.$procmux$4837_CMP $flatten\if_stage_i.\compressed_decoder_i.$procmux$4825_CMP }
  Optimizing cells in module \ibex_core.
Performed a total of 73 changes.

28.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~195 debug messages>
Removed a total of 65 cells.

28.7.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 51 unused cells and 2213 unused wires.
<suppressed ~56 debug messages>

28.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~5 debug messages>

28.7.9. Rerunning OPT passes. (Maybe there is more to do..)

28.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~297 debug messages>

28.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5687: { $auto$opt_reduce.cc:134:opt_mux$11945 $auto$opt_reduce.cc:134:opt_mux$11829 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6329: { $auto$opt_reduce.cc:134:opt_mux$11947 $auto$opt_reduce.cc:134:opt_mux$11889 $auto$opt_reduce.cc:134:opt_mux$11887 $flatten\id_stage_i.\decoder_i.$procmux$5907_CMP $flatten\id_stage_i.\decoder_i.$procmux$5878_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$7053: { $auto$opt_reduce.cc:134:opt_mux$11949 $auto$opt_reduce.cc:134:opt_mux$11919 $flatten\id_stage_i.\decoder_i.$procmux$6410_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$7064: { $auto$opt_reduce.cc:134:opt_mux$11951 $flatten\id_stage_i.\decoder_i.$procmux$6599_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$7117: $auto$opt_reduce.cc:134:opt_mux$11953
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$5362: { $flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:325$2103_Y $auto$opt_reduce.cc:134:opt_mux$11955 }
  Optimizing cells in module \ibex_core.
Performed a total of 6 changes.

28.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

28.7.13. Executing OPT_DFF pass (perform DFF optimizations).

28.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

28.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.7.16. Rerunning OPT passes. (Maybe there is more to do..)

28.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~297 debug messages>

28.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

28.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

28.7.20. Executing OPT_DFF pass (perform DFF optimizations).

28.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

28.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.7.23. Finished OPT passes. (There is nothing left to do.)

28.8. Executing FSM pass (extract and optimize FSM).

28.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ibex_core.cs_registers_i.u_cpuctrl_csr.rdata_q as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register ibex_core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q.
Found FSM state register ibex_core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q.
Not marking ibex_core.id_stage_i.controller_i.ctrl_fsm_cs as FSM state register:
    Circuit seems to be self-resetting.
Found FSM state register ibex_core.load_store_unit_i.data_type_q.
Not marking ibex_core.load_store_unit_i.ls_fsm_cs as FSM state register:
    Users of register don't seem to benefit from recoding.
    Circuit seems to be self-resetting.

28.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q' from module `\ibex_core'.
  found $adff cell for state register: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11758
  root of input selection tree: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \ex_block_i.gen_multdiv_fast.multdiv_i.mult_en_internal
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5642_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5643_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5644_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5645_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:546$4515_Y
  found state code: 2'11
  found state code: 2'10
  found state code: 2'01
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5642_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5643_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5644_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5645_CMP
  ctrl inputs: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:546$4515_Y \ex_block_i.gen_multdiv_fast.multdiv_i.mult_en_internal }
  ctrl outputs: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5645_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5644_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5643_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5642_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0] }
  transition:       2'00 2'-0 ->       2'00 6'100000
  transition:       2'00 2'-1 ->       2'01 6'100001
  transition:       2'10 2'-0 ->       2'10 6'001010
  transition:       2'10 2'01 ->       2'11 6'001011
  transition:       2'10 2'11 ->       2'00 6'001000
  transition:       2'01 2'-0 ->       2'01 6'010001
  transition:       2'01 2'-1 ->       2'10 6'010010
  transition:       2'11 2'-0 ->       2'11 6'000111
  transition:       2'11 2'-1 ->       2'00 6'000100
Extracting FSM `\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q' from module `\ibex_core'.
  found $adff cell for state register: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11759
  root of input selection tree: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: \ex_block_i.gen_multdiv_fast.multdiv_i.div_en_internal
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5734_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5742_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5793_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5785_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5786_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5754_CMP
  found state code: 3'110
  found state code: 3'101
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:659$4500_Y
  found state code: 3'011
  found state code: 3'100
  found state code: 3'010
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$logic_and$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:629$4489_Y
  found state code: 3'001
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5734_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5742_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5754_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5785_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5786_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5793_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5834_CMP
  ctrl inputs: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:659$4500_Y $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$logic_and$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:629$4489_Y \ex_block_i.gen_multdiv_fast.multdiv_i.div_en_internal }
  ctrl outputs: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5834_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5793_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5786_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5785_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5754_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5742_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5734_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] }
  transition:      3'000 3'--0 ->      3'000 10'0000100000
  transition:      3'000 3'-01 ->      3'001 10'0000100001
  transition:      3'000 3'-11 ->      3'110 10'0000100110
  transition:      3'100 3'--0 ->      3'100 10'0000010100
  transition:      3'100 3'--1 ->      3'101 10'0000010101
  transition:      3'010 3'--0 ->      3'010 10'0001000010
  transition:      3'010 3'--1 ->      3'011 10'0001000011
  transition:      3'110 3'--0 ->      3'110 10'1000000110
  transition:      3'110 3'--1 ->      3'000 10'1000000000
  transition:      3'001 3'--0 ->      3'001 10'0010000001
  transition:      3'001 3'--1 ->      3'010 10'0010000010
  transition:      3'101 3'--0 ->      3'101 10'0000001101
  transition:      3'101 3'--1 ->      3'110 10'0000001110
  transition:      3'011 3'--0 ->      3'011 10'0100000011
  transition:      3'011 3'0-1 ->      3'011 10'0100000011
  transition:      3'011 3'1-1 ->      3'100 10'0100000100
Extracting FSM `\load_store_unit_i.data_type_q' from module `\ibex_core'.
  found $adff cell for state register: $flatten\load_store_unit_i.$procdff$11746
  root of input selection tree: $flatten\load_store_unit_i.$0\data_type_q[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \load_store_unit_i.ctrl_update
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$11925
  found ctrl input: $flatten\id_stage_i.\decoder_i.$procmux$6405_CMP
  found ctrl input: $flatten\id_stage_i.\decoder_i.$procmux$6901_CMP
  found state code: 2'01
  found state code: 2'10
  found ctrl output: $flatten\load_store_unit_i.$procmux$5406_CMP
  found ctrl output: $flatten\load_store_unit_i.$procmux$5405_CMP
  found ctrl output: $flatten\load_store_unit_i.$procmux$5404_CMP [1]
  found ctrl output: $flatten\load_store_unit_i.$procmux$5404_CMP [0]
  ctrl inputs: { \load_store_unit_i.ctrl_update $flatten\id_stage_i.\decoder_i.$procmux$6901_CMP $flatten\id_stage_i.\decoder_i.$procmux$6405_CMP $auto$opt_reduce.cc:134:opt_mux$11925 }
  ctrl outputs: { $flatten\load_store_unit_i.$0\data_type_q[1:0] $flatten\load_store_unit_i.$procmux$5404_CMP $flatten\load_store_unit_i.$procmux$5405_CMP $flatten\load_store_unit_i.$procmux$5406_CMP }
  transition:       2'00 4'0--- ->       2'00 6'000001
  transition:       2'00 4'1--0 ->       2'00 6'000001
  transition:       2'00 4'1001 ->       2'00 6'000001
  transition:       2'00 4'11-1 ->       2'10 6'100001
  transition:       2'00 4'1-11 ->       2'01 6'010001
  transition:       2'10 4'0--- ->       2'10 6'100100
  transition:       2'10 4'1--0 ->       2'00 6'000100
  transition:       2'10 4'1001 ->       2'00 6'000100
  transition:       2'10 4'11-1 ->       2'10 6'100100
  transition:       2'10 4'1-11 ->       2'01 6'010100
  transition:       2'01 4'0--- ->       2'01 6'010010
  transition:       2'01 4'1--0 ->       2'00 6'000010
  transition:       2'01 4'1001 ->       2'00 6'000010
  transition:       2'01 4'11-1 ->       2'10 6'100010
  transition:       2'01 4'1-11 ->       2'01 6'010010

28.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\load_store_unit_i.data_type_q$11971' from module `\ibex_core'.
Optimizing FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11962' from module `\ibex_core'.
Optimizing FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11956' from module `\ibex_core'.

28.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 26 unused cells and 26 unused wires.
<suppressed ~29 debug messages>

28.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11956' from module `\ibex_core'.
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0] [0].
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0] [1].
Optimizing FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11962' from module `\ibex_core'.
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] [0].
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] [1].
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] [2].
Optimizing FSM `$fsm$\load_store_unit_i.data_type_q$11971' from module `\ibex_core'.
  Removing unused output signal $flatten\load_store_unit_i.$0\data_type_q[1:0] [0].
  Removing unused output signal $flatten\load_store_unit_i.$0\data_type_q[1:0] [1].

28.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11956' from module `\ibex_core' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11962' from module `\ibex_core' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ------1
  100 -> -----1-
  010 -> ----1--
  110 -> ---1---
  001 -> --1----
  101 -> -1-----
  011 -> 1------
Recoding FSM `$fsm$\load_store_unit_i.data_type_q$11971' from module `\ibex_core' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

28.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11956' from module `ibex_core':
-------------------------------------

  Information on FSM $fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11956 (\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q):

  Number of input signals:    2
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: \ex_block_i.gen_multdiv_fast.multdiv_i.mult_en_internal
    1: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:546$4515_Y

  Output signals:
    0: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5642_CMP
    1: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5643_CMP
    2: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5644_CMP
    3: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5645_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'-0   ->     0 4'1000
      1:     0 2'-1   ->     2 4'1000
      2:     1 2'11   ->     0 4'0010
      3:     1 2'-0   ->     1 4'0010
      4:     1 2'01   ->     3 4'0010
      5:     2 2'-1   ->     1 4'0100
      6:     2 2'-0   ->     2 4'0100
      7:     3 2'-1   ->     0 4'0001
      8:     3 2'-0   ->     3 4'0001

-------------------------------------

FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11962' from module `ibex_core':
-------------------------------------

  Information on FSM $fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11962 (\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q):

  Number of input signals:    3
  Number of output signals:   7
  Number of state bits:       7

  Input signals:
    0: \ex_block_i.gen_multdiv_fast.multdiv_i.div_en_internal
    1: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$logic_and$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:629$4489_Y
    2: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:659$4500_Y

  Output signals:
    0: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5734_CMP
    1: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5742_CMP
    2: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5754_CMP
    3: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5785_CMP
    4: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5786_CMP
    5: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5793_CMP
    6: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5834_CMP

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 7'0000100
      1:     0 3'-11   ->     3 7'0000100
      2:     0 3'-01   ->     4 7'0000100
      3:     1 3'--0   ->     1 7'0000010
      4:     1 3'--1   ->     5 7'0000010
      5:     2 3'--0   ->     2 7'0001000
      6:     2 3'--1   ->     6 7'0001000
      7:     3 3'--1   ->     0 7'1000000
      8:     3 3'--0   ->     3 7'1000000
      9:     4 3'--1   ->     2 7'0010000
     10:     4 3'--0   ->     4 7'0010000
     11:     5 3'--1   ->     3 7'0000001
     12:     5 3'--0   ->     5 7'0000001
     13:     6 3'1-1   ->     1 7'0100000
     14:     6 3'--0   ->     6 7'0100000
     15:     6 3'0-1   ->     6 7'0100000

-------------------------------------

FSM `$fsm$\load_store_unit_i.data_type_q$11971' from module `ibex_core':
-------------------------------------

  Information on FSM $fsm$\load_store_unit_i.data_type_q$11971 (\load_store_unit_i.data_type_q):

  Number of input signals:    4
  Number of output signals:   4
  Number of state bits:       3

  Input signals:
    0: $auto$opt_reduce.cc:134:opt_mux$11925
    1: $flatten\id_stage_i.\decoder_i.$procmux$6405_CMP
    2: $flatten\id_stage_i.\decoder_i.$procmux$6901_CMP
    3: \load_store_unit_i.ctrl_update

  Output signals:
    0: $flatten\load_store_unit_i.$procmux$5406_CMP
    1: $flatten\load_store_unit_i.$procmux$5405_CMP
    2: $flatten\load_store_unit_i.$procmux$5404_CMP [0]
    3: $flatten\load_store_unit_i.$procmux$5404_CMP [1]

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'1--0   ->     0 4'0001
      1:     0 4'1001   ->     0 4'0001
      2:     0 4'0---   ->     0 4'0001
      3:     0 4'11-1   ->     1 4'0001
      4:     0 4'1-11   ->     2 4'0001
      5:     1 4'1--0   ->     0 4'0100
      6:     1 4'1001   ->     0 4'0100
      7:     1 4'11-1   ->     1 4'0100
      8:     1 4'0---   ->     1 4'0100
      9:     1 4'1-11   ->     2 4'0100
     10:     2 4'1--0   ->     0 4'0010
     11:     2 4'1001   ->     0 4'0010
     12:     2 4'11-1   ->     1 4'0010
     13:     2 4'1-11   ->     2 4'0010
     14:     2 4'0---   ->     2 4'0010

-------------------------------------

28.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11956' from module `\ibex_core'.
Mapping FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11962' from module `\ibex_core'.
Mapping FSM `$fsm$\load_store_unit_i.data_type_q$11971' from module `\ibex_core'.

28.9. Executing OPT pass (performing simple optimizations).

28.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~23 debug messages>

28.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

28.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~294 debug messages>

28.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

28.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

28.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$11792 ($adff) from module ibex_core (D = 1'1, Q = \fetch_enable_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11749 ($adff) from module ibex_core (D = \data_rdata_i [31:8], Q = \load_store_unit_i.rdata_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11748 ($adff) from module ibex_core (D = \load_store_unit_i.lsu_we_i, Q = \load_store_unit_i.data_we_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11747 ($adff) from module ibex_core (D = \load_store_unit_i.lsu_sign_ext_i, Q = \load_store_unit_i.data_sign_ext_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11745 ($adff) from module ibex_core (D = \ex_block_i.alu_adder_result_ext [2:1], Q = \load_store_unit_i.rdata_offset_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11744 ($adff) from module ibex_core (D = \ex_block_i.alu_adder_result_ext [32:1], Q = \load_store_unit_i.addr_last_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11743 ($adff) from module ibex_core (D = \load_store_unit_i.ls_fsm_ns, Q = \load_store_unit_i.ls_fsm_cs).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11742 ($adff) from module ibex_core (D = \load_store_unit_i.lsu_err_d, Q = \load_store_unit_i.lsu_err_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11741 ($adff) from module ibex_core (D = \load_store_unit_i.pmp_err_d, Q = \load_store_unit_i.pmp_err_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11740 ($adff) from module ibex_core (D = \load_store_unit_i.handle_misaligned_d, Q = \load_store_unit_i.handle_misaligned_q).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11757 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_d, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11755 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_d [0], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [0]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11754 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_d [31:0], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [31:0]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11753 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_d [1], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [1]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11752 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_d [63:32], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [63:32]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11751 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_err_i, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [2]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11750 ($dff) from module ibex_core (D = \instr_rdata_i, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [95:64]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$11777 ($dff) from module ibex_core (D = $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4274_Y [1:0], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [1:0]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$11777 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d [31:2], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [31:2]).
Adding SRST signal on $auto$opt_dff.cc:764:run$12188 ($dffe) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [0], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [0], rval = 1'0).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$11776 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$11775 ($adff) from module ibex_core (D = { 1'0 \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.rdata_pmp_err_q [1] }, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.rdata_pmp_err_q).
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12192 ($adffe) from module ibex_core.
Adding EN signal on $flatten\if_stage_i.$procdff$11785 ($dff) from module ibex_core (D = { \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q 1'0 }, Q = \if_stage_i.pc_id_o).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12193 ($dffe) from module ibex_core.
Adding EN signal on $flatten\if_stage_i.$procdff$11784 ($dff) from module ibex_core (D = \if_stage_i.illegal_c_instr_out, Q = \if_stage_i.illegal_c_insn_id_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11783 ($dff) from module ibex_core (D = \if_stage_i.fetch_err_plus2, Q = \if_stage_i.instr_fetch_err_plus2_o).
Adding SRST signal on $auto$opt_dff.cc:764:run$12195 ($dffe) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_plus2, Q = \if_stage_i.instr_fetch_err_plus2_o, rval = 1'0).
Adding EN signal on $flatten\if_stage_i.$procdff$11782 ($dff) from module ibex_core (D = \if_stage_i.instr_err_out, Q = \if_stage_i.instr_fetch_err_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11781 ($dff) from module ibex_core (D = \if_stage_i.instr_is_compressed_out, Q = \if_stage_i.instr_is_compressed_id_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11780 ($dff) from module ibex_core (D = \if_stage_i.compressed_decoder_i.instr_i [15:0], Q = \if_stage_i.instr_rdata_c_id_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11779 ($dff) from module ibex_core (D = \if_stage_i.instr_out, Q = \if_stage_i.instr_rdata_alu_id_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11778 ($dff) from module ibex_core (D = \if_stage_i.instr_out, Q = \if_stage_i.instr_rdata_id_o).
Adding EN signal on $flatten\id_stage_i.\controller_i.$procdff$11766 ($adff) from module ibex_core (D = \id_stage_i.controller_i.debug_mode_d, Q = \id_stage_i.controller_i.debug_mode_q).
Adding EN signal on $flatten\id_stage_i.\controller_i.$procdff$11765 ($adff) from module ibex_core (D = \id_stage_i.controller_i.nmi_mode_d, Q = \id_stage_i.controller_i.nmi_mode_q).
Adding EN signal on $flatten\id_stage_i.\controller_i.$procdff$11764 ($adff) from module ibex_core (D = \id_stage_i.controller_i.ctrl_fsm_ns, Q = \id_stage_i.controller_i.ctrl_fsm_cs).
Adding EN signal on $flatten\id_stage_i.$procdff$11791 ($adff) from module ibex_core (D = $flatten\id_stage_i.$2\id_fsm_d[0:0], Q = \id_stage_i.id_fsm_q).
Adding EN signal on $flatten\id_stage_i.$procdff$11790 ($adff) from module ibex_core (D = \id_stage_i.imd_val_d_ex_i [67:34], Q = \id_stage_i.imd_val_q [67:34]).
Adding EN signal on $flatten\id_stage_i.$procdff$11789 ($adff) from module ibex_core (D = \id_stage_i.imd_val_d_ex_i [33:32], Q = \id_stage_i.imd_val_q [33:32]).
Adding EN signal on $flatten\id_stage_i.$procdff$11789 ($adff) from module ibex_core (D = \id_stage_i.imd_val_d_ex_i [31:0], Q = \id_stage_i.imd_val_q [31:0]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11826 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [31:0]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11825 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [63:32]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11824 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [95:64]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11823 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [127:96]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11822 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [159:128]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11821 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [191:160]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11820 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [223:192]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11819 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [255:224]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11818 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [287:256]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11817 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [319:288]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11816 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [351:320]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11815 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [383:352]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11814 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [415:384]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11813 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [447:416]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11812 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [479:448]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11811 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [511:480]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11810 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [543:512]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11809 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [575:544]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11808 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [607:576]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11807 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [639:608]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11806 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [671:640]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11805 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [703:672]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11804 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [735:704]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11803 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [767:736]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11802 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [799:768]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11801 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [831:800]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11800 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [863:832]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11799 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [895:864]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11798 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [927:896]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11797 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [959:928]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11796 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [991:960]).
Adding EN signal on $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11763 ($adff) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.div_counter_d, Q = \ex_block_i.gen_multdiv_fast.multdiv_i.div_counter_q).
Adding EN signal on $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11762 ($adff) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.op_quotient_d, Q = \ex_block_i.gen_multdiv_fast.multdiv_i.op_quotient_q).
Adding EN signal on $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11761 ($adff) from module ibex_core (D = \ex_block_i.alu_i.is_equal, Q = \ex_block_i.gen_multdiv_fast.multdiv_i.div_by_zero_q).
Adding EN signal on $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11760 ($adff) from module ibex_core (D = $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:642$4495_Y, Q = \ex_block_i.gen_multdiv_fast.multdiv_i.op_numerator_q).
Adding EN signal on $flatten\cs_registers_i.\u_mtvec_csr.$procdff$11734 ($adff) from module ibex_core (D = \cs_registers_i.u_mtvec_csr.wr_data_i, Q = \cs_registers_i.u_mtvec_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mtval_csr.$procdff$11737 ($adff) from module ibex_core (D = \cs_registers_i.u_mtval_csr.wr_data_i, Q = \cs_registers_i.u_mtval_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mstatus_csr.$procdff$11827 ($adff) from module ibex_core (D = { \cs_registers_i.csr_wdata_int [17] \cs_registers_i.csr_wdata_int [21] }, Q = \cs_registers_i.u_mstatus_csr.rdata_q [1:0]).
Adding EN signal on $flatten\cs_registers_i.\u_mstatus_csr.$procdff$11827 ($adff) from module ibex_core (D = \cs_registers_i.u_mstatus_csr.wr_data_i [5:2], Q = \cs_registers_i.u_mstatus_csr.rdata_q [5:2]).
Adding EN signal on $flatten\cs_registers_i.\u_mstack_epc_csr.$procdff$11737 ($adff) from module ibex_core (D = \cs_registers_i.u_mepc_csr.rdata_q, Q = \cs_registers_i.u_mstack_epc_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mstack_csr.$procdff$11736 ($adff) from module ibex_core (D = \cs_registers_i.u_mstatus_csr.rdata_q [4:2], Q = \cs_registers_i.u_mstack_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mstack_cause_csr.$procdff$11739 ($adff) from module ibex_core (D = \cs_registers_i.u_mcause_csr.rdata_q, Q = \cs_registers_i.u_mstack_cause_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mscratch_csr.$procdff$11737 ($adff) from module ibex_core (D = \cs_registers_i.csr_wdata_int, Q = \cs_registers_i.u_mscratch_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mie_csr.$procdff$11733 ($adff) from module ibex_core (D = { \cs_registers_i.csr_wdata_int [3] \cs_registers_i.csr_wdata_int [7] \cs_registers_i.csr_wdata_int [11] \cs_registers_i.csr_wdata_int [30:16] }, Q = \cs_registers_i.u_mie_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mepc_csr.$procdff$11737 ($adff) from module ibex_core (D = \cs_registers_i.u_mepc_csr.wr_data_i, Q = \cs_registers_i.u_mepc_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mcause_csr.$procdff$11739 ($adff) from module ibex_core (D = \cs_registers_i.u_mcause_csr.wr_data_i, Q = \cs_registers_i.u_mcause_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_dscratch1_csr.$procdff$11737 ($adff) from module ibex_core (D = \cs_registers_i.csr_wdata_int, Q = \cs_registers_i.u_dscratch1_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_dscratch0_csr.$procdff$11737 ($adff) from module ibex_core (D = \cs_registers_i.csr_wdata_int, Q = \cs_registers_i.u_dscratch0_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_depc_csr.$procdff$11737 ($adff) from module ibex_core (D = \cs_registers_i.u_depc_csr.wr_data_i, Q = \cs_registers_i.u_depc_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_dcsr_csr.$procdff$11735 ($adff) from module ibex_core (D = { 16'0100000000000000 \cs_registers_i.csr_wdata_int [15] 1'0 \cs_registers_i.csr_wdata_int [13:11] 5'00000 \cs_registers_i.csr_wdata_int [2] }, Q = { \cs_registers_i.u_dcsr_csr.rdata_q [31:9] \cs_registers_i.u_dcsr_csr.rdata_q [5:2] }).
Adding EN signal on $flatten\cs_registers_i.\u_dcsr_csr.$procdff$11735 ($adff) from module ibex_core (D = { \cs_registers_i.u_dcsr_csr.wr_data_i [8:6] \cs_registers_i.u_dcsr_csr.wr_data_i [1:0] }, Q = { \cs_registers_i.u_dcsr_csr.rdata_q [8:6] \cs_registers_i.u_dcsr_csr.rdata_q [1:0] }).
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 24 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 1-bit at position 25 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Setting constant 0-bit at position 26 on $auto$opt_dff.cc:764:run$12312 ($adffe) from module ibex_core.
Adding EN signal on $flatten\cs_registers_i.\u_cpuctrl_csr.$procdff$11739 ($adff) from module ibex_core (D = 6'000000, Q = \cs_registers_i.u_cpuctrl_csr.rdata_q).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12314 ($adffe) from module ibex_core.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12314 ($adffe) from module ibex_core.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$12314 ($adffe) from module ibex_core.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$12314 ($adffe) from module ibex_core.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$12314 ($adffe) from module ibex_core.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$12314 ($adffe) from module ibex_core.
Adding EN signal on $flatten\cs_registers_i.\minstret_counter_i.$procdff$11738 ($adff) from module ibex_core (D = \cs_registers_i.minstret_counter_i.counter_d [63:32], Q = \cs_registers_i.minstret_counter_i.counter_q [63:32]).
Adding EN signal on $flatten\cs_registers_i.\minstret_counter_i.$procdff$11738 ($adff) from module ibex_core (D = \cs_registers_i.minstret_counter_i.counter_d [31:0], Q = \cs_registers_i.minstret_counter_i.counter_q [31:0]).
Adding EN signal on $flatten\cs_registers_i.\mcycle_counter_i.$procdff$11738 ($adff) from module ibex_core (D = \cs_registers_i.mcycle_counter_i.counter_d [63:32], Q = \cs_registers_i.mcycle_counter_i.counter_q [63:32]).
Adding EN signal on $flatten\cs_registers_i.\mcycle_counter_i.$procdff$11738 ($adff) from module ibex_core (D = \cs_registers_i.mcycle_counter_i.counter_d [31:0], Q = \cs_registers_i.mcycle_counter_i.counter_q [31:0]).
Adding EN signal on $flatten\cs_registers_i.$procdff$11795 ($adff) from module ibex_core (D = \cs_registers_i.priv_lvl_d, Q = \cs_registers_i.priv_lvl_q).
Adding EN signal on $flatten\cs_registers_i.$procdff$11794 ($adff) from module ibex_core (D = { \cs_registers_i.csr_wdata_int [2] 1'0 \cs_registers_i.csr_wdata_int [0] }, Q = \cs_registers_i.mcountinhibit_q).
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12346 ($adffe) from module ibex_core.

28.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 85 unused cells and 130 unused wires.
<suppressed ~96 debug messages>

28.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~21 debug messages>

28.9.9. Rerunning OPT passes. (Maybe there is more to do..)

28.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~240 debug messages>

28.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10779: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10909: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10995: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11043: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11220: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11266: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11312: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $auto$opt_reduce.cc:134:opt_mux$12348 $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11358: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11403: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
  Optimizing cells in module \ibex_core.
Performed a total of 9 changes.

28.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~159 debug messages>
Removed a total of 53 cells.

28.9.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12192 ($adffe) from module ibex_core.

28.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 42 unused wires.
<suppressed ~1 debug messages>

28.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~2 debug messages>

28.9.16. Rerunning OPT passes. (Maybe there is more to do..)

28.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~240 debug messages>

28.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

28.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

28.9.20. Executing OPT_DFF pass (perform DFF optimizations).

28.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

28.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.9.23. Rerunning OPT passes. (Maybe there is more to do..)

28.9.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~240 debug messages>

28.9.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

28.9.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

28.9.27. Executing OPT_DFF pass (perform DFF optimizations).

28.9.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

28.9.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.9.30. Finished OPT passes. (There is nothing left to do.)

28.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4024 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4025 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4026 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4027 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4028 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4029 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4030 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4031 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4032 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4033 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4034 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4035 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4036 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4037 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4038 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4039 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:580$3888 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:581$3889 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:582$3890 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:583$3891 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:584$3892 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:585$3893 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:586$3894 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:587$3895 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:588$3896 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:589$3897 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:590$3898 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:591$3899 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:592$3900 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:593$3901 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:594$3902 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:595$3903 (cs_registers_i.pmp_addr_rdata).
Removed top 29 bits (of 32) from port B of cell ibex_core.$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4271 ($add).
Removed top 29 bits (of 31) from port B of cell ibex_core.$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:88$4671 ($add).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$eq$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:343$3290 ($eq).
Removed top 11 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4730 ($mux).
Removed top 7 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4746 ($mux).
Removed top 7 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4776 ($mux).
Removed top 7 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4811 ($mux).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4825_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4842_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4842_CMP1 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4863_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4864_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4865_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4872_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4897_CMP1 ($eq).
Removed top 3 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$4940 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\if_stage_i.$procmux$9037_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.$procmux$9033_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.$procmux$9032_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.$procmux$9031_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$ne$/openLANE_flow/designs/ibex/src/ibex_controller.v:487$4327 ($ne).
Removed top 30 bits (of 32) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4394 ($add).
Removed top 4 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:775$4398 ($mux).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7370_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7373 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7391 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7418 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7466 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7490 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7535 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7544 ($mux).
Removed top 4 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7686 ($mux).
Removed top 3 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7722 ($mux).
Removed top 3 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7724 ($mux).
Removed top 3 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7726 ($mux).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7728 ($mux).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7730 ($mux).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7732 ($mux).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7878 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7908 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7914 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7986 ($mux).
Removed top 3 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8052 ($mux).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8066_CMP0 ($eq).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8073 ($mux).
Removed top 1 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8091 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8136 ($mux).
Removed top 1 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8148 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8201 ($mux).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8265_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8460_CMP0 ($eq).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8501 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8513 ($mux).
Removed top 2 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8516_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8538_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8539_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8693 ($mux).
Removed top 2 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8735 ($mux).
Removed top 2 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8774 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8810 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8843 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8873 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$8900 ($mux).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$eq$/openLANE_flow/designs/ibex/src/ibex_decoder.v:923$4453 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5905_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5907_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5964_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5965_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5966_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5967_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5968_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5969_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5970_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5971_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5972_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5973_CMP0 ($eq).
Removed top 9 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5974_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5975_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5976_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5977_CMP0 ($eq).
Removed top 8 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5978_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5979_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5985_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6055_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6094_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6095_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6111_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6121 ($mux).
Removed top 1 bits (of 3) from mux cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6177 ($mux).
Removed top 2 bits (of 3) from mux cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6285 ($mux).
Removed top 2 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6334_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6335_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6347_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6405_CMP0 ($eq).
Removed top 3 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6457_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6459_CMP0 ($eq).
Removed top 11 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6460_CMP0 ($eq).
Removed top 8 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$6649_CMP3 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\id_stage_i.$procmux$9517_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.$procmux$9050_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.$procmux$9049_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.$procmux$9048_CMP0 ($eq).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\id_stage_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:668$4185 ($mux).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4139 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4137 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4135 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4134 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4121 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4120 ($eq).
Removed top 27 bits (of 32) from mux cell ibex_core.$flatten\id_stage_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:615$4082 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12149 ($ne).
Removed top 1 bits (of 3) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12130 ($ne).
Removed top 1 bits (of 33) from port A of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$4472 ($or).
Removed top 1 bits (of 33) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$4472 ($or).
Removed top 1 bits (of 33) from port Y of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$4472 ($or).
Removed top 1 bits (of 33) from mux cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$4473 ($mux).
Removed top 31 bits (of 32) from port A of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$shl$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:597$4474 ($shl).
Removed top 4 bits (of 5) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:614$4485 ($sub).
Removed top 4 bits (of 5) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:659$4500 ($eq).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:675$4506 ($mux).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:677$4507 ($mux).
Removed top 18 bits (of 35) from port A of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4511 ($mul).
Removed top 18 bits (of 35) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4511 ($mul).
Removed top 1 bits (of 35) from port Y of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4511 ($mul).
Removed top 1 bits (of 35) from port A of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4512 ($add).
Removed top 1 bits (of 35) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4512 ($add).
Removed top 1 bits (of 35) from port Y of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4512 ($add).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5718 ($mux).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5731 ($mux).
Removed top 2 bits (of 34) from mux cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5739 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$fsm_map.cc:77:implement_pattern_cache$12017 ($eq).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5847 ($mux).
Removed top 1 bits (of 34) from port A of cell ibex_core.$flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$4561 ($add).
Removed top 1 bits (of 34) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$4561 ($add).
Removed top 1 bits (of 34) from port Y of cell ibex_core.$flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$4561 ($add).
Removed top 26 bits (of 32) from port A of cell ibex_core.$flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$4576 ($sub).
Removed top 27 bits (of 32) from port Y of cell ibex_core.$flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$4576 ($sub).
Removed top 5 bits (of 6) from port A of cell ibex_core.$flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$4576 ($sub).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:442$4584 ($eq).
Removed top 1 bits (of 33) from port Y of cell ibex_core.$flatten\ex_block_i.\alu_i.$sshr$/openLANE_flow/designs/ibex/src/ibex_alu.v:454$4589 ($sshr).
Removed top 4 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:482$4596 ($eq).
Removed top 3 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:482$4597 ($eq).
Removed top 3 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:483$4599 ($eq).
Removed top 3 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:483$4600 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5592_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5592_CMP1 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5592_CMP2 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5592_CMP3 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5593_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5593_CMP1 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5593_CMP2 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5593_CMP3 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5593_CMP4 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5593_CMP5 ($eq).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5595_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5595_CMP1 ($eq).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5595_CMP3 ($eq).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5595_CMP4 ($eq).
Removed top 5 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5596_CMP1 ($eq).
Removed top 4 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5597_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$5597_CMP1 ($eq).
Removed top 2 bits (of 34) from mux cell ibex_core.$flatten\ex_block_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_ex_block.v:384$4065 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\load_store_unit_i.$procmux$5530 ($pmux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\load_store_unit_i.$procmux$5517 ($pmux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$5489_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$5424_CMP0 ($eq).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5312 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5262 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5252 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5214 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5172 ($mux).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$5166_CMP0 ($eq).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5163 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5154 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5146 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5103 ($mux).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$5098_CMP0 ($eq).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5092 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5070 ($mux).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$5066_CMP0 ($eq).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5063 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5056 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5050 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$5032 ($mux).
Removed top 1 bits (of 3) from mux cell ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:278$2085 ($mux).
Removed top 1 bits (of 3) from mux cell ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:259$2080 ($mux).
Removed top 1 bits (of 3) from mux cell ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:256$2079 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:225$2073 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12332 ($ne).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12318 ($ne).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$fsm_map.cc:77:implement_pattern_cache$12088 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12138 ($ne).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$fsm_map.cc:77:implement_pattern_cache$12070 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12136 ($ne).
Removed top 63 bits (of 64) from port B of cell ibex_core.$flatten\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4623 ($add).
Removed cell ibex_core.$flatten\cs_registers_i.\minstret_counter_i.$procmux$5014 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.\minstret_counter_i.$procmux$5023 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.\minstret_counter_i.$procmux$5026 ($mux).
Removed top 63 bits (of 64) from port B of cell ibex_core.$flatten\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4623 ($add).
Removed cell ibex_core.$flatten\cs_registers_i.\mcycle_counter_i.$procmux$5014 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.\mcycle_counter_i.$procmux$5023 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.\mcycle_counter_i.$procmux$5026 ($mux).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11629_CMP0 ($eq).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$11454 ($pmux).
Removed top 4 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11123_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11122_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11121_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11120_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11119_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11118_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11117_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11116_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11115_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11114_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11113_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11112_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11111_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11110_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$11109_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10899_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10859_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10810_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10809_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10808_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10807_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10806_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10805_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10804_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10803_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10802_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10801_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10800_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10799_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10798_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10797_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10796_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10795_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10794_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10793_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10792_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10791_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP28 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP27 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP26 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP25 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP24 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP23 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP22 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP21 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP20 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP19 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP18 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP17 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP16 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP15 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP14 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP13 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP12 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP11 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP10 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP9 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP8 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP7 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP6 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP5 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP4 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP3 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP2 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP1 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10785_CMP0 ($eq).
Removed top 30 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$10747 ($mux).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$10729 ($mux).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$10726 ($mux).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10671_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10652_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10634_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10617_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10601_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10586_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10546_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10534_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10523_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10513_CMP0 ($eq).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$10503 ($mux).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$10495 ($mux).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10489_CMP0 ($eq).
Removed cell ibex_core.$flatten\cs_registers_i.$procmux$10121 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.$procmux$10082 ($mux).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10031_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10011_CMP0 ($eq).
Removed cell ibex_core.$flatten\cs_registers_i.$procmux$9997 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.$procmux$9924 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\cs_registers_i.$eq$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:791$3987 ($eq).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$or$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3971 ($or).
Removed top 29 bits (of 32) from port A of cell ibex_core.$flatten\cs_registers_i.$or$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3971 ($or).
Removed top 29 bits (of 32) from port B of cell ibex_core.$flatten\cs_registers_i.$or$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3971 ($or).
Removed top 31 bits (of 32) from port A of cell ibex_core.$flatten\cs_registers_i.$and$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3970 ($and).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$and$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3970 ($and).
Removed top 29 bits (of 32) from port B of cell ibex_core.$flatten\cs_registers_i.$and$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3970 ($and).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$not$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3969 ($not).
Removed top 29 bits (of 32) from port A of cell ibex_core.$flatten\cs_registers_i.$not$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3969 ($not).
Removed top 31 bits (of 32) from port A of cell ibex_core.$flatten\cs_registers_i.$shl$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3968 ($shl).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$shl$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3968 ($shl).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$shl$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3967 ($shl).
Removed top 21 bits (of 32) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$shiftx$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:0$3660 ($shiftx).
Removed top 21 bits (of 32) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$shiftx$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:0$3657 ($shiftx).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3621 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3619 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3617 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3615 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3613 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3611 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3609 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3607 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3605 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3603 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3601 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3599 ($eq).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3597 ($eq).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3595 ($eq).
Removed top 4 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3593 ($eq).
Removed top 23 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$1\dcsr_d[31:0].
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$2$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$3846_DATA[31:0]$3908.
Removed top 23 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$2\dcsr_d[31:0].
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$2\mhpmcounter_we[31:0].
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$2\mhpmcounterh_we[31:0].
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$and$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3970_Y.
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$or$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$3971_Y.
Removed top 27 bits (of 32) from wire ibex_core.$flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$4576_Y.
Removed top 2 bits (of 34) from wire ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$3\op_remainder_d[33:0].
Removed top 1 bits (of 33) from wire ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$4472_Y.
Removed top 29 bits (of 32) from wire ibex_core.$flatten\id_stage_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:668$4185_Y.
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$10\mfip_id[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$11\mfip_id[3:0].
Removed top 2 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$13\mfip_id[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$14\ctrl_fsm_ns[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$15\ctrl_fsm_ns[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$16\ctrl_fsm_ns[3:0].
Removed top 2 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$17\ctrl_fsm_ns[3:0].
Removed top 1 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$3\exc_cause_o[5:0].
Removed top 1 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$4\exc_cause_o[5:0].
Removed top 2 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$5\exc_cause_o[5:0].
Removed top 2 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$7\exc_cause_o[5:0].
Removed top 2 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$8\exc_cause_o[5:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$8\mfip_id[3:0].
Removed top 4 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$9\exc_cause_o[5:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$9\mfip_id[3:0].
Removed top 3 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7722_Y.
Removed top 3 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7724_Y.
Removed top 2 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7728_Y.
Removed top 4 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:775$4398_Y.
Removed top 2 bits (of 3) from wire ibex_core.$flatten\id_stage_i.\decoder_i.$2\imm_b_mux_sel_o[2:0].
Removed top 1 bits (of 3) from wire ibex_core.$flatten\id_stage_i.\decoder_i.$4\imm_b_mux_sel_o[2:0].
Removed top 2 bits (of 3) from wire ibex_core.$flatten\id_stage_i.\decoder_i.$5\imm_b_mux_sel_o[2:0].
Removed top 7 bits (of 32) from wire ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0].
Removed top 11 bits (of 32) from wire ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$11\instr_o[31:0].
Removed top 7 bits (of 32) from wire ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0].
Removed top 7 bits (of 32) from wire ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$9\instr_o[31:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$3\data_be[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$4\data_be[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$5\data_be[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$6\data_be[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$7\data_be[3:0].
Removed top 1 bits (of 3) from wire ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:256$2079_Y.
Removed top 2 bits (of 3) from wire ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:259$2080_Y.
Removed top 1 bits (of 3) from wire ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:278$2085_Y.

28.11. Executing PEEPOPT pass (run peephole optimizers).

28.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 1 unused cells and 79 unused wires.
<suppressed ~2 debug messages>

28.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ibex_core:
  creating $macc model for $flatten\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4623 ($add).
  creating $macc model for $flatten\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4623 ($add).
  creating $macc model for $flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$4561 ($add).
  creating $macc model for $flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$4576 ($sub).
  creating $macc model for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4512 ($add).
  creating $macc model for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4511 ($mul).
  creating $macc model for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:614$4485 ($sub).
  creating $macc model for $flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4394 ($add).
  creating $macc model for $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4271 ($add).
  creating $macc model for $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:88$4671 ($add).
  merging $macc model for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4511 into $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4512.
  creating $alu model for $macc $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4271.
  creating $alu model for $macc $flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4394.
  creating $alu model for $macc $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:614$4485.
  creating $alu model for $macc $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:88$4671.
  creating $alu model for $macc $flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$4576.
  creating $alu model for $macc $flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$4561.
  creating $alu model for $macc $flatten\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4623.
  creating $alu model for $macc $flatten\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4623.
  creating $macc cell for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4512: $auto$alumacc.cc:365:replace_macc$12394
  creating $alu model for $flatten\cs_registers_i.$gt$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:536$3865 ($gt): new $alu
  creating $alu cell for $flatten\cs_registers_i.$gt$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:536$3865: $auto$alumacc.cc:485:replace_alu$12396
  creating $alu cell for $flatten\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4623: $auto$alumacc.cc:485:replace_alu$12401
  creating $alu cell for $flatten\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4623: $auto$alumacc.cc:485:replace_alu$12404
  creating $alu cell for $flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$4561: $auto$alumacc.cc:485:replace_alu$12407
  creating $alu cell for $flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$4576: $auto$alumacc.cc:485:replace_alu$12410
  creating $alu cell for $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:88$4671: $auto$alumacc.cc:485:replace_alu$12413
  creating $alu cell for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:614$4485: $auto$alumacc.cc:485:replace_alu$12416
  creating $alu cell for $flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4394: $auto$alumacc.cc:485:replace_alu$12419
  creating $alu cell for $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4271: $auto$alumacc.cc:485:replace_alu$12422
  created 9 $alu and 1 $macc cells.

28.14. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module ibex_core that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$shl$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:597$4474 ($shl):
    Found 2 activation_patterns using ctrl signal { \ex_block_i.div_sel_i \ex_block_i.alu_i.multdiv_sel_i $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:627$4487_Y \ex_block_i.gen_multdiv_fast.multdiv_i.is_greater_equal \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [6] \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [1] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4511 ($mul):
    Found cell that is never activated: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4511
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $flatten\ex_block_i.\alu_i.$sshr$/openLANE_flow/designs/ibex/src/ibex_alu.v:454$4589 ($sshr):
    Found 1 activation_patterns using ctrl signal { $flatten\ex_block_i.\alu_i.$procmux$5595_CTRL \ex_block_i.alu_i.multdiv_sel_i \id_stage_i.rf_we_id_o $flatten\id_stage_i.$procmux$9513_CMP }.
    No candidates found.
Removing 1 cells in module ibex_core:
  Removing cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$4511 ($mul).

28.15. Executing OPT pass (performing simple optimizations).

28.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~2 debug messages>

28.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

28.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~238 debug messages>

28.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10779: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10823: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10867: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10909: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10954: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $auto$opt_reduce.cc:134:opt_mux$11865 $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10995: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10617_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11043: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11133: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11266: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10031_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11312: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $auto$opt_reduce.cc:134:opt_mux$12348 $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11358: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11403: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$procmux$10671_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11495: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10652_CMP $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$procmux$10634_CMP $flatten\cs_registers_i.$procmux$10601_CMP $flatten\cs_registers_i.$procmux$10806_CMP $flatten\cs_registers_i.$procmux$10805_CMP $flatten\cs_registers_i.$procmux$10804_CMP $flatten\cs_registers_i.$procmux$10803_CMP $flatten\cs_registers_i.$procmux$10802_CMP $flatten\cs_registers_i.$procmux$10801_CMP $flatten\cs_registers_i.$procmux$10800_CMP $flatten\cs_registers_i.$procmux$10799_CMP $flatten\cs_registers_i.$procmux$10798_CMP $flatten\cs_registers_i.$procmux$10797_CMP $flatten\cs_registers_i.$procmux$10796_CMP $flatten\cs_registers_i.$procmux$10795_CMP $flatten\cs_registers_i.$procmux$10794_CMP $flatten\cs_registers_i.$procmux$10793_CMP $flatten\cs_registers_i.$procmux$10792_CMP $flatten\cs_registers_i.$procmux$10791_CMP $flatten\cs_registers_i.$procmux$10011_CMP $flatten\cs_registers_i.$procmux$10546_CMP $flatten\cs_registers_i.$procmux$10534_CMP $flatten\cs_registers_i.$procmux$10523_CMP $flatten\cs_registers_i.$procmux$10513_CMP $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8530: { $flatten\id_stage_i.\controller_i.$procmux$8540_CMP $flatten\id_stage_i.\controller_i.$procmux$8538_CMP $auto$opt_reduce.cc:134:opt_mux$12426 $flatten\id_stage_i.\controller_i.$procmux$8460_CMP $flatten\id_stage_i.\controller_i.$procmux$8265_CMP $auto$opt_reduce.cc:134:opt_mux$11837 $flatten\id_stage_i.\controller_i.$procmux$7370_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$8609: { $auto$opt_reduce.cc:134:opt_mux$12428 $flatten\id_stage_i.\controller_i.$procmux$7370_CMP }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$5337: { $flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:325$2103_Y $flatten\load_store_unit_i.$procmux$5166_CMP $flatten\load_store_unit_i.$procmux$5098_CMP }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$5349: $auto$opt_reduce.cc:134:opt_mux$12430
  Optimizing cells in module \ibex_core.
Performed a total of 17 changes.

28.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

28.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$opt_dff.cc:764:run$12313 ($adffe) from module ibex_core (D = \cs_registers_i.debug_cause_i, Q = \cs_registers_i.u_dcsr_csr.rdata_q [8:6]).

28.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 2 unused cells and 9 unused wires.
<suppressed ~3 debug messages>

28.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.15.9. Rerunning OPT passes. (Maybe there is more to do..)

28.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~240 debug messages>

28.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

28.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

28.15.13. Executing OPT_DFF pass (perform DFF optimizations).

28.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

28.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.15.16. Finished OPT passes. (There is nothing left to do.)

28.16. Executing MEMORY pass.

28.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

28.16.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:580$3888' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:581$3889' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:582$3890' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:583$3891' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:584$3892' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:585$3893' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:586$3894' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:587$3895' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:588$3896' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:589$3897' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:590$3898' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:591$3899' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:592$3900' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:593$3901' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:594$3902' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:595$3903' in module `\ibex_core': no (compatible) $dff found.

28.16.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

28.16.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

28.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

28.16.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\cs_registers_i.pmp_addr_rdata' in module `\ibex_core':
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4024 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4025 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4026 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4027 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4028 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4029 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4030 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4031 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4032 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4033 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4034 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4035 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4036 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4037 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4038 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4039 ($meminit)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:595$3903 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:594$3902 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:593$3901 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:592$3900 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:591$3899 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:590$3898 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:589$3897 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:588$3896 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:587$3895 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:586$3894 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:585$3893 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:584$3892 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:583$3891 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:582$3890 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:581$3889 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:580$3888 ($memrd)

28.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

28.18. Executing OPT pass (performing simple optimizations).

28.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~275 debug messages>

28.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

28.18.3. Executing OPT_DFF pass (perform DFF optimizations).

28.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 18 unused cells and 118 unused wires.
<suppressed ~20 debug messages>

28.18.5. Finished fast OPT passes.

28.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \cs_registers_i.pmp_addr_rdata in module \ibex_core:
  created 16 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 240 $mux cells.
  write interface: 0 write mux blocks.

28.20. Executing OPT pass (performing simple optimizations).

28.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~240 debug messages>

28.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

28.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~162 debug messages>

28.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $pmux cell $flatten\cs_registers_i.$procmux$11454:
      Old ports: A=3'001, B=6'100000, Y=$auto$wreduce.cc:454:run$12350 [2:0]
      New ports: A=2'01, B=4'1000, Y={ $auto$wreduce.cc:454:run$12350 [2] $auto$wreduce.cc:454:run$12350 [0] }
      New connections: $auto$wreduce.cc:454:run$12350 [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$9833:
      Old ports: A={ \if_stage_i.pc_id_o [31:1] 1'0 }, B={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q 1'0 }, Y=$flatten\cs_registers_i.$2\exception_pc[31:0]
      New ports: A=\if_stage_i.pc_id_o [31:1], B=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q, Y=$flatten\cs_registers_i.$2\exception_pc[31:0] [31:1]
      New connections: $flatten\cs_registers_i.$2\exception_pc[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:667$3928:
      Old ports: A={ \cs_registers_i.csr_wdata_int [31:8] 8'00000001 }, B={ \boot_addr_i [31:8] 8'00000001 }, Y=\cs_registers_i.u_mtvec_csr.wr_data_i
      New ports: A=\cs_registers_i.csr_wdata_int [31:8], B=\boot_addr_i [31:8], Y=\cs_registers_i.u_mtvec_csr.wr_data_i [31:8]
      New connections: \cs_registers_i.u_mtvec_csr.wr_data_i [7:0] = 8'00000001
    Consolidated identical input bits for $mux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5775:
      Old ports: A={ 2'00 \ex_block_i.gen_multdiv_fast.multdiv_i.op_a_i }, B=34'1111111111111111111111111111111111, Y=$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0]
      New ports: A={ 1'0 \ex_block_i.gen_multdiv_fast.multdiv_i.op_a_i }, B=33'111111111111111111111111111111111, Y=$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0] [32:0]
      New connections: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0] [33] = $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0] [32]
    Consolidated identical input bits for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5790:
      Old ports: A={ $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:621$4486_Y 1'1 }, B={ $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:646$4496_Y 1'1 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:661$4502_Y 1'1 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:679$4508_Y 1'1 }, Y=\ex_block_i.alu_i.multdiv_operand_b_i
      New ports: A=$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:621$4486_Y, B={ $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:646$4496_Y $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:661$4502_Y $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:679$4508_Y }, Y=\ex_block_i.alu_i.multdiv_operand_b_i [32:1]
      New connections: \ex_block_i.alu_i.multdiv_operand_b_i [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$5800:
      Old ports: A=33'000000000000000000000000000000001, B={ \id_stage_i.imd_val_q [65:34] 1'1 }, Y=\ex_block_i.alu_i.multdiv_operand_a_i
      New ports: A=0, B=\id_stage_i.imd_val_q [65:34], Y=\ex_block_i.alu_i.multdiv_operand_a_i [32:1]
      New connections: \ex_block_i.alu_i.multdiv_operand_a_i [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:668$4185:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$12359 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$12359 [2:1]
      New connections: $auto$wreduce.cc:454:run$12359 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7373:
      Old ports: A=2'01, B=2'11, Y=$auto$wreduce.cc:454:run$12366 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$12366 [1]
      New connections: $auto$wreduce.cc:454:run$12366 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7454:
      Old ports: A=3'000, B=3'100, Y=$flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0] [2]
      New connections: $flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0] [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7586:
      Old ports: A=4'0101, B=4'1001, Y=$flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0]
      New ports: A=2'01, B=2'10, Y=$flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0] [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0] [1:0] = 2'01
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7686:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:454:run$12373 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$12373 [0]
      New connections: $auto$wreduce.cc:454:run$12373 [1] = $auto$wreduce.cc:454:run$12373 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7722:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:454:run$12375 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$12375 [0]
      New connections: $auto$wreduce.cc:454:run$12375 [2:1] = { $auto$wreduce.cc:454:run$12375 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7962:
      Old ports: A=3'011, B=3'100, Y=$flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0] [2] $flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0] [0] }
      New connections: $flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0] [1] = $flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$8052:
      Old ports: A=3'111, B=3'011, Y=$flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [2]
      New connections: $flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [1:0] = 2'11
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$8490:
      Old ports: A=4'0101, B=4'0111, Y=$flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0] [1]
      New connections: { $flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0] [3:2] $flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0] [0] } = 3'011
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4393:
      Old ports: A=2'00, B=2'11, Y=$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4393_Y
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4393_Y [0]
      New connections: $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4393_Y [1] = $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4393_Y [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4395:
      Old ports: A={ \if_stage_i.pc_id_o [31:1] 1'0 }, B={ $flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4394_Y [31:1] 1'0 }, Y=$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4395_Y
      New ports: A=\if_stage_i.pc_id_o [31:1], B=$flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4394_Y [31:1], Y=$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4395_Y [31:1]
      New connections: $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4395_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:775$4398:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:454:run$12378 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$12378 [0]
      New connections: $auto$wreduce.cc:454:run$12378 [1] = $auto$wreduce.cc:454:run$12378 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$5872:
      Old ports: A=2'00, B=2'11, Y=$flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0]
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [0]
      New connections: $flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [1] = $flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$5947:
      Old ports: A=6'100110, B=6'000000, Y=$flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0]
      New ports: A=1'1, B=1'0, Y=$flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [1]
      New connections: { $flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [5:2] $flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [0] } = { $flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [1] 2'00 $flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$5955:
      Old ports: A=3'000, B=3'101, Y=$flatten\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0] [0]
      New connections: $flatten\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0] [2:1] = { $flatten\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0] [0] 1'0 }
    Consolidated identical input bits for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5963:
      Old ports: A=6'100110, B=54'000001100101000010000011000100001010001001001000000000, Y=$flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0]
      New ports: A=5'10110, B=45'000011010100010000110010001010010010100000000, Y={ $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [5] $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [3:0] }
      New connections: $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$6047:
      Old ports: A=6'100110, B=6'001000, Y=$flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [3] $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] }
      New connections: { $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [5:4] $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [2] $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [0] } = { $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] 1'0 $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$6149:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:454:run$12380 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$12380 [1]
      New connections: $auto$wreduce.cc:454:run$12380 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$6225:
      Old ports: A=3'101, B=3'000, Y=$flatten\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0] [0]
      New connections: $flatten\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0] [2:1] = { $flatten\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0] [0] 1'0 }
    Consolidated identical input bits for $pmux cell $flatten\if_stage_i.$procmux$9034:
      Old ports: A={ \cs_registers_i.u_mtvec_csr.rdata_q [31:8] 8'00000000 }, B={ \cs_registers_i.u_mtvec_csr.rdata_q [31:8] 1'0 \cs_registers_i.csr_mcause_i [4:0] 66'000001101000010001000010000000000000011010000100010000100000001000 }, Y=\if_stage_i.exc_pc
      New ports: A={ \cs_registers_i.u_mtvec_csr.rdata_q [31:8] 5'00000 }, B={ \cs_registers_i.u_mtvec_csr.rdata_q [31:8] \cs_registers_i.csr_mcause_i [4:0] 58'0001101000010001000010000000000011010000100010000100000010 }, Y={ \if_stage_i.exc_pc [31:8] \if_stage_i.exc_pc [6:2] }
      New connections: { \if_stage_i.exc_pc [7] \if_stage_i.exc_pc [1:0] } = 3'000
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4730:
      Old ports: A={ 1'0 \if_stage_i.compressed_decoder_i.instr_i [11:7] 15'000000011100111 }, B=21'100000000000001110011, Y=$auto$wreduce.cc:454:run$12383 [20:0]
      New ports: A={ \if_stage_i.compressed_decoder_i.instr_i [11:7] 2'01 }, B=7'0000010, Y={ $auto$wreduce.cc:454:run$12383 [19:15] $auto$wreduce.cc:454:run$12383 [4] $auto$wreduce.cc:454:run$12383 [2] }
      New connections: { $auto$wreduce.cc:454:run$12383 [20] $auto$wreduce.cc:454:run$12383 [14:5] $auto$wreduce.cc:454:run$12383 [3] $auto$wreduce.cc:454:run$12383 [1:0] } = { $auto$wreduce.cc:454:run$12383 [4] 7'0000000 $auto$wreduce.cc:454:run$12383 [2] 5'11011 }
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4776:
      Old ports: A={ 5'00000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 15'000000001100111 }, B={ \if_stage_i.compressed_decoder_i.instr_i [6:2] 8'00000000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110011 }, Y=$auto$wreduce.cc:454:run$12385 [24:0]
      New ports: A={ 5'00000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0000001 }, B={ \if_stage_i.compressed_decoder_i.instr_i [6:2] 5'00000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 2'10 }, Y={ $auto$wreduce.cc:454:run$12385 [24:15] $auto$wreduce.cc:454:run$12385 [11:7] $auto$wreduce.cc:454:run$12385 [4] $auto$wreduce.cc:454:run$12385 [2] }
      New connections: { $auto$wreduce.cc:454:run$12385 [14:12] $auto$wreduce.cc:454:run$12385 [6:5] $auto$wreduce.cc:454:run$12385 [3] $auto$wreduce.cc:454:run$12385 [1:0] } = { 3'000 $auto$wreduce.cc:454:run$12385 [2] 4'1011 }
    Consolidated identical input bits for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4861:
      Old ports: A={ 9'010000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'00001 \if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0110011 }, B={ 9'000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'10001 \if_stage_i.compressed_decoder_i.instr_i [9:7] 16'0110011000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'11001 \if_stage_i.compressed_decoder_i.instr_i [9:7] 16'0110011000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'11101 \if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0110011 \if_stage_i.compressed_decoder_i.instr_i }, Y=$flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0]
      New ports: A={ 9'010000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 12'000010110011 }, B={ 9'000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 21'100010110011000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 21'110010110011000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 12'111010110011 \if_stage_i.compressed_decoder_i.instr_i [31:10] \if_stage_i.compressed_decoder_i.instr_i [6:0] }, Y={ $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [31:10] $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [6:0] }
      New connections: $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [9:7] = \if_stage_i.compressed_decoder_i.instr_i [9:7]
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4940:
      Old ports: A={ \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [6:2] \if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110111 }, B={ \if_stage_i.compressed_decoder_i.instr_i [4:3] \if_stage_i.compressed_decoder_i.instr_i [5] \if_stage_i.compressed_decoder_i.instr_i [2] \if_stage_i.compressed_decoder_i.instr_i [6] 24'000000010000000100010011 }, Y=$flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [28:0]
      New ports: A={ \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [6:2] \if_stage_i.compressed_decoder_i.instr_i [11:7] 1'1 }, B={ \if_stage_i.compressed_decoder_i.instr_i [4:3] \if_stage_i.compressed_decoder_i.instr_i [5] \if_stage_i.compressed_decoder_i.instr_i [2] \if_stage_i.compressed_decoder_i.instr_i [6] 12'010000000100 }, Y={ $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [28:24] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17:7] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [2] }
      New connections: { $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [23:18] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [6:3] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [1:0] } = { $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] 1'0 $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [2] 4'1011 }
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4268:
      Old ports: A={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:2] 2'00 }, B={ \if_stage_i.fetch_addr_n [31:1] 1'0 }, Y={ $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4268_Y [31:2] \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d [1:0] }
      New ports: A={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:2] 1'0 }, B=\if_stage_i.fetch_addr_n [31:1], Y={ $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4268_Y [31:2] \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d [1] }
      New connections: \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:64$4641:
      Old ports: A={ \instr_rdata_i [15:0] \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata [31:16] }, B={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [47:32] \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata [31:16] }, Y=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_unaligned
      New ports: A=\instr_rdata_i [15:0], B=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [47:32], Y=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_unaligned [31:16]
      New connections: \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_unaligned [15:0] = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata [31:16]
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5201:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$12392 [1:0] }, B={ 1'0 $auto$wreduce.cc:454:run$12391 [1:0] }, Y=$flatten\load_store_unit_i.$2\ls_fsm_ns[2:0]
      New ports: A=$auto$wreduce.cc:454:run$12392 [1:0], B=$auto$wreduce.cc:454:run$12391 [1:0], Y=$flatten\load_store_unit_i.$2\ls_fsm_ns[2:0] [1:0]
      New connections: $flatten\load_store_unit_i.$2\ls_fsm_ns[2:0] [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5408:
      Old ports: A={ 24'000000000000000000000000 \data_rdata_i [31:24] }, B={ \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31:24] }, Y=$flatten\load_store_unit_i.$5\rdata_b_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [31], Y=$flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8]
      New connections: { $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [31:9] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [7:0] } = { $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] \data_rdata_i [31:24] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5414:
      Old ports: A={ 24'000000000000000000000000 \data_rdata_i [23:16] }, B={ \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23:16] }, Y=$flatten\load_store_unit_i.$4\rdata_b_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [23], Y=$flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8]
      New connections: { $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [31:9] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [7:0] } = { $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] \data_rdata_i [23:16] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5421:
      Old ports: A={ 24'000000000000000000000000 \data_rdata_i [15:8] }, B={ \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15:8] }, Y=$flatten\load_store_unit_i.$3\rdata_b_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [15], Y=$flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8]
      New connections: { $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [31:9] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [7:0] } = { $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] \data_rdata_i [15:8] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5429:
      Old ports: A={ 24'000000000000000000000000 \data_rdata_i [7:0] }, B={ \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7:0] }, Y=$flatten\load_store_unit_i.$2\rdata_b_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [7], Y=$flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8]
      New connections: { $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [31:9] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [7:0] } = { $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] \data_rdata_i [7:0] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5439:
      Old ports: A={ 16'0000000000000000 \data_rdata_i [7:0] \load_store_unit_i.rdata_q [23:16] }, B={ \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7:0] \load_store_unit_i.rdata_q [23:16] }, Y=$flatten\load_store_unit_i.$5\rdata_h_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [7], Y=$flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16]
      New connections: { $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [31:17] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [15:0] } = { $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] \data_rdata_i [7:0] \load_store_unit_i.rdata_q [23:16] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5445:
      Old ports: A={ 16'0000000000000000 \data_rdata_i [31:16] }, B={ \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31:16] }, Y=$flatten\load_store_unit_i.$4\rdata_h_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [31], Y=$flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16]
      New connections: { $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [31:17] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [15:0] } = { $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] \data_rdata_i [31:16] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5452:
      Old ports: A={ 16'0000000000000000 \data_rdata_i [23:8] }, B={ \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23:8] }, Y=$flatten\load_store_unit_i.$3\rdata_h_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [23], Y=$flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16]
      New connections: { $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [31:17] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [15:0] } = { $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] \data_rdata_i [23:8] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5460:
      Old ports: A={ 16'0000000000000000 \data_rdata_i [15:0] }, B={ \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15:0] }, Y=$flatten\load_store_unit_i.$2\rdata_h_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [15], Y=$flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16]
      New connections: { $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [31:17] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [15:0] } = { $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] \data_rdata_i [15:0] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:256$2079:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$12391 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$12391 [1]
      New connections: $auto$wreduce.cc:454:run$12391 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:259$2080:
      Old ports: A=2'11, B=2'01, Y=$auto$wreduce.cc:454:run$12392 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$12392 [1]
      New connections: $auto$wreduce.cc:454:run$12392 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:278$2085:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:454:run$12393 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$12393 [0]
      New connections: $auto$wreduce.cc:454:run$12393 [1] = $auto$wreduce.cc:454:run$12393 [0]
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$9629:
      Old ports: A=$flatten\cs_registers_i.$2\exception_pc[31:0], B={ \cs_registers_i.csr_wdata_int [31:1] 1'0 }, Y=$flatten\cs_registers_i.$3\mepc_d[31:0]
      New ports: A=$flatten\cs_registers_i.$2\exception_pc[31:0] [31:1], B=\cs_registers_i.csr_wdata_int [31:1], Y=$flatten\cs_registers_i.$3\mepc_d[31:0] [31:1]
      New connections: $flatten\cs_registers_i.$3\mepc_d[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$9725:
      Old ports: A={ \cs_registers_i.csr_wdata_int [31:1] 1'0 }, B=$flatten\cs_registers_i.$2\exception_pc[31:0], Y=$flatten\cs_registers_i.$2\depc_d[31:0]
      New ports: A=\cs_registers_i.csr_wdata_int [31:1], B=$flatten\cs_registers_i.$2\exception_pc[31:0] [31:1], Y=$flatten\cs_registers_i.$2\depc_d[31:0] [31:1]
      New connections: $flatten\cs_registers_i.$2\depc_d[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\ex_block_i.\alu_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_alu.v:356$4558:
      Old ports: A={ \cs_registers_i.csr_wdata_i 1'1 }, B=\ex_block_i.alu_i.multdiv_operand_a_i, Y=\ex_block_i.alu_i.adder_in_a
      New ports: A=\cs_registers_i.csr_wdata_i, B=\ex_block_i.alu_i.multdiv_operand_a_i [32:1], Y=\ex_block_i.alu_i.adder_in_a [32:1]
      New connections: \ex_block_i.alu_i.adder_in_a [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7391:
      Old ports: A={ 1'1 $auto$wreduce.cc:454:run$12366 [1:0] }, B=3'010, Y=$auto$wreduce.cc:454:run$12365 [2:0]
      New ports: A={ $auto$wreduce.cc:454:run$12366 [1] 1'1 }, B=2'10, Y=$auto$wreduce.cc:454:run$12365 [1:0]
      New connections: $auto$wreduce.cc:454:run$12365 [2] = $auto$wreduce.cc:454:run$12365 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7526:
      Old ports: A=$flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0], B=3'011, Y=$flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0]
      New ports: A={ $flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0] [2] 1'0 }, B=2'01, Y={ $flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [2] $flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [0] }
      New connections: $flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [1] = $flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7724:
      Old ports: A=$auto$wreduce.cc:454:run$12375 [2:0], B=3'111, Y=$auto$wreduce.cc:454:run$12376 [2:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$12375 [0] }, B=2'11, Y=$auto$wreduce.cc:454:run$12376 [1:0]
      New connections: $auto$wreduce.cc:454:run$12376 [2] = $auto$wreduce.cc:454:run$12376 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7760:
      Old ports: A=4'0101, B=$flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0], Y=$flatten\id_stage_i.\controller_i.$procmux$7760_Y
      New ports: A=2'01, B=$flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0] [3:2], Y=$flatten\id_stage_i.\controller_i.$procmux$7760_Y [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$procmux$7760_Y [1:0] = 2'01
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$8073:
      Old ports: A={ 1'0 $flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [2:0] }, B=4'1011, Y=$auto$wreduce.cc:454:run$12369 [3:0]
      New ports: A={ 1'0 $flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [2] }, B=2'10, Y=$auto$wreduce.cc:454:run$12369 [3:2]
      New connections: $auto$wreduce.cc:454:run$12369 [1:0] = 2'11
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$8468:
      Old ports: A=$flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0], B=4'1000, Y=$flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0]
      New ports: A={ 1'0 $flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0] [1] 1'1 }, B=3'100, Y={ $flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [3] $flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [1:0] }
      New connections: $flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [2] = $flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$5886:
      Old ports: A=$flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0], B=2'00, Y=$flatten\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0]
      New ports: A=$flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [0], B=1'0, Y=$flatten\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0] [0]
      New connections: $flatten\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0] [1] = $flatten\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$6038:
      Old ports: A=$flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0], B=6'100110, Y=$flatten\id_stage_i.\decoder_i.$11\alu_operator_o[5:0]
      New ports: A={ $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [5] $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [3:0] }, B=5'10110, Y={ $flatten\id_stage_i.\decoder_i.$11\alu_operator_o[5:0] [5] $flatten\id_stage_i.\decoder_i.$11\alu_operator_o[5:0] [3:0] }
      New connections: $flatten\id_stage_i.\decoder_i.$11\alu_operator_o[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$6061:
      Old ports: A=$flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0], B=6'001001, Y=$flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0]
      New ports: A={ $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [3] $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] 1'0 }, B=3'101, Y={ $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [3] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1:0] }
      New connections: { $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [5:4] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [2] } = { $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] 1'0 $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] }
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4746:
      Old ports: A={ 4'0000 $auto$wreduce.cc:454:run$12383 [20:0] }, B={ \if_stage_i.compressed_decoder_i.instr_i [6:2] \if_stage_i.compressed_decoder_i.instr_i [11:7] 3'000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110011 }, Y=$auto$wreduce.cc:454:run$12382 [24:0]
      New ports: A={ 4'0000 $auto$wreduce.cc:454:run$12383 [4] $auto$wreduce.cc:454:run$12383 [19:15] 4'0000 $auto$wreduce.cc:454:run$12383 [2] 1'1 $auto$wreduce.cc:454:run$12383 [4] $auto$wreduce.cc:454:run$12383 [2] }, B={ \if_stage_i.compressed_decoder_i.instr_i [6:2] \if_stage_i.compressed_decoder_i.instr_i [11:7] \if_stage_i.compressed_decoder_i.instr_i [11:7] 3'010 }, Y={ $auto$wreduce.cc:454:run$12382 [24:15] $auto$wreduce.cc:454:run$12382 [11:6] $auto$wreduce.cc:454:run$12382 [4] $auto$wreduce.cc:454:run$12382 [2] }
      New connections: { $auto$wreduce.cc:454:run$12382 [14:12] $auto$wreduce.cc:454:run$12382 [5] $auto$wreduce.cc:454:run$12382 [3] $auto$wreduce.cc:454:run$12382 [1:0] } = 7'0001011
    Consolidated identical input bits for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4916:
      Old ports: A={ 1'0 \if_stage_i.compressed_decoder_i.instr_i [10] 5'00000 \if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'10101 \if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0010011 }, B={ \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'11101 \if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0010011 $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] }, Y=$flatten\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0]
      New ports: A={ 1'0 \if_stage_i.compressed_decoder_i.instr_i [10] 5'00000 \if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 12'101010010011 }, B={ \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 12'111010010011 $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [31:10] $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [6:0] }, Y={ $flatten\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0] [31:10] $flatten\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0] [6:0] }
      New connections: $flatten\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0] [9:7] = \if_stage_i.compressed_decoder_i.instr_i [9:7]
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$5130:
      Old ports: A=3'100, B={ 1'0 $auto$wreduce.cc:454:run$12393 [1:0] }, Y=$flatten\load_store_unit_i.$5\ls_fsm_ns[2:0]
      New ports: A=2'10, B={ 1'0 $auto$wreduce.cc:454:run$12393 [0] }, Y={ $flatten\load_store_unit_i.$5\ls_fsm_ns[2:0] [2] $flatten\load_store_unit_i.$5\ls_fsm_ns[2:0] [0] }
      New connections: $flatten\load_store_unit_i.$5\ls_fsm_ns[2:0] [1] = $flatten\load_store_unit_i.$5\ls_fsm_ns[2:0] [0]
    Consolidated identical input bits for $pmux cell $flatten\load_store_unit_i.$procmux$5433:
      Old ports: A=$flatten\load_store_unit_i.$2\rdata_b_ext[31:0], B={ $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] }, Y=\load_store_unit_i.rdata_b_ext
      New ports: A={ $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] \data_rdata_i [7:0] }, B={ $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] \data_rdata_i [15:8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] \data_rdata_i [23:16] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] \data_rdata_i [31:24] }, Y=\load_store_unit_i.rdata_b_ext [8:0]
      New connections: \load_store_unit_i.rdata_b_ext [31:9] = { \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] }
    Consolidated identical input bits for $pmux cell $flatten\load_store_unit_i.$procmux$5464:
      Old ports: A=$flatten\load_store_unit_i.$2\rdata_h_ext[31:0], B={ $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] }, Y=\load_store_unit_i.rdata_h_ext
      New ports: A={ $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] \data_rdata_i [15:0] }, B={ $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] \data_rdata_i [23:8] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] \data_rdata_i [31:16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] \data_rdata_i [7:0] \load_store_unit_i.rdata_q [23:16] }, Y=\load_store_unit_i.rdata_h_ext [16:0]
      New connections: \load_store_unit_i.rdata_h_ext [31:17] = { \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] }
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$9805:
      Old ports: A=$flatten\cs_registers_i.$3\mepc_d[31:0], B={ \cs_registers_i.csr_wdata_int [31:1] 1'0 }, Y=$flatten\cs_registers_i.$2\mepc_d[31:0]
      New ports: A=$flatten\cs_registers_i.$3\mepc_d[31:0] [31:1], B=\cs_registers_i.csr_wdata_int [31:1], Y=$flatten\cs_registers_i.$2\mepc_d[31:0] [31:1]
      New connections: $flatten\cs_registers_i.$2\mepc_d[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$9850:
      Old ports: A={ \cs_registers_i.csr_wdata_int [31:1] 1'0 }, B=$flatten\cs_registers_i.$2\depc_d[31:0], Y=\cs_registers_i.u_depc_csr.wr_data_i
      New ports: A=\cs_registers_i.csr_wdata_int [31:1], B=$flatten\cs_registers_i.$2\depc_d[31:0] [31:1], Y=\cs_registers_i.u_depc_csr.wr_data_i [31:1]
      New connections: \cs_registers_i.u_depc_csr.wr_data_i [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7466:
      Old ports: A=$auto$wreduce.cc:454:run$12365 [2:0], B=3'101, Y=$auto$wreduce.cc:454:run$12364 [2:0]
      New ports: A=$auto$wreduce.cc:454:run$12365 [1:0], B=2'01, Y=$auto$wreduce.cc:454:run$12364 [1:0]
      New connections: $auto$wreduce.cc:454:run$12364 [2] = $auto$wreduce.cc:454:run$12364 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7762:
      Old ports: A=$flatten\id_stage_i.\controller_i.$procmux$7760_Y, B=4'0101, Y=$flatten\id_stage_i.\controller_i.$procmux$7762_Y
      New ports: A=$flatten\id_stage_i.\controller_i.$procmux$7760_Y [3:2], B=2'01, Y=$flatten\id_stage_i.\controller_i.$procmux$7762_Y [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$procmux$7762_Y [1:0] = 2'01
    Consolidated identical input bits for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6088:
      Old ports: A=6'000000, B={ 36'100101100110000010000011000100001010 $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] }, Y=$flatten\id_stage_i.\decoder_i.$6\alu_operator_o[5:0]
      New ports: A=5'00000, B={ 30'101011011000010000110010001010 $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [3] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1:0] }, Y={ $flatten\id_stage_i.\decoder_i.$6\alu_operator_o[5:0] [5] $flatten\id_stage_i.\decoder_i.$6\alu_operator_o[5:0] [3:0] }
      New connections: $flatten\id_stage_i.\decoder_i.$6\alu_operator_o[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$4811:
      Old ports: A=$auto$wreduce.cc:454:run$12385 [24:0], B=$auto$wreduce.cc:454:run$12382 [24:0], Y=$auto$wreduce.cc:454:run$12384 [24:0]
      New ports: A={ $auto$wreduce.cc:454:run$12385 [24:15] $auto$wreduce.cc:454:run$12385 [11:7] $auto$wreduce.cc:454:run$12385 [2] $auto$wreduce.cc:454:run$12385 [4] $auto$wreduce.cc:454:run$12385 [2] }, B={ $auto$wreduce.cc:454:run$12382 [24:15] $auto$wreduce.cc:454:run$12382 [11:6] $auto$wreduce.cc:454:run$12382 [4] $auto$wreduce.cc:454:run$12382 [2] }, Y={ $auto$wreduce.cc:454:run$12384 [24:15] $auto$wreduce.cc:454:run$12384 [11:6] $auto$wreduce.cc:454:run$12384 [4] $auto$wreduce.cc:454:run$12384 [2] }
      New connections: { $auto$wreduce.cc:454:run$12384 [14:12] $auto$wreduce.cc:454:run$12384 [5] $auto$wreduce.cc:454:run$12384 [3] $auto$wreduce.cc:454:run$12384 [1:0] } = 7'0001011
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7544:
      Old ports: A=$auto$wreduce.cc:454:run$12364 [2:0], B=3'101, Y=$auto$wreduce.cc:454:run$12363 [2:0]
      New ports: A=$auto$wreduce.cc:454:run$12364 [1:0], B=2'01, Y=$auto$wreduce.cc:454:run$12363 [1:0]
      New connections: $auto$wreduce.cc:454:run$12363 [2] = $auto$wreduce.cc:454:run$12363 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7764:
      Old ports: A=$flatten\id_stage_i.\controller_i.$procmux$7762_Y, B=4'0101, Y=$flatten\id_stage_i.\controller_i.$procmux$7764_Y
      New ports: A=$flatten\id_stage_i.\controller_i.$procmux$7762_Y [3:2], B=2'01, Y=$flatten\id_stage_i.\controller_i.$procmux$7764_Y [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$procmux$7764_Y [1:0] = 2'01
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7766:
      Old ports: A=$flatten\id_stage_i.\controller_i.$procmux$7764_Y, B=4'0101, Y=$flatten\id_stage_i.\controller_i.$12\ctrl_fsm_ns[3:0]
      New ports: A=$flatten\id_stage_i.\controller_i.$procmux$7764_Y [3:2], B=2'01, Y=$flatten\id_stage_i.\controller_i.$12\ctrl_fsm_ns[3:0] [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$12\ctrl_fsm_ns[3:0] [1:0] = 2'01
  Optimizing cells in module \ibex_core.
Performed a total of 70 changes.

28.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

28.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:66$4657 in front of them:
        $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$and$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:66$4653
        $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$and$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:66$4656

    Found cells that share an operand and can be merged by moving the $pmux $flatten\load_store_unit_i.$procmux$5395 in front of them:
        $flatten\load_store_unit_i.$procmux$5038
        $flatten\load_store_unit_i.$procmux$5138

28.20.7. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[15]$12534 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[10]$12524 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[11]$12526 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[12]$12528 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[13]$12530 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[9]$12522 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[14]$12532 ($dff) from module ibex_core.
Adding SRST signal on $auto$opt_dff.cc:764:run$12191 ($dffe) from module ibex_core (D = \if_stage_i.fetch_addr_n [1], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [1], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12161 ($adffe) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[0]$12504 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[1]$12506 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[2]$12508 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[3]$12510 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[4]$12512 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[5]$12514 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[6]$12516 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[7]$12518 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[8]$12520 ($dff) from module ibex_core.

28.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 1 unused cells and 522 unused wires.
<suppressed ~2 debug messages>

28.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~27 debug messages>

28.20.10. Rerunning OPT passes. (Maybe there is more to do..)

28.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~161 debug messages>

28.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10779: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10823: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10867: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10909: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10954: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $auto$opt_reduce.cc:134:opt_mux$11865 $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10995: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11043: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11133: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11220: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10785_CTRL $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11266: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11312: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $auto$opt_reduce.cc:134:opt_mux$12348 $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11358: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11403: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$procmux$10859_CMP $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$11495: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10586_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$5344: $auto$opt_reduce.cc:134:opt_mux$13264
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$5395: $auto$opt_reduce.cc:134:opt_mux$13266
  Optimizing cells in module \ibex_core.
Performed a total of 16 changes.

28.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

28.20.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $flatten\load_store_unit_i.$procmux$5367 in front of them:
        $flatten\load_store_unit_i.$procmux$5044
        $flatten\load_store_unit_i.$procmux$5122

28.20.15. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12309 ($adffe) from module ibex_core.
Setting constant 1-bit at position 0 on $auto$opt_dff.cc:764:run$12294 ($adffe) from module ibex_core.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12294 ($adffe) from module ibex_core.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$12294 ($adffe) from module ibex_core.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$12294 ($adffe) from module ibex_core.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$12294 ($adffe) from module ibex_core.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$12294 ($adffe) from module ibex_core.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$12294 ($adffe) from module ibex_core.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$12294 ($adffe) from module ibex_core.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12191 ($dffe) from module ibex_core.

28.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

28.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~3 debug messages>

28.20.18. Rerunning OPT passes. (Maybe there is more to do..)

28.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~160 debug messages>

28.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10867: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10909: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10995: { $flatten\cs_registers_i.$procmux$10816_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10899_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10504_CTRL $flatten\cs_registers_i.$procmux$10496_CTRL }
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4274:
      Old ports: A={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:1] 1'0 }, B={ \if_stage_i.fetch_addr_n [31:1] 1'0 }, Y=$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4274_Y
      New ports: A=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:1], B=\if_stage_i.fetch_addr_n [31:1], Y=$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4274_Y [31:1]
      New connections: $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4274_Y [0] = 1'0
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$5367: { $flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:325$2103_Y $flatten\load_store_unit_i.$procmux$5166_CMP $flatten\load_store_unit_i.$procmux$5066_CMP $auto$opt_reduce.cc:134:opt_mux$13271 }
  Optimizing cells in module \ibex_core.
Performed a total of 5 changes.

28.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

28.20.22. Executing OPT_SHARE pass.

28.20.23. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$12190 ($sdffce) from module ibex_core.

28.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

28.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.20.26. Rerunning OPT passes. (Maybe there is more to do..)

28.20.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~160 debug messages>

28.20.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4275:
      Old ports: A={ $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4274_Y [31:1] 1'0 }, B={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [31:1] 1'0 }, Y=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d
      New ports: A=$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4274_Y [31:1], B=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [31:1], Y=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d [31:1]
      New connections: \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d [0] = 1'0
  Optimizing cells in module \ibex_core.
Performed a total of 1 changes.

28.20.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

28.20.30. Executing OPT_SHARE pass.

28.20.31. Executing OPT_DFF pass (perform DFF optimizations).

28.20.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

28.20.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.20.34. Rerunning OPT passes. (Maybe there is more to do..)

28.20.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~160 debug messages>

28.20.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

28.20.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

28.20.38. Executing OPT_SHARE pass.

28.20.39. Executing OPT_DFF pass (perform DFF optimizations).

28.20.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

28.20.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

28.20.42. Finished OPT passes. (There is nothing left to do.)

28.21. Executing TECHMAP pass (map to technology primitives).

28.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

28.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=29\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=29\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=29\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=33\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=9 for cells of type $pmux.
Using template $paramod$constmap:27416298eff2bef5b024d2c6ba87bd3d61407e73$paramod$82cc366d01f8fe741c66522b043725b812342daf\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=6 for cells of type $pmux.
Using template $paramod$constmap:dbcddb7b4524c1c5fa25e15435f3b9049e3d7d7a$paramod$7ef3ad10a9687337780288b591d283c11b1fd9ea\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$70c4eba548f8011e647fa410bb9937e224a61f0e\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=18\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=34\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper maccmap for cells of type $macc.
  add { \ex_block_i.gen_multdiv_fast.multdiv_i.sign_a \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_op_a } * { \ex_block_i.gen_multdiv_fast.multdiv_i.sign_b \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_op_b } (17x17 bits, signed)
  add \ex_block_i.gen_multdiv_fast.multdiv_i.accum (34 bits, signed)
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=17\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=9\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=64\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=13 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=9\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=15 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=15 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=13 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=12 for cells of type $pmux.
Using template $paramod$constmap:087bfedf5adb861684835f4fd4823e581f87d305$paramod$6e7719328f2d94689b6b8e5526363af5462deb90\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=64 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=31 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=30 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=33 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=34 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=34\B_WIDTH=34\Y_WIDTH=34 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=34 for cells of type $lcu.
No more expansions possible.
<suppressed ~7248 debug messages>

28.22. Executing OPT pass (performing simple optimizations).

28.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~16983 debug messages>

28.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~11745 debug messages>
Removed a total of 3915 cells.

28.22.3. Executing OPT_DFF pass (perform DFF optimizations).

28.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 8752 unused cells and 7318 unused wires.
<suppressed ~8753 debug messages>

28.22.5. Finished fast OPT passes.

28.23. Executing ABC pass (technology mapping using ABC).

28.23.1. Extracting gate netlist of module `\ibex_core' to `<abc-temp-dir>/input.blif'..
Extracted 14652 gates and 16732 wires to a netlist network with 2078 inputs and 862 outputs.

28.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

28.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      677
ABC RESULTS:            ANDNOT cells:     3475
ABC RESULTS:               MUX cells:     4313
ABC RESULTS:              NAND cells:      382
ABC RESULTS:               NOR cells:      760
ABC RESULTS:               NOT cells:     1491
ABC RESULTS:                OR cells:     2486
ABC RESULTS:             ORNOT cells:      542
ABC RESULTS:              XNOR cells:      377
ABC RESULTS:               XOR cells:      768
ABC RESULTS:        internal signals:    13792
ABC RESULTS:           input signals:     2078
ABC RESULTS:          output signals:      862
Removing temp directory.

28.24. Executing OPT pass (performing simple optimizations).

28.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~2447 debug messages>

28.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

28.24.3. Executing OPT_DFF pass (perform DFF optimizations).

28.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 10 unused cells and 6241 unused wires.
<suppressed ~392 debug messages>

28.24.5. Finished fast OPT passes.

28.25. Executing HIERARCHY pass (managing design hierarchy).

28.25.1. Analyzing design hierarchy..
Top module:  \ibex_core

28.25.2. Analyzing design hierarchy..
Top module:  \ibex_core
Removed 0 unused modules.

28.26. Printing statistics.

=== ibex_core ===

   Number of wires:              15436
   Number of wire bits:          31599
   Number of public wires:         998
   Number of public wire bits:   17161
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              17165
     $_ANDNOT_                    3470
     $_AND_                        674
     $_DFFE_PN0P_                 1623
     $_DFFE_PN1N_                    2
     $_DFFE_PN1P_                    4
     $_DFFE_PN_                     82
     $_DFFE_PP_                    190
     $_DFF_PN0_                     27
     $_DFF_PN1_                      2
     $_MUX_                       4311
     $_NAND_                       380
     $_NOR_                        756
     $_NOT_                       1481
     $_ORNOT_                      540
     $_OR_                        2476
     $_SDFFCE_PN0N_                  1
     $_XNOR_                       377
     $_XOR_                        768
     sky130_fd_sc_hd__dlclkp_1       1

28.27. Executing CHECK pass (checking for obvious problems).
checking module ibex_core..
found and reported 0 problems.

29. Executing SHARE pass (SAT-based resource sharing).

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

30.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$21831 ($_DFF_PN0_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [0], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [2]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$21830 ($_DFF_PN0_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [2], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [1]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$21722 ($_DFF_PN0_) from module ibex_core (D = $abc$68725$new_n8741_, Q = \load_store_unit_i.data_type_q [2]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$21721 ($_DFF_PN0_) from module ibex_core (D = $abc$68725$new_n8743_, Q = \load_store_unit_i.data_type_q [1]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$18362 ($_DFF_PN0_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [1], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [5]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$18359 ($_DFF_PN0_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [4], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [2]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$18357 ($_DFF_PN1_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [3], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [0]).

30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

30.9. Rerunning OPT passes. (Maybe there is more to do..)

30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

30.13. Executing OPT_DFF pass (perform DFF optimizations).

30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

30.16. Finished OPT passes. (There is nothing left to do.)

31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 818 unused wires.
<suppressed ~818 debug messages>

32. Printing statistics.

=== ibex_core ===

   Number of wires:              14611
   Number of wire bits:          17647
   Number of public wires:         180
   Number of public wire bits:    3216
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              17158
     $_ANDNOT_                    3470
     $_AND_                        674
     $_DFFE_PN0P_                 1629
     $_DFFE_PN1N_                    2
     $_DFFE_PN1P_                    5
     $_DFFE_PN_                     82
     $_DFFE_PP_                    190
     $_DFF_PN0_                     21
     $_DFF_PN1_                      1
     $_MUX_                       4304
     $_NAND_                       380
     $_NOR_                        756
     $_NOT_                       1481
     $_ORNOT_                      540
     $_OR_                        2476
     $_SDFFCE_PN0N_                  1
     $_XNOR_                       377
     $_XOR_                        768
     sky130_fd_sc_hd__dlclkp_1       1

33. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_4 (noninv, pins=3, area=23.77) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_4 (noninv, pins=4, area=28.78) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_4 (noninv, pins=4, area=30.03) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_4 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_4 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_4 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

33.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\ibex_core':
  mapped 1650 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_4 cells.
  mapped 8 $_DFF_PN1_ cells to \sky130_fd_sc_hd__dfstp_4 cells.
  mapped 273 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_4 cells.

34. Printing statistics.

=== ibex_core ===

   Number of wires:              16521
   Number of wire bits:          19557
   Number of public wires:         180
   Number of public wire bits:    3216
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              19068
     $_ANDNOT_                    3470
     $_AND_                        674
     $_MUX_                       6214
     $_NAND_                       380
     $_NOR_                        756
     $_NOT_                       1481
     $_ORNOT_                      540
     $_OR_                        2476
     $_XNOR_                       377
     $_XOR_                        768
     sky130_fd_sc_hd__dfrtp_4     1650
     sky130_fd_sc_hd__dfstp_4        8
     sky130_fd_sc_hd__dfxtp_4      273
     sky130_fd_sc_hd__dlclkp_1       1

35. Executing ABC pass (technology mapping using ABC).

35.1. Extracting gate netlist of module `\ibex_core' to `/tmp/yosys-abc-QjEipS/input.blif'..
Extracted 17136 gates and 19217 wires to a netlist network with 2079 inputs and 2032 outputs.

35.1.1. Executing ABC.
Running ABC command: /build/bin/yosys-abc -s -f /tmp/yosys-abc-QjEipS/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-QjEipS/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-QjEipS/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/ibex/runs/mult_iterations_4/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.02 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/ibex/runs/mult_iterations_4/tmp/trimmed.lib" has 43 cells (6 skipped: 6 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.02 sec
ABC: Memory =    1.92 MB. Time =     0.02 sec
ABC: + read_constr -v /openLANE_flow/designs/ibex/runs/mult_iterations_4/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/ibex/runs/mult_iterations_4/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: Abc_NtkFastExtract: Nodes have duplicated fanins. FX is not performed.
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 10000 -M 6 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + map -p -B 0.2 -A 0.9 -M 0 
ABC: The cell areas are multiplied by the factor: <num_fanins> ^ (0.90).
ABC: The cell delays are multiplied by the factor: <num_fanins> ^ (0.20).
ABC: + retime -D -D 10000 
ABC: + buffer -N 5 -S 1000.0 
ABC: + upsize -D 10000 
ABC: Current delay (7080.50 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  23100 ( 29.6 %)   Cap = 16.4 ff (  0.0 %)   Area =   288190.16 (100.0 %)   Delay =  9417.92 ps  ( 11.9 %)               
ABC: Path  0 --    1773 : 0    2 pi                        A =   0.00  Df =  13.9   -9.3 ps  S =  27.5 ps  Cin =  0.0 ff  Cout =  11.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    4121 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 448.0 -197.7 ps  S = 566.4 ps  Cin =  2.1 ff  Cout =  48.4 ff  Cmax = 130.0 ff  G = 2185  
ABC: Path  2 --    4134 : 1    4 sky130_fd_sc_hd__inv_8    A =  11.26  Df = 526.7 -122.3 ps  S = 104.8 ps  Cin = 17.7 ff  Cout =  35.7 ff  Cmax =1035.5 ff  G =  192  
ABC: Path  3 --    4135 : 3    5 sky130_fd_sc_hd__nor3_4   A =  16.27  Df = 849.2 -250.4 ps  S = 387.0 ps  Cin =  8.7 ff  Cout =  33.5 ff  Cmax = 153.8 ff  G =  366  
ABC: Path  4 --    5974 : 3    1 sky130_fd_sc_hd__and3_4   A =  11.26  Df =1091.9 -293.8 ps  S =  41.4 ps  Cin =  2.4 ff  Cout =   2.2 ff  Cmax = 532.8 ff  G =   86  
ABC: Path  5 --    5975 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =1580.8 -501.4 ps  S = 639.0 ps  Cin =  2.1 ff  Cout =  54.6 ff  Cmax = 130.0 ff  G = 2488  
ABC: Path  6 --    5976 : 3    1 sky130_fd_sc_hd__o21ai_4  A =  16.27  Df =1701.3 -472.1 ps  S = 127.0 ps  Cin =  8.8 ff  Cout =   9.2 ff  Cmax = 224.3 ff  G =  100  
ABC: Path  7 --    5977 : 3    1 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =1819.1 -502.6 ps  S =  82.4 ps  Cin =  8.7 ff  Cout =   9.2 ff  Cmax = 469.7 ff  G =   99  
ABC: Path  8 --    5978 : 3    2 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =1861.9 -128.5 ps  S = 136.2 ps  Cin =  8.8 ff  Cout =  11.5 ff  Cmax = 221.6 ff  G =  124  
ABC: Path  9 --    5991 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =2123.3  -15.5 ps  S = 459.4 ps  Cin =  2.1 ff  Cout =  38.8 ff  Cmax = 130.0 ff  G = 1773  
ABC: Path 10 --    5992 : 3    3 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =2285.0   -4.5 ps  S = 149.8 ps  Cin =  8.7 ff  Cout =  21.4 ff  Cmax = 469.7 ff  G =  234  
ABC: Path 11 --    5993 : 2    4 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =2452.6  -69.4 ps  S = 127.5 ps  Cin =  8.7 ff  Cout =  35.7 ff  Cmax = 530.1 ff  G =  398  
ABC: Path 12 --    6013 : 3    1 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =2533.6  -74.2 ps  S =  66.7 ps  Cin =  8.7 ff  Cout =   8.8 ff  Cmax = 469.7 ff  G =   99  
ABC: Path 13 --    6026 : 3    3 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =2711.5 -144.1 ps  S = 130.7 ps  Cin =  8.7 ff  Cout =  30.3 ff  Cmax = 469.7 ff  G =  333  
ABC: Path 14 --    6027 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =3052.7 -252.3 ps  S = 389.8 ps  Cin =  2.1 ff  Cout =  32.8 ff  Cmax = 130.0 ff  G = 1484  
ABC: Path 15 --    6042 : 2    2 sky130_fd_sc_hd__nor2_4   A =  11.26  Df =3117.4 -176.2 ps  S =  70.0 ps  Cin =  8.7 ff  Cout =   4.4 ff  Cmax = 251.8 ff  G =   48  
ABC: Path 16 --    6043 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =3304.9  -81.2 ps  S = 326.3 ps  Cin =  2.1 ff  Cout =  27.3 ff  Cmax = 130.0 ff  G = 1216  
ABC: Path 17 --    6412 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =3634.1  -69.2 ps  S = 452.4 ps  Cin =  2.1 ff  Cout =  38.4 ff  Cmax = 130.0 ff  G = 1711  
ABC: Path 18 --    8620 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =4017.5 -189.7 ps  S = 401.3 ps  Cin =  2.1 ff  Cout =  34.0 ff  Cmax = 130.0 ff  G = 1517  
ABC: Path 19 --   10104 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =4433.9 -328.8 ps  S = 453.7 ps  Cin =  2.1 ff  Cout =  38.6 ff  Cmax = 130.0 ff  G = 1747  
ABC: Path 20 --   10171 : 3    2 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =4639.1 -262.4 ps  S =  56.8 ps  Cin =  4.5 ff  Cout =  13.4 ff  Cmax = 568.6 ff  G =  287  
ABC: Path 21 --   10251 : 3    1 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =4739.4 -176.4 ps  S =  29.6 ps  Cin =  4.5 ff  Cout =   2.4 ff  Cmax = 568.6 ff  G =   51  
ABC: Path 22 --   10253 : 2    1 sky130_fd_sc_hd__and2_4   A =   8.76  Df =4881.9  -31.5 ps  S =  30.0 ps  Cin =  2.4 ff  Cout =   2.2 ff  Cmax = 539.3 ff  G =   88  
ABC: Path 23 --   10254 : 1    4 sky130_fd_sc_hd__buf_1    A =   3.75  Df =5214.4 -111.8 ps  S = 463.5 ps  Cin =  2.1 ff  Cout =  39.4 ff  Cmax = 130.0 ff  G = 1788  
ABC: Path 24 --   10515 : 4    2 sky130_fd_sc_hd__and4_4   A =  11.26  Df =5544.7 -215.7 ps  S =  77.8 ps  Cin =  2.4 ff  Cout =  11.8 ff  Cmax = 531.9 ff  G =  475  
ABC: Path 25 --   10516 : 2    1 sky130_fd_sc_hd__and2_4   A =   8.76  Df =5696.6 -209.0 ps  S =  54.5 ps  Cin =  2.4 ff  Cout =   9.3 ff  Cmax = 539.3 ff  G =  372  
ABC: Path 26 --   10517 : 2    2 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =5759.7 -191.5 ps  S =  72.8 ps  Cin =  8.7 ff  Cout =  17.6 ff  Cmax = 530.1 ff  G =  198  
ABC: Path 27 --   10656 : 2    1 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =5821.3 -187.3 ps  S =  48.6 ps  Cin =  8.7 ff  Cout =   8.8 ff  Cmax = 530.1 ff  G =   98  
ABC: Path 28 --   10658 : 2    4 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =5903.7 -161.8 ps  S = 123.4 ps  Cin =  8.7 ff  Cout =  36.2 ff  Cmax = 530.1 ff  G =  404  
ABC: Path 29 --   10670 : 3    1 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =6073.8 -120.8 ps  S = 121.8 ps  Cin =  8.8 ff  Cout =   9.2 ff  Cmax = 221.6 ff  G =   99  
ABC: Path 30 --   10671 : 4    1 sky130_fd_sc_hd__nand4_4  A =  21.27  Df =6188.7 -137.8 ps  S =  83.4 ps  Cin =  8.6 ff  Cout =   9.3 ff  Cmax = 358.0 ff  G =  101  
ABC: Path 31 --   10672 : 2    2 sky130_fd_sc_hd__nor2_4   A =  11.26  Df =6330.5 -228.9 ps  S = 137.8 ps  Cin =  8.7 ff  Cout =  17.5 ff  Cmax = 251.8 ff  G =  196  
ABC: Path 32 --   10694 : 3    4 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =6473.1 -263.8 ps  S = 143.2 ps  Cin =  8.7 ff  Cout =  35.2 ff  Cmax = 469.7 ff  G =  393  
ABC: Path 33 --   10715 : 2    2 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =6593.7 -301.7 ps  S =  78.0 ps  Cin =  8.7 ff  Cout =  19.0 ff  Cmax = 530.1 ff  G =  208  
ABC: Path 34 --   10716 : 2    3 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =6708.7  -42.7 ps  S =  79.9 ps  Cin =  8.7 ff  Cout =  20.0 ff  Cmax = 530.1 ff  G =  225  
ABC: Path 35 --   10721 : 3    1 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =6776.4  -46.8 ps  S =  93.6 ps  Cin =  8.7 ff  Cout =   8.8 ff  Cmax = 469.7 ff  G =   98  
ABC: Path 36 --   10723 : 2    2 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =6873.5  -80.0 ps  S =  73.1 ps  Cin =  8.7 ff  Cout =  17.7 ff  Cmax = 530.1 ff  G =  197  
ABC: Path 37 --   10744 : 2    4 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =6945.0  -64.4 ps  S =  86.1 ps  Cin =  8.7 ff  Cout =  22.5 ff  Cmax = 530.1 ff  G =  254  
ABC: Path 38 --   10800 : 4    3 sky130_fd_sc_hd__nand4_4  A =  21.27  Df =7072.6  -39.0 ps  S = 184.1 ps  Cin =  8.6 ff  Cout =  36.8 ff  Cmax = 358.0 ff  G =  407  
ABC: Path 39 --   21706 : 2    1 sky130_fd_sc_hd__nor2_4   A =  11.26  Df =7179.9  -58.6 ps  S = 104.2 ps  Cin =  8.7 ff  Cout =   9.3 ff  Cmax = 251.8 ff  G =   99  
ABC: Path 40 --   21707 : 2    1 sky130_fd_sc_hd__nor2_4   A =  11.26  Df =7302.9  -80.4 ps  S =  91.0 ps  Cin =  8.7 ff  Cout =   9.3 ff  Cmax = 251.8 ff  G =   98  
ABC: Path 41 --   21708 : 4    4 sky130_fd_sc_hd__nor4_4   A =  21.27  Df =7556.9 -188.3 ps  S = 466.1 ps  Cin =  8.5 ff  Cout =  27.6 ff  Cmax = 112.6 ff  G =  308  
ABC: Path 42 --   21714 : 4    3 sky130_fd_sc_hd__nand4_4  A =  21.27  Df =7851.3 -105.7 ps  S = 183.3 ps  Cin =  8.6 ff  Cout =  23.0 ff  Cmax = 358.0 ff  G =  253  
ABC: Path 43 --   21722 : 3    3 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =8065.2 -103.3 ps  S = 297.6 ps  Cin =  8.8 ff  Cout =  36.8 ff  Cmax = 221.6 ff  G =  395  
ABC: Path 44 --   24488 : 1    5 sky130_fd_sc_hd__inv_8    A =  11.26  Df =8127.9  -66.2 ps  S =  64.1 ps  Cin = 17.7 ff  Cout =  24.0 ff  Cmax =1035.5 ff  G =  132  
ABC: Path 45 --   24490 : 3    2 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =8186.1  -72.6 ps  S =  54.8 ps  Cin =  8.7 ff  Cout =   4.4 ff  Cmax = 469.7 ff  G =   48  
ABC: Path 46 --   24491 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =8516.5 -193.9 ps  S = 401.9 ps  Cin =  2.1 ff  Cout =  33.8 ff  Cmax = 130.0 ff  G = 1545  
ABC: Path 47 --   25229 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =8714.6 -216.7 ps  S = 139.8 ps  Cin =  2.1 ff  Cout =  11.0 ff  Cmax = 130.0 ff  G =  499  
ABC: Path 48 --   25230 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =9156.6 -399.2 ps  S = 534.4 ps  Cin =  2.1 ff  Cout =  45.4 ff  Cmax = 130.0 ff  G = 2050  
ABC: Path 49 --   25233 : 3    1 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =9241.9 -380.0 ps  S = 100.0 ps  Cin =  8.7 ff  Cout =   2.6 ff  Cmax = 469.7 ff  G =   28  
ABC: Path 50 --   25234 : 3    1 sky130_fd_sc_hd__a21boi_4 A =  18.77  Df =9417.9 -132.8 ps  S = 177.6 ps  Cin =  6.8 ff  Cout =  17.6 ff  Cmax = 215.2 ff  G =  260  
ABC: Start-point = pi1772 (\id_stage_i.controller_i.instr_i [4]).  End-point = po1750 ($auto$rtlil.cc:2290:MuxGate$84441).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 2079/ 2032  lat =    0  nd = 23100  edge =  53546  area =137374.98  delay =5157.47  lev = 59
ABC: + write_blif /tmp/yosys-abc-QjEipS/output.blif 

35.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a2111o_4 cells:       44
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_4 cells:       96
ABC RESULTS:   sky130_fd_sc_hd__a211o_4 cells:      685
ABC RESULTS:   sky130_fd_sc_hd__a21bo_4 cells:      119
ABC RESULTS:   sky130_fd_sc_hd__a21boi_4 cells:      236
ABC RESULTS:   sky130_fd_sc_hd__a21o_4 cells:     1714
ABC RESULTS:   sky130_fd_sc_hd__a21oi_4 cells:     1200
ABC RESULTS:   sky130_fd_sc_hd__a22oi_4 cells:       71
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_4 cells:       61
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_4 cells:       66
ABC RESULTS:   sky130_fd_sc_hd__a32o_4 cells:       59
ABC RESULTS:   sky130_fd_sc_hd__a32oi_4 cells:       71
ABC RESULTS:   sky130_fd_sc_hd__a41o_4 cells:       78
ABC RESULTS:   sky130_fd_sc_hd__a41oi_4 cells:       81
ABC RESULTS:   sky130_fd_sc_hd__and2_4 cells:      927
ABC RESULTS:   sky130_fd_sc_hd__and3_4 cells:      233
ABC RESULTS:   sky130_fd_sc_hd__and4_4 cells:      413
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:     4904
ABC RESULTS:   sky130_fd_sc_hd__inv_8 cells:     1937
ABC RESULTS:   sky130_fd_sc_hd__maj3_4 cells:       33
ABC RESULTS:   sky130_fd_sc_hd__nand2_4 cells:     2802
ABC RESULTS:   sky130_fd_sc_hd__nand3_4 cells:     2407
ABC RESULTS:   sky130_fd_sc_hd__nand4_4 cells:      776
ABC RESULTS:   sky130_fd_sc_hd__nor2_4 cells:     1141
ABC RESULTS:   sky130_fd_sc_hd__nor3_4 cells:      231
ABC RESULTS:   sky130_fd_sc_hd__nor4_4 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__o21a_4 cells:      577
ABC RESULTS:   sky130_fd_sc_hd__o21ai_4 cells:     1529
ABC RESULTS:   sky130_fd_sc_hd__o22a_4 cells:       47
ABC RESULTS:   sky130_fd_sc_hd__o32a_4 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__o32ai_4 cells:       28
ABC RESULTS:   sky130_fd_sc_hd__o41a_4 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__o41ai_4 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__or2_4 cells:      132
ABC RESULTS:   sky130_fd_sc_hd__or3_4 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__or4_4 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__xnor2_4 cells:       94
ABC RESULTS:   sky130_fd_sc_hd__xor2_4 cells:      182
ABC RESULTS:        internal signals:    15106
ABC RESULTS:           input signals:     2079
ABC RESULTS:          output signals:     2032
Removing temp directory.

36. Executing SETUNDEF pass (replace undef values with defined constants).

37. Executing HILOMAP pass (mapping to constant drivers).

38. Executing SPLITNETS pass (splitting up multi-bit signals).

39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 141 unused cells and 19657 unused wires.
<suppressed ~1115 debug messages>

40. Executing INSBUF pass (insert buffer cells for connected wires).
Added ibex_core.$auto$insbuf.cc:79:execute$111219: \ex_block_i.alu_adder_result_ex_o[2] -> \data_addr_o [2]
Added ibex_core.$auto$insbuf.cc:79:execute$111220: \ex_block_i.alu_adder_result_ex_o[3] -> \data_addr_o [3]
Added ibex_core.$auto$insbuf.cc:79:execute$111221: \ex_block_i.alu_adder_result_ex_o[4] -> \data_addr_o [4]
Added ibex_core.$auto$insbuf.cc:79:execute$111222: \ex_block_i.alu_adder_result_ex_o[5] -> \data_addr_o [5]
Added ibex_core.$auto$insbuf.cc:79:execute$111223: \ex_block_i.alu_adder_result_ex_o[6] -> \data_addr_o [6]
Added ibex_core.$auto$insbuf.cc:79:execute$111224: \ex_block_i.alu_adder_result_ex_o[7] -> \data_addr_o [7]
Added ibex_core.$auto$insbuf.cc:79:execute$111225: \ex_block_i.alu_adder_result_ex_o[8] -> \data_addr_o [8]
Added ibex_core.$auto$insbuf.cc:79:execute$111226: \ex_block_i.alu_adder_result_ex_o[9] -> \data_addr_o [9]
Added ibex_core.$auto$insbuf.cc:79:execute$111227: \ex_block_i.alu_adder_result_ex_o[10] -> \data_addr_o [10]
Added ibex_core.$auto$insbuf.cc:79:execute$111228: \ex_block_i.alu_adder_result_ex_o[11] -> \data_addr_o [11]
Added ibex_core.$auto$insbuf.cc:79:execute$111229: \ex_block_i.alu_adder_result_ex_o[12] -> \data_addr_o [12]
Added ibex_core.$auto$insbuf.cc:79:execute$111230: \ex_block_i.alu_adder_result_ex_o[13] -> \data_addr_o [13]
Added ibex_core.$auto$insbuf.cc:79:execute$111231: \ex_block_i.alu_adder_result_ex_o[14] -> \data_addr_o [14]
Added ibex_core.$auto$insbuf.cc:79:execute$111232: \ex_block_i.alu_adder_result_ex_o[15] -> \data_addr_o [15]
Added ibex_core.$auto$insbuf.cc:79:execute$111233: \ex_block_i.alu_adder_result_ex_o[16] -> \data_addr_o [16]
Added ibex_core.$auto$insbuf.cc:79:execute$111234: \ex_block_i.alu_adder_result_ex_o[17] -> \data_addr_o [17]
Added ibex_core.$auto$insbuf.cc:79:execute$111235: \ex_block_i.alu_adder_result_ex_o[18] -> \data_addr_o [18]
Added ibex_core.$auto$insbuf.cc:79:execute$111236: \ex_block_i.alu_adder_result_ex_o[19] -> \data_addr_o [19]
Added ibex_core.$auto$insbuf.cc:79:execute$111237: \ex_block_i.alu_adder_result_ex_o[20] -> \data_addr_o [20]
Added ibex_core.$auto$insbuf.cc:79:execute$111238: \ex_block_i.alu_adder_result_ex_o[21] -> \data_addr_o [21]
Added ibex_core.$auto$insbuf.cc:79:execute$111239: \ex_block_i.alu_adder_result_ex_o[22] -> \data_addr_o [22]
Added ibex_core.$auto$insbuf.cc:79:execute$111240: \ex_block_i.alu_adder_result_ex_o[23] -> \data_addr_o [23]
Added ibex_core.$auto$insbuf.cc:79:execute$111241: \ex_block_i.alu_adder_result_ex_o[24] -> \data_addr_o [24]
Added ibex_core.$auto$insbuf.cc:79:execute$111242: \ex_block_i.alu_adder_result_ex_o[25] -> \data_addr_o [25]
Added ibex_core.$auto$insbuf.cc:79:execute$111243: \ex_block_i.alu_adder_result_ex_o[26] -> \data_addr_o [26]
Added ibex_core.$auto$insbuf.cc:79:execute$111244: \ex_block_i.alu_adder_result_ex_o[27] -> \data_addr_o [27]
Added ibex_core.$auto$insbuf.cc:79:execute$111245: \ex_block_i.alu_adder_result_ex_o[28] -> \data_addr_o [28]
Added ibex_core.$auto$insbuf.cc:79:execute$111246: \ex_block_i.alu_adder_result_ex_o[29] -> \data_addr_o [29]
Added ibex_core.$auto$insbuf.cc:79:execute$111247: \ex_block_i.alu_adder_result_ex_o[30] -> \data_addr_o [30]
Added ibex_core.$auto$insbuf.cc:79:execute$111248: \ex_block_i.alu_adder_result_ex_o[31] -> \data_addr_o [31]

41. Executing CHECK pass (checking for obvious problems).
checking module ibex_core..
found and reported 0 problems.

42. Printing statistics.

=== ibex_core ===

   Number of wires:              24992
   Number of wire bits:          25226
   Number of public wires:        2009
   Number of public wire bits:    2243
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              25068
     sky130_fd_sc_hd__a2111o_4      44
     sky130_fd_sc_hd__a2111oi_4     96
     sky130_fd_sc_hd__a211o_4      685
     sky130_fd_sc_hd__a21bo_4      119
     sky130_fd_sc_hd__a21boi_4     236
     sky130_fd_sc_hd__a21o_4      1714
     sky130_fd_sc_hd__a21oi_4     1200
     sky130_fd_sc_hd__a22oi_4       71
     sky130_fd_sc_hd__a2bb2o_4      61
     sky130_fd_sc_hd__a2bb2oi_4     66
     sky130_fd_sc_hd__a32o_4        59
     sky130_fd_sc_hd__a32oi_4       71
     sky130_fd_sc_hd__a41o_4        78
     sky130_fd_sc_hd__a41oi_4       81
     sky130_fd_sc_hd__and2_4       927
     sky130_fd_sc_hd__and3_4       233
     sky130_fd_sc_hd__and4_4       413
     sky130_fd_sc_hd__buf_1       4904
     sky130_fd_sc_hd__buf_2         30
     sky130_fd_sc_hd__conb_1         6
     sky130_fd_sc_hd__dfrtp_4     1650
     sky130_fd_sc_hd__dfstp_4        8
     sky130_fd_sc_hd__dfxtp_4      273
     sky130_fd_sc_hd__dlclkp_1       1
     sky130_fd_sc_hd__inv_8       1937
     sky130_fd_sc_hd__maj3_4        33
     sky130_fd_sc_hd__nand2_4     2802
     sky130_fd_sc_hd__nand3_4     2407
     sky130_fd_sc_hd__nand4_4      776
     sky130_fd_sc_hd__nor2_4      1141
     sky130_fd_sc_hd__nor3_4       231
     sky130_fd_sc_hd__nor4_4        32
     sky130_fd_sc_hd__o21a_4       577
     sky130_fd_sc_hd__o21ai_4     1529
     sky130_fd_sc_hd__o22a_4        47
     sky130_fd_sc_hd__o32a_4        20
     sky130_fd_sc_hd__o32ai_4       28
     sky130_fd_sc_hd__o41a_4        17
     sky130_fd_sc_hd__o41ai_4       32
     sky130_fd_sc_hd__or2_4        132
     sky130_fd_sc_hd__or3_4         22
     sky130_fd_sc_hd__or4_4          3
     sky130_fd_sc_hd__xnor2_4       94
     sky130_fd_sc_hd__xor2_4       182

   Area for cell type \sky130_fd_sc_hd__buf_2 is unknown!
   Area for cell type \sky130_fd_sc_hd__dlclkp_1 is unknown!

   Chip area for module '\ibex_core': 342425.913600

43. Executing Verilog backend.
Dumping module `\ibex_core'.

Warnings: 6 unique messages, 7 total
End of script. Logfile hash: 7d47970a76, CPU: user 30.03s system 0.12s, MEM: 197.32 MB peak
Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)
Time spent: 29% 2x abc (12 sec), 14% 37x opt_expr (6 sec), ...
